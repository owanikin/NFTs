{"id":"57f84da44869ee0a9eb7e303cba39da4","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"contracts/RandomipfsNft.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport '@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol';\nimport '@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol';\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\nerror RandomIpfsNft__RangeOutOfBounds();\nerror RandomIpfsNft__NeedMoreETHSent();\nerror RandomIpfsNft__TransferFailed();\n\ncontract RandomIpfsNft is VRFConsumerBaseV2, ERC721URIStorage, Ownable {\n    // when we mint an NFT, we will trigger a Chainlink VRF call to get us a random number\n    // using that number, we will get a random NFT.\n    // Pug, Shiba Inu, St. Bernard\n    // Pug super rare\n    // Shiba sort of rare\n    // St. bernard common\n\n    // Users have to pay to mint an NFT\n    // The owner of the contract can withdraw the ETH\n\n    // Type Declaration\n    enum Breed {\n        PUG,\n        SHIBA_INU,\n        ST_BERNARD\n    }\n\n    // Chainlink VRF Variables \n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\n    uint64 private immutable i_subscriptionId;\n    bytes32 private immutable i_gasLane;\n    uint32 private immutable i_callbackGasLimit;\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\n    uint32 private constant NUM_WORDS = 1;\n\n    // VRF Helpers\n    mapping(uint256 => address) public s_requestIdToSender;\n\n    // NFT Variables\n    uint256 public s_tokenCounter;\n    uint256 internal constant MAX_CHANCE_VALUE = 100;\n    string[] internal s_dogTokenUris;\n    uint256 internal immutable i_mintFee;\n\n    // Events\n    event NftRequested(uint256 indexed requestId, address requester);\n    event NftMinted(Breed dogBreed, address minter);\n\n    constructor(address vrfCoordinatorV2, uint64 subscriptionId, bytes32 gasLane, uint32 callbackGasLimit, string[] memory dogTokenUris, uint256 mintFee) VRFConsumerBaseV2 (vrfCoordinatorV2) ERC721(\"Random IPFS NFT\", \"RIN\") {\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\n        i_subscriptionId = subscriptionId;\n        i_gasLane = gasLane;\n        i_callbackGasLimit = callbackGasLimit;\n        s_dogTokenUris = dogTokenUris;\n        i_mintFee = mintFee;\n    }\n\n    function requestNft() public payable returns (uint256 requestId) {\n        if (msg.value < i_mintFee) {\n            revert RandomIpfsNft__NeedMoreETHSent();\n        }\n        requestId = i_vrfCoordinator.requestRandomWords(\n            i_gasLane,\n            i_subscriptionId,\n            REQUEST_CONFIRMATIONS,\n            i_callbackGasLimit,\n            NUM_WORDS\n        );\n        s_requestIdToSender[requestId] = msg.sender;\n        emit NftRequested(requestId, msg.sender);\n    }\n\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\n        address dogOwner = s_requestIdToSender[requestId];\n        uint256 newTokenId = s_tokenCounter;\n        uint256 moddedRng = randomWords[0] % MAX_CHANCE_VALUE;\n        Breed dogBreed = getBreedFromModdedRng(moddedRng);\n        s_tokenCounter += s_tokenCounter;\n        _safeMint(dogOwner, newTokenId);\n        _setTokenURI(newTokenId, s_dogTokenUris[uint256(dogBreed)]);\n        emit NftMinted(dogBreed, dogOwner);\n    }\n\n    function withdraw() public onlyOwner {\n        uint256 amount = address(this).balance;\n        (bool success, ) = payable(msg.sender).call{value: amount}(\"\");\n        if(!success) { revert RandomIpfsNft__TransferFailed();}\n    }\n\n    function getBreedFromModdedRng(uint256 moddedRng) public pure returns (Breed) {\n        uint256 cummulativeSum = 0;\n        uint256[3] memory chanceArray = getChanceArray();\n        for(uint256 i = 0; i < chanceArray.length; i++) {\n            if(moddedRng >= cummulativeSum && moddedRng < cummulativeSum + chanceArray[i]) {\n                return Breed(i);\n            }\n            cummulativeSum += chanceArray[i];\n        }\n        revert RandomIpfsNft__RangeOutOfBounds(); \n    }\n\n    function getChanceArray() public pure returns (uint256[3] memory) {\n        return [10, 30, MAX_CHANCE_VALUE];\n    }\n\n    function getMintFee() public view returns (uint256) {\n        return i_mintFee;\n    }\n\n    function getDogTokenUris(uint256 index) public view returns (string memory) {\n        return s_dogTokenUris[index];\n    }\n\n    function getTokenCounter() public view returns (uint256) {\n        return s_tokenCounter;\n    }\n    // function tokenURI(uint256) public view override returns (string memory) {}\n}"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig()\n    external\n    view\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    );\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(uint64 subId)\n    external\n    view\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    );\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\n     * the storage mapping.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner nor approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[57]},"id":58,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":true,"baseContracts":[],"canonicalName":"VRFConsumerBaseV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"57:5275:0","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":57,"linearizedBaseContracts":[57],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:0","nodeType":"ContractDefinition","nodes":[{"id":8,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:0","nodeType":"ErrorDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"have","nameLocation":"5413:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5405:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6,"mutability":"mutable","name":"want","nameLocation":"5427:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5419:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:0"},"src":"5373:60:0"},{"constant":false,"id":10,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:0","nodeType":"VariableDeclaration","scope":57,"src":"5436:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":20,"nodeType":"Block","src":"5593:43:0","statements":[{"expression":{"id":18,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":16,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"5599:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":17,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"5616:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19,"nodeType":"ExpressionStatement","src":"5599:32:0"}]},"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"5481:72:0","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":21,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:0","nodeType":"VariableDeclaration","scope":21,"src":"5568:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"5593:0:0"},"scope":57,"src":"5556:80:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"5640:686:0","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":30,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:0","nodeType":"VariableDeclaration","scope":30,"src":"6357:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:0","nodeType":"VariableDeclaration","scope":30,"src":"6376:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":26,"nodeType":"ArrayTypeName","src":"6376:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"6422:0:0"},"scope":57,"src":"6329:94:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":55,"nodeType":"Block","src":"6707:167:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":38,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6717:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":40,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6731:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":49,"nodeType":"IfStatement","src":"6713:109:0","trueBody":{"id":48,"nodeType":"Block","src":"6747:75:0","statements":[{"errorCall":{"arguments":[{"expression":{"id":43,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6788:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":45,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6800:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":42,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"6762:25:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6762:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":47,"nodeType":"RevertStatement","src":"6755:60:0"}]}},{"expression":{"arguments":[{"id":51,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"6846:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":52,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"6857:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":50,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"6827:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6827:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"6827:42:0"}]},"functionSelector":"1fe543e3","id":56,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:0","nodeType":"VariableDeclaration","scope":56,"src":"6649:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:0","nodeType":"VariableDeclaration","scope":56,"src":"6668:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":34,"nodeType":"ArrayTypeName","src":"6668:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:0"},"returnParameters":{"id":37,"nodeType":"ParameterList","parameters":[],"src":"6707:0:0"},"scope":57,"src":"6618:256:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":58,"src":"5333:1543:0","usedErrors":[8]}],"src":"32:6845:0"},"id":0},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[153]},"id":154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":59,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFCoordinatorV2Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":153,"linearizedBaseContracts":[153],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":60,"nodeType":"StructuredDocumentation","src":"97:267:1","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":70,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:1","nodeType":"FunctionDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"392:2:1"},"returnParameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70,"src":"437:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":62,"name":"uint16","nodeType":"ElementaryTypeName","src":"437:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70,"src":"451:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":64,"name":"uint32","nodeType":"ElementaryTypeName","src":"451:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70,"src":"465:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":66,"name":"bytes32","nodeType":"ElementaryTypeName","src":"465:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":67,"nodeType":"ArrayTypeName","src":"465:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"429:58:1"},"scope":153,"src":"367:121:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"492:1511:1","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":86,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2015:18:1","nodeType":"FunctionDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"keyHash","nameLocation":"2047:7:1","nodeType":"VariableDeclaration","scope":86,"src":"2039:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":72,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2039:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"subId","nameLocation":"2067:5:1","nodeType":"VariableDeclaration","scope":86,"src":"2060:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":74,"name":"uint64","nodeType":"ElementaryTypeName","src":"2060:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2085:27:1","nodeType":"VariableDeclaration","scope":86,"src":"2078:34:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":76,"name":"uint16","nodeType":"ElementaryTypeName","src":"2078:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":79,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2125:16:1","nodeType":"VariableDeclaration","scope":86,"src":"2118:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":78,"name":"uint32","nodeType":"ElementaryTypeName","src":"2118:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":81,"mutability":"mutable","name":"numWords","nameLocation":"2154:8:1","nodeType":"VariableDeclaration","scope":86,"src":"2147:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":80,"name":"uint32","nodeType":"ElementaryTypeName","src":"2147:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2033:133:1"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"requestId","nameLocation":"2193:9:1","nodeType":"VariableDeclaration","scope":86,"src":"2185:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2184:19:1"},"scope":153,"src":"2006:198:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"2208:384:1","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":92,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2604:18:1","nodeType":"FunctionDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[],"src":"2622:2:1"},"returnParameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":90,"mutability":"mutable","name":"subId","nameLocation":"2650:5:1","nodeType":"VariableDeclaration","scope":92,"src":"2643:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":89,"name":"uint64","nodeType":"ElementaryTypeName","src":"2643:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2642:14:1"},"scope":153,"src":"2595:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"2661:381:1","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":107,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3054:15:1","nodeType":"FunctionDefinition","parameters":{"id":96,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"subId","nameLocation":"3077:5:1","nodeType":"VariableDeclaration","scope":107,"src":"3070:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":94,"name":"uint64","nodeType":"ElementaryTypeName","src":"3070:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3069:14:1"},"returnParameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"mutability":"mutable","name":"balance","nameLocation":"3133:7:1","nodeType":"VariableDeclaration","scope":107,"src":"3126:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":97,"name":"uint96","nodeType":"ElementaryTypeName","src":"3126:6:1","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"reqCount","nameLocation":"3155:8:1","nodeType":"VariableDeclaration","scope":107,"src":"3148:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":99,"name":"uint64","nodeType":"ElementaryTypeName","src":"3148:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":102,"mutability":"mutable","name":"owner","nameLocation":"3179:5:1","nodeType":"VariableDeclaration","scope":107,"src":"3171:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"3171:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":105,"mutability":"mutable","name":"consumers","nameLocation":"3209:9:1","nodeType":"VariableDeclaration","scope":107,"src":"3192:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"3192:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ArrayTypeName","src":"3192:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3118:106:1"},"scope":153,"src":"3045:180:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":108,"nodeType":"StructuredDocumentation","src":"3229:164:1","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":115,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3405:32:1","nodeType":"FunctionDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"subId","nameLocation":"3445:5:1","nodeType":"VariableDeclaration","scope":115,"src":"3438:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":109,"name":"uint64","nodeType":"ElementaryTypeName","src":"3438:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":112,"mutability":"mutable","name":"newOwner","nameLocation":"3460:8:1","nodeType":"VariableDeclaration","scope":115,"src":"3452:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:32:1"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[],"src":"3478:0:1"},"scope":153,"src":"3396:83:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"3483:212:1","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":121,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3707:31:1","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"subId","nameLocation":"3746:5:1","nodeType":"VariableDeclaration","scope":121,"src":"3739:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":117,"name":"uint64","nodeType":"ElementaryTypeName","src":"3739:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3738:14:1"},"returnParameters":{"id":120,"nodeType":"ParameterList","parameters":[],"src":"3761:0:1"},"scope":153,"src":"3698:64:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"3766:170:1","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":129,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3948:11:1","nodeType":"FunctionDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"subId","nameLocation":"3967:5:1","nodeType":"VariableDeclaration","scope":129,"src":"3960:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":123,"name":"uint64","nodeType":"ElementaryTypeName","src":"3960:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":126,"mutability":"mutable","name":"consumer","nameLocation":"3982:8:1","nodeType":"VariableDeclaration","scope":129,"src":"3974:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"3974:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3959:32:1"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[],"src":"4000:0:1"},"scope":153,"src":"3939:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"4005:172:1","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":137,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4189:14:1","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"subId","nameLocation":"4211:5:1","nodeType":"VariableDeclaration","scope":137,"src":"4204:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":131,"name":"uint64","nodeType":"ElementaryTypeName","src":"4204:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"consumer","nameLocation":"4226:8:1","nodeType":"VariableDeclaration","scope":137,"src":"4218:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4218:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4203:32:1"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"4244:0:1"},"scope":153,"src":"4180:65:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"4249:140:1","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":145,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4401:18:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"subId","nameLocation":"4427:5:1","nodeType":"VariableDeclaration","scope":145,"src":"4420:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":139,"name":"uint64","nodeType":"ElementaryTypeName","src":"4420:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"to","nameLocation":"4442:2:1","nodeType":"VariableDeclaration","scope":145,"src":"4434:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"4434:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:26:1"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[],"src":"4454:0:1"},"scope":153,"src":"4392:63:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":152,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4760:20:1","nodeType":"FunctionDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"subId","nameLocation":"4788:5:1","nodeType":"VariableDeclaration","scope":152,"src":"4781:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":146,"name":"uint64","nodeType":"ElementaryTypeName","src":"4781:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4780:14:1"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":152,"src":"4818:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4817:6:1"},"scope":153,"src":"4751:73:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":154,"src":"57:4769:1","usedErrors":[]}],"src":"32:4795:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1736],"Ownable":[266]},"id":267,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":155,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":156,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":267,"sourceUnit":1737,"src":"127:30:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":158,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1736,"src":"683:7:2"},"id":159,"nodeType":"InheritanceSpecifier","src":"683:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":157,"nodeType":"StructuredDocumentation","src":"159:494:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":266,"linearizedBaseContracts":[266,1736],"name":"Ownable","nameLocation":"672:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":161,"mutability":"mutable","name":"_owner","nameLocation":"713:6:2","nodeType":"VariableDeclaration","scope":266,"src":"697:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":167,"name":"OwnershipTransferred","nameLocation":"732:20:2","nodeType":"EventDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:2","nodeType":"VariableDeclaration","scope":167,"src":"753:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":162,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":165,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:2","nodeType":"VariableDeclaration","scope":167,"src":"784:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:2"},"src":"726:84:2"},{"body":{"id":176,"nodeType":"Block","src":"926:49:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":172,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"955:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":171,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"936:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":175,"nodeType":"ExpressionStatement","src":"936:32:2"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"816:91:2","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":177,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"923:2:2"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[],"src":"926:0:2"},"scope":266,"src":"912:63:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":184,"nodeType":"Block","src":"1084:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":180,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"1094:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":182,"nodeType":"ExpressionStatement","src":"1094:13:2"},{"id":183,"nodeType":"PlaceholderStatement","src":"1117:1:2"}]},"documentation":{"id":178,"nodeType":"StructuredDocumentation","src":"981:77:2","text":" @dev Throws if called by any account other than the owner."},"id":185,"name":"onlyOwner","nameLocation":"1072:9:2","nodeType":"ModifierDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"1081:2:2"},"src":"1063:62:2","virtual":false,"visibility":"internal"},{"body":{"id":193,"nodeType":"Block","src":"1256:30:2","statements":[{"expression":{"id":191,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"1273:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":190,"id":192,"nodeType":"Return","src":"1266:13:2"}]},"documentation":{"id":186,"nodeType":"StructuredDocumentation","src":"1131:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":194,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:2","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[],"src":"1215:2:2"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":194,"src":"1247:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:2"},"scope":266,"src":"1201:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":207,"nodeType":"Block","src":"1404:85:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":199,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"1422:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":201,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"1433:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":206,"nodeType":"ExpressionStatement","src":"1414:68:2"}]},"documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"1292:62:2","text":" @dev Throws if the sender is not the owner."},"id":208,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:2","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"1379:2:2"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"1404:0:2"},"scope":266,"src":"1359:130:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":221,"nodeType":"Block","src":"1885:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:2","typeDescriptions":{}}},"id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":214,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"1895:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":220,"nodeType":"ExpressionStatement","src":"1895:30:2"}]},"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"1495:331:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":222,"implemented":true,"kind":"function","modifiers":[{"id":212,"kind":"modifierInvocation","modifierName":{"id":211,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":185,"src":"1875:9:2"},"nodeType":"ModifierInvocation","src":"1875:9:2"}],"name":"renounceOwnership","nameLocation":"1840:17:2","nodeType":"FunctionDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"1857:2:2"},"returnParameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"1885:0:2"},"scope":266,"src":"1831:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":244,"nodeType":"Block","src":"2151:128:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":231,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"2169:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":232,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:2","typeDescriptions":{}}},"id":235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":230,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":239,"nodeType":"ExpressionStatement","src":"2161:73:2"},{"expression":{"arguments":[{"id":241,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":225,"src":"2263:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":240,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"2244:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":243,"nodeType":"ExpressionStatement","src":"2244:28:2"}]},"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"1938:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":245,"implemented":true,"kind":"function","modifiers":[{"id":228,"kind":"modifierInvocation","modifierName":{"id":227,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":185,"src":"2141:9:2"},"nodeType":"ModifierInvocation","src":"2141:9:2"}],"name":"transferOwnership","nameLocation":"2090:17:2","nodeType":"FunctionDefinition","parameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:2","nodeType":"VariableDeclaration","scope":245,"src":"2108:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:2"},"returnParameters":{"id":229,"nodeType":"ParameterList","parameters":[],"src":"2151:0:2"},"scope":266,"src":"2081:198:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":264,"nodeType":"Block","src":"2496:124:2","statements":[{"assignments":[252],"declarations":[{"constant":false,"id":252,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:2","nodeType":"VariableDeclaration","scope":264,"src":"2506:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":254,"initialValue":{"id":253,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2525:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:2"},{"expression":{"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":255,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"2541:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":256,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"2550:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":258,"nodeType":"ExpressionStatement","src":"2541:17:2"},{"eventCall":{"arguments":[{"id":260,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"2594:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":261,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"2604:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2573:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":263,"nodeType":"EmitStatement","src":"2568:45:2"}]},"documentation":{"id":246,"nodeType":"StructuredDocumentation","src":"2285:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":265,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:2","nodeType":"FunctionDefinition","parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:2","nodeType":"VariableDeclaration","scope":265,"src":"2461:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:2"},"returnParameters":{"id":250,"nodeType":"ParameterList","parameters":[],"src":"2496:0:2"},"scope":266,"src":"2433:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":267,"src":"654:1968:2","usedErrors":[]}],"src":"102:2521:2"},"id":2},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[1714],"Context":[1736],"ERC165":[1986],"ERC721":[1133],"IERC165":[1998],"IERC721":[1249],"IERC721Metadata":[1419],"IERC721Receiver":[1267],"Strings":[1962]},"id":1134,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":268,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":269,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1134,"sourceUnit":1250,"src":"132:23:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":270,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1134,"sourceUnit":1268,"src":"156:31:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":271,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1134,"sourceUnit":1420,"src":"188:42:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":272,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1134,"sourceUnit":1715,"src":"231:33:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":273,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1134,"sourceUnit":1737,"src":"265:33:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":274,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1134,"sourceUnit":1963,"src":"299:33:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":275,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1134,"sourceUnit":1987,"src":"333:46:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":277,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1736,"src":"647:7:3"},"id":278,"nodeType":"InheritanceSpecifier","src":"647:7:3"},{"baseName":{"id":279,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":1986,"src":"656:6:3"},"id":280,"nodeType":"InheritanceSpecifier","src":"656:6:3"},{"baseName":{"id":281,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1249,"src":"664:7:3"},"id":282,"nodeType":"InheritanceSpecifier","src":"664:7:3"},{"baseName":{"id":283,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":1419,"src":"673:15:3"},"id":284,"nodeType":"InheritanceSpecifier","src":"673:15:3"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":276,"nodeType":"StructuredDocumentation","src":"381:246:3","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1133,"linearizedBaseContracts":[1133,1419,1249,1986,1998,1736],"name":"ERC721","nameLocation":"637:6:3","nodeType":"ContractDefinition","nodes":[{"id":287,"libraryName":{"id":285,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":1714,"src":"701:7:3"},"nodeType":"UsingForDirective","src":"695:26:3","typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":290,"libraryName":{"id":288,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":1962,"src":"732:7:3"},"nodeType":"UsingForDirective","src":"726:26:3","typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":292,"mutability":"mutable","name":"_name","nameLocation":"791:5:3","nodeType":"VariableDeclaration","scope":1133,"src":"776:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":291,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":294,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:3","nodeType":"VariableDeclaration","scope":1133,"src":"823:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":293,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":298,"mutability":"mutable","name":"_owners","nameLocation":"934:7:3","nodeType":"VariableDeclaration","scope":1133,"src":"898:43:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":297,"keyType":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":296,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":302,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:3","nodeType":"VariableDeclaration","scope":1133,"src":"992:45:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":301,"keyType":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":306,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:3","nodeType":"VariableDeclaration","scope":1133,"src":"1093:51:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":305,"keyType":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":312,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:3","nodeType":"VariableDeclaration","scope":1133,"src":"1199:71:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":311,"keyType":{"id":307,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":310,"keyType":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":309,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":328,"nodeType":"Block","src":"1446:57:3","statements":[{"expression":{"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":320,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"1456:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":321,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"1464:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":323,"nodeType":"ExpressionStatement","src":"1456:13:3"},{"expression":{"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":324,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"1479:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":325,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1489:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":327,"nodeType":"ExpressionStatement","src":"1479:17:3"}]},"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"1277:108:3","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":329,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"name_","nameLocation":"1416:5:3","nodeType":"VariableDeclaration","scope":329,"src":"1402:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":314,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":317,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:3","nodeType":"VariableDeclaration","scope":329,"src":"1423:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:3"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[],"src":"1446:0:3"},"scope":1133,"src":"1390:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1985,1997],"body":{"id":359,"nodeType":"Block","src":"1678:192:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":340,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"1707:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":342,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"1727:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1249_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1249_$","typeString":"type(contract IERC721)"}],"id":341,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1249","typeString":"type(contract IERC721)"}},"id":344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":346,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"1763:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":348,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"1783:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1419_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1419_$","typeString":"type(contract IERC721Metadata)"}],"id":347,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1419","typeString":"type(contract IERC721Metadata)"}},"id":350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":355,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"1851:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":353,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1133_$","typeString":"type(contract super ERC721)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1985,"src":"1827:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":339,"id":358,"nodeType":"Return","src":"1688:175:3"}]},"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"1509:56:3","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":360,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:3","nodeType":"FunctionDefinition","overrides":{"id":336,"nodeType":"OverrideSpecifier","overrides":[{"id":334,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":1986,"src":"1646:6:3"},{"id":335,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1998,"src":"1654:7:3"}],"src":"1637:25:3"},"parameters":{"id":333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:3","nodeType":"VariableDeclaration","scope":360,"src":"1597:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":331,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:3"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":360,"src":"1672:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":337,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:3"},"scope":1133,"src":"1570:300:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1174],"body":{"id":383,"nodeType":"Block","src":"2010:123:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":370,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"2028:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":371,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:3","typeDescriptions":{}}},"id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":369,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":378,"nodeType":"ExpressionStatement","src":"2020:73:3"},{"expression":{"baseExpression":{"id":379,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"2110:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":381,"indexExpression":{"id":380,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"2120:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":368,"id":382,"nodeType":"Return","src":"2103:23:3"}]},"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"1876:48:3","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":384,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:3","nodeType":"FunctionDefinition","overrides":{"id":365,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:3"},"parameters":{"id":364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"owner","nameLocation":"1956:5:3","nodeType":"VariableDeclaration","scope":384,"src":"1948:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:3"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":384,"src":"2001:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:3"},"scope":1133,"src":"1929:204:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1182],"body":{"id":411,"nodeType":"Block","src":"2271:137:3","statements":[{"assignments":[394],"declarations":[{"constant":false,"id":394,"mutability":"mutable","name":"owner","nameLocation":"2289:5:3","nodeType":"VariableDeclaration","scope":411,"src":"2281:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":398,"initialValue":{"baseExpression":{"id":395,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"2297:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":397,"indexExpression":{"id":396,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"2305:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2297:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:32:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":400,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2331:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2348:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2340:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"2340:7:3","typeDescriptions":{}}},"id":404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2340:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2331:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2352:26:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":399,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2323:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2323:56:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":408,"nodeType":"ExpressionStatement","src":"2323:56:3"},{"expression":{"id":409,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2396:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":392,"id":410,"nodeType":"Return","src":"2389:12:3"}]},"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"2139:46:3","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":412,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:3","nodeType":"FunctionDefinition","overrides":{"id":389,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:3"},"parameters":{"id":388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:3","nodeType":"VariableDeclaration","scope":412,"src":"2207:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":386,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:3"},"returnParameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":412,"src":"2262:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:3"},"scope":1133,"src":"2190:218:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1404],"body":{"id":421,"nodeType":"Block","src":"2539:29:3","statements":[{"expression":{"id":419,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"2556:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":418,"id":420,"nodeType":"Return","src":"2549:12:3"}]},"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"2414:51:3","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":422,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2479:4:3","nodeType":"FunctionDefinition","overrides":{"id":415,"nodeType":"OverrideSpecifier","overrides":[],"src":"2506:8:3"},"parameters":{"id":414,"nodeType":"ParameterList","parameters":[],"src":"2483:2:3"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":422,"src":"2524:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":416,"name":"string","nodeType":"ElementaryTypeName","src":"2524:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2523:15:3"},"scope":1133,"src":"2470:98:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1410],"body":{"id":431,"nodeType":"Block","src":"2703:31:3","statements":[{"expression":{"id":429,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"2720:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":428,"id":430,"nodeType":"Return","src":"2713:14:3"}]},"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"2574:53:3","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":432,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2641:6:3","nodeType":"FunctionDefinition","overrides":{"id":425,"nodeType":"OverrideSpecifier","overrides":[],"src":"2670:8:3"},"parameters":{"id":424,"nodeType":"ParameterList","parameters":[],"src":"2647:2:3"},"returnParameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":432,"src":"2688:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":426,"name":"string","nodeType":"ElementaryTypeName","src":"2688:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2687:15:3"},"scope":1133,"src":"2632:102:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1418],"body":{"id":470,"nodeType":"Block","src":"2888:188:3","statements":[{"expression":{"arguments":[{"id":442,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2913:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":441,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"2898:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2898:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":444,"nodeType":"ExpressionStatement","src":"2898:23:3"},{"assignments":[446],"declarations":[{"constant":false,"id":446,"mutability":"mutable","name":"baseURI","nameLocation":"2946:7:3","nodeType":"VariableDeclaration","scope":470,"src":"2932:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":445,"name":"string","nodeType":"ElementaryTypeName","src":"2932:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":449,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":447,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2956:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2956:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2932:34:3"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":452,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"2989:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2983:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":450,"name":"bytes","nodeType":"ElementaryTypeName","src":"2983:5:3","typeDescriptions":{}}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2983:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2983:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3007:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2983:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3067:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2983:86:3","trueExpression":{"arguments":[{"arguments":[{"id":461,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"3035:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":462,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"3044:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1824,"src":"3044:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3044:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":459,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3018:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3018:16:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3018:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3011:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":457,"name":"string","nodeType":"ElementaryTypeName","src":"3011:6:3","typeDescriptions":{}}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3011:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":440,"id":469,"nodeType":"Return","src":"2976:93:3"}]},"documentation":{"id":433,"nodeType":"StructuredDocumentation","src":"2740:55:3","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":471,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2809:8:3","nodeType":"FunctionDefinition","overrides":{"id":437,"nodeType":"OverrideSpecifier","overrides":[],"src":"2855:8:3"},"parameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"tokenId","nameLocation":"2826:7:3","nodeType":"VariableDeclaration","scope":471,"src":"2818:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":434,"name":"uint256","nodeType":"ElementaryTypeName","src":"2818:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2817:17:3"},"returnParameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":471,"src":"2873:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":438,"name":"string","nodeType":"ElementaryTypeName","src":"2873:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2872:15:3"},"scope":1133,"src":"2800:276:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":479,"nodeType":"Block","src":"3384:26:3","statements":[{"expression":{"hexValue":"","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3401:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":476,"id":478,"nodeType":"Return","src":"3394:9:3"}]},"documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"3082:231:3","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":480,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3327:8:3","nodeType":"FunctionDefinition","parameters":{"id":473,"nodeType":"ParameterList","parameters":[],"src":"3335:2:3"},"returnParameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":480,"src":"3369:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":474,"name":"string","nodeType":"ElementaryTypeName","src":"3369:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3368:15:3"},"scope":1133,"src":"3318:92:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1222],"body":{"id":522,"nodeType":"Block","src":"3537:337:3","statements":[{"assignments":[490],"declarations":[{"constant":false,"id":490,"mutability":"mutable","name":"owner","nameLocation":"3555:5:3","nodeType":"VariableDeclaration","scope":522,"src":"3547:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":489,"name":"address","nodeType":"ElementaryTypeName","src":"3547:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":495,"initialValue":{"arguments":[{"id":493,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"3578:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":491,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"3563:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1133_$","typeString":"type(contract ERC721)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":412,"src":"3563:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3563:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3547:39:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":497,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"3604:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":498,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"3610:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3604:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3617:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":496,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3596:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3596:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":502,"nodeType":"ExpressionStatement","src":"3596:57:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":504,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"3685:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3685:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":506,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"3701:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3685:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":509,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":490,"src":"3727:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":510,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"3734:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3734:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":508,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"3710:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3710:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3685:62:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","id":514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3761:64:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","typeString":"literal_string \"ERC721: approve caller is not token owner nor approved for all\""},"value":"ERC721: approve caller is not token owner nor approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","typeString":"literal_string \"ERC721: approve caller is not token owner nor approved for all\""}],"id":503,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3664:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3664:171:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":516,"nodeType":"ExpressionStatement","src":"3664:171:3"},{"expression":{"arguments":[{"id":518,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"3855:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":519,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"3859:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":517,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"3846:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":521,"nodeType":"ExpressionStatement","src":"3846:21:3"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"3416:46:3","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":523,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3476:7:3","nodeType":"FunctionDefinition","overrides":{"id":487,"nodeType":"OverrideSpecifier","overrides":[],"src":"3528:8:3"},"parameters":{"id":486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"to","nameLocation":"3492:2:3","nodeType":"VariableDeclaration","scope":523,"src":"3484:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"3484:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"tokenId","nameLocation":"3504:7:3","nodeType":"VariableDeclaration","scope":523,"src":"3496:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"3496:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3483:29:3"},"returnParameters":{"id":488,"nodeType":"ParameterList","parameters":[],"src":"3537:0:3"},"scope":1133,"src":"3467:407:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1238],"body":{"id":540,"nodeType":"Block","src":"4020:82:3","statements":[{"expression":{"arguments":[{"id":533,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"4045:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":532,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"4030:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":535,"nodeType":"ExpressionStatement","src":"4030:23:3"},{"expression":{"baseExpression":{"id":536,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"4071:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":538,"indexExpression":{"id":537,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"4087:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":531,"id":539,"nodeType":"Return","src":"4064:31:3"}]},"documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"3880:50:3","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":541,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:3","nodeType":"FunctionDefinition","overrides":{"id":528,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:3"},"parameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:3","nodeType":"VariableDeclaration","scope":541,"src":"3956:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":525,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:3"},"returnParameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":541,"src":"4011:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:3"},"scope":1133,"src":"3935:167:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1230],"body":{"id":557,"nodeType":"Block","src":"4253:69:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":551,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"4282:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":553,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"4296:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":554,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"4306:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":550,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"4263:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":556,"nodeType":"ExpressionStatement","src":"4263:52:3"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"4108:56:3","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":558,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:3","nodeType":"FunctionDefinition","overrides":{"id":548,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:3"},"parameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"operator","nameLocation":"4204:8:3","nodeType":"VariableDeclaration","scope":558,"src":"4196:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":546,"mutability":"mutable","name":"approved","nameLocation":"4219:8:3","nodeType":"VariableDeclaration","scope":558,"src":"4214:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":545,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:3"},"returnParameters":{"id":549,"nodeType":"ParameterList","parameters":[],"src":"4253:0:3"},"scope":1133,"src":"4169:153:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1248],"body":{"id":575,"nodeType":"Block","src":"4491:59:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":569,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"4508:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":571,"indexExpression":{"id":570,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":561,"src":"4527:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":573,"indexExpression":{"id":572,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"4534:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":568,"id":574,"nodeType":"Return","src":"4501:42:3"}]},"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"4328:55:3","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":576,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:3","nodeType":"FunctionDefinition","overrides":{"id":565,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:3"},"parameters":{"id":564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"owner","nameLocation":"4422:5:3","nodeType":"VariableDeclaration","scope":576,"src":"4414:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":563,"mutability":"mutable","name":"operator","nameLocation":"4437:8:3","nodeType":"VariableDeclaration","scope":576,"src":"4429:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":562,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:3"},"returnParameters":{"id":568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":576,"src":"4485:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":566,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:3"},"scope":1133,"src":"4388:162:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1214],"body":{"id":602,"nodeType":"Block","src":"4731:208:3","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":589,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"4820:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4820:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"4834:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":588,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"4801:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4801:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4844:48:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""},"value":"ERC721: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""}],"id":587,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4793:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4793:100:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":595,"nodeType":"ExpressionStatement","src":"4793:100:3"},{"expression":{"arguments":[{"id":597,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"4914:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":598,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"4920:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":599,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"4924:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":596,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"4904:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4904:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":601,"nodeType":"ExpressionStatement","src":"4904:28:3"}]},"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"4556:51:3","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":603,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:3","nodeType":"FunctionDefinition","overrides":{"id":585,"nodeType":"OverrideSpecifier","overrides":[],"src":"4722:8:3"},"parameters":{"id":584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":579,"mutability":"mutable","name":"from","nameLocation":"4651:4:3","nodeType":"VariableDeclaration","scope":603,"src":"4643:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"4643:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"to","nameLocation":"4673:2:3","nodeType":"VariableDeclaration","scope":603,"src":"4665:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"4665:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":583,"mutability":"mutable","name":"tokenId","nameLocation":"4693:7:3","nodeType":"VariableDeclaration","scope":603,"src":"4685:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"4685:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:73:3"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"4731:0:3"},"scope":1133,"src":"4612:327:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1204],"body":{"id":621,"nodeType":"Block","src":"5128:56:3","statements":[{"expression":{"arguments":[{"id":615,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"5155:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":616,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5161:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":617,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"5165:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5174:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":614,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[622,652],"referencedDeclaration":652,"src":"5138:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5138:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":620,"nodeType":"ExpressionStatement","src":"5138:39:3"}]},"documentation":{"id":604,"nodeType":"StructuredDocumentation","src":"4945:55:3","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":622,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5014:16:3","nodeType":"FunctionDefinition","overrides":{"id":612,"nodeType":"OverrideSpecifier","overrides":[],"src":"5119:8:3"},"parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"mutability":"mutable","name":"from","nameLocation":"5048:4:3","nodeType":"VariableDeclaration","scope":622,"src":"5040:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"5040:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"to","nameLocation":"5070:2:3","nodeType":"VariableDeclaration","scope":622,"src":"5062:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"5062:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":610,"mutability":"mutable","name":"tokenId","nameLocation":"5090:7:3","nodeType":"VariableDeclaration","scope":622,"src":"5082:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":609,"name":"uint256","nodeType":"ElementaryTypeName","src":"5082:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5030:73:3"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"5128:0:3"},"scope":1133,"src":"5005:179:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1194],"body":{"id":651,"nodeType":"Block","src":"5400:165:3","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":637,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"5437:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5437:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"5451:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":636,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"5418:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5418:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206e6f7220617070726f766564","id":641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5461:48:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""},"value":"ERC721: caller is not token owner nor approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","typeString":"literal_string \"ERC721: caller is not token owner nor approved\""}],"id":635,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5410:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5410:100:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":643,"nodeType":"ExpressionStatement","src":"5410:100:3"},{"expression":{"arguments":[{"id":645,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":625,"src":"5534:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":646,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"5540:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":647,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"5544:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":648,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5553:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":644,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"5520:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5520:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":650,"nodeType":"ExpressionStatement","src":"5520:38:3"}]},"documentation":{"id":623,"nodeType":"StructuredDocumentation","src":"5190:55:3","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":652,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5259:16:3","nodeType":"FunctionDefinition","overrides":{"id":633,"nodeType":"OverrideSpecifier","overrides":[],"src":"5391:8:3"},"parameters":{"id":632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":625,"mutability":"mutable","name":"from","nameLocation":"5293:4:3","nodeType":"VariableDeclaration","scope":652,"src":"5285:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":624,"name":"address","nodeType":"ElementaryTypeName","src":"5285:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":627,"mutability":"mutable","name":"to","nameLocation":"5315:2:3","nodeType":"VariableDeclaration","scope":652,"src":"5307:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"5307:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":629,"mutability":"mutable","name":"tokenId","nameLocation":"5335:7:3","nodeType":"VariableDeclaration","scope":652,"src":"5327:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":628,"name":"uint256","nodeType":"ElementaryTypeName","src":"5327:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":631,"mutability":"mutable","name":"data","nameLocation":"5365:4:3","nodeType":"VariableDeclaration","scope":652,"src":"5352:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":630,"name":"bytes","nodeType":"ElementaryTypeName","src":"5352:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5275:100:3"},"returnParameters":{"id":634,"nodeType":"ParameterList","parameters":[],"src":"5400:0:3"},"scope":1133,"src":"5250:315:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":680,"nodeType":"Block","src":"6566:165:3","statements":[{"expression":{"arguments":[{"id":665,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"6586:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":666,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"6592:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":667,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"6596:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":664,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"6576:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6576:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":669,"nodeType":"ExpressionStatement","src":"6576:28:3"},{"expression":{"arguments":[{"arguments":[{"id":672,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"6645:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":673,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"6651:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"6655:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":675,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"6664:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":671,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"6622:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6622:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6671:52:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":670,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6614:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6614:110:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":679,"nodeType":"ExpressionStatement","src":"6614:110:3"}]},"documentation":{"id":653,"nodeType":"StructuredDocumentation","src":"5571:850:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":681,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6435:13:3","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"mutability":"mutable","name":"from","nameLocation":"6466:4:3","nodeType":"VariableDeclaration","scope":681,"src":"6458:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"6458:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":657,"mutability":"mutable","name":"to","nameLocation":"6488:2:3","nodeType":"VariableDeclaration","scope":681,"src":"6480:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"6480:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"tokenId","nameLocation":"6508:7:3","nodeType":"VariableDeclaration","scope":681,"src":"6500:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":658,"name":"uint256","nodeType":"ElementaryTypeName","src":"6500:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"data","nameLocation":"6538:4:3","nodeType":"VariableDeclaration","scope":681,"src":"6525:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":660,"name":"bytes","nodeType":"ElementaryTypeName","src":"6525:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6448:100:3"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[],"src":"6566:0:3"},"scope":1133,"src":"6426:305:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":698,"nodeType":"Block","src":"7105:54:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":689,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"7122:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":691,"indexExpression":{"id":690,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"7130:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7122:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7150:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7142:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"7142:7:3","typeDescriptions":{}}},"id":695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7142:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7122:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":688,"id":697,"nodeType":"Return","src":"7115:37:3"}]},"documentation":{"id":682,"nodeType":"StructuredDocumentation","src":"6737:292:3","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":699,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7043:7:3","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"tokenId","nameLocation":"7059:7:3","nodeType":"VariableDeclaration","scope":699,"src":"7051:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"7051:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7050:17:3"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":699,"src":"7099:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":686,"name":"bool","nodeType":"ElementaryTypeName","src":"7099:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7098:6:3"},"scope":1133,"src":"7034:125:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":732,"nodeType":"Block","src":"7416:162:3","statements":[{"assignments":[710],"declarations":[{"constant":false,"id":710,"mutability":"mutable","name":"owner","nameLocation":"7434:5:3","nodeType":"VariableDeclaration","scope":732,"src":"7426:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"7426:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":715,"initialValue":{"arguments":[{"id":713,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"7457:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":711,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"7442:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1133_$","typeString":"type(contract ERC721)"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":412,"src":"7442:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7442:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7426:39:3"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":716,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"7483:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":717,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"7494:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7483:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":720,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"7520:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":721,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"7527:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":719,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":576,"src":"7503:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7503:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7483:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":725,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"7551:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":724,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"7539:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7539:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":727,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"7563:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7539:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7483:87:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":730,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7482:89:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":708,"id":731,"nodeType":"Return","src":"7475:96:3"}]},"documentation":{"id":700,"nodeType":"StructuredDocumentation","src":"7165:147:3","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":733,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7326:18:3","nodeType":"FunctionDefinition","parameters":{"id":705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":702,"mutability":"mutable","name":"spender","nameLocation":"7353:7:3","nodeType":"VariableDeclaration","scope":733,"src":"7345:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"7345:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"tokenId","nameLocation":"7370:7:3","nodeType":"VariableDeclaration","scope":733,"src":"7362:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"7362:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7344:34:3"},"returnParameters":{"id":708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":733,"src":"7410:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":706,"name":"bool","nodeType":"ElementaryTypeName","src":"7410:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7409:6:3"},"scope":1133,"src":"7317:261:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":747,"nodeType":"Block","src":"7973:43:3","statements":[{"expression":{"arguments":[{"id":742,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"7993:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"7997:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8006:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":741,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[748,777],"referencedDeclaration":777,"src":"7983:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7983:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"ExpressionStatement","src":"7983:26:3"}]},"documentation":{"id":734,"nodeType":"StructuredDocumentation","src":"7584:319:3","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":748,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"7917:9:3","nodeType":"FunctionDefinition","parameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":736,"mutability":"mutable","name":"to","nameLocation":"7935:2:3","nodeType":"VariableDeclaration","scope":748,"src":"7927:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":735,"name":"address","nodeType":"ElementaryTypeName","src":"7927:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":738,"mutability":"mutable","name":"tokenId","nameLocation":"7947:7:3","nodeType":"VariableDeclaration","scope":748,"src":"7939:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7926:29:3"},"returnParameters":{"id":740,"nodeType":"ParameterList","parameters":[],"src":"7973:0:3"},"scope":1133,"src":"7908:108:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":776,"nodeType":"Block","src":"8351:195:3","statements":[{"expression":{"arguments":[{"id":759,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"8367:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":760,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"8371:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":758,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"8361:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8361:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":762,"nodeType":"ExpressionStatement","src":"8361:18:3"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8441:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8433:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"8433:7:3","typeDescriptions":{}}},"id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8433:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"8445:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":770,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"8449:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":771,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"8458:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":764,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"8410:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8410:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8477:52:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":763,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8389:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8389:150:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":775,"nodeType":"ExpressionStatement","src":"8389:150:3"}]},"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"8022:210:3","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":777,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8246:9:3","nodeType":"FunctionDefinition","parameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"to","nameLocation":"8273:2:3","nodeType":"VariableDeclaration","scope":777,"src":"8265:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"8265:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"tokenId","nameLocation":"8293:7:3","nodeType":"VariableDeclaration","scope":777,"src":"8285:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":752,"name":"uint256","nodeType":"ElementaryTypeName","src":"8285:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"data","nameLocation":"8323:4:3","nodeType":"VariableDeclaration","scope":777,"src":"8310:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":754,"name":"bytes","nodeType":"ElementaryTypeName","src":"8310:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8255:78:3"},"returnParameters":{"id":757,"nodeType":"ParameterList","parameters":[],"src":"8351:0:3"},"scope":1133,"src":"8237:309:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":842,"nodeType":"Block","src":"8929:366:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":786,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"8947:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8961:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8953:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":787,"name":"address","nodeType":"ElementaryTypeName","src":"8953:7:3","typeDescriptions":{}}},"id":790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8953:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8947:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8965:34:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":785,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8939:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8939:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":794,"nodeType":"ExpressionStatement","src":"8939:61:3"},{"expression":{"arguments":[{"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9018:17:3","subExpression":{"arguments":[{"id":797,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"9027:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":796,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"9019:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9019:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9037:30:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9010:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9010:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":802,"nodeType":"ExpressionStatement","src":"9010:58:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9108:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9100:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"9100:7:3","typeDescriptions":{}}},"id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9100:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":808,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"9112:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":809,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"9116:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":803,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"9079:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9079:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":811,"nodeType":"ExpressionStatement","src":"9079:45:3"},{"expression":{"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":812,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"9135:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":814,"indexExpression":{"id":813,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"9145:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9135:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9152:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9135:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":817,"nodeType":"ExpressionStatement","src":"9135:18:3"},{"expression":{"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":818,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"9163:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":820,"indexExpression":{"id":819,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"9171:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9163:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":821,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"9182:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9163:21:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":823,"nodeType":"ExpressionStatement","src":"9163:21:3"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9217:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9209:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"9209:7:3","typeDescriptions":{}}},"id":828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9209:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":829,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"9221:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":830,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"9225:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":824,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"9200:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9200:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":832,"nodeType":"EmitStatement","src":"9195:38:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9264:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"9264:7:3","typeDescriptions":{}}},"id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9264:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":838,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"9276:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":839,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"9280:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":833,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"9244:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9244:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":841,"nodeType":"ExpressionStatement","src":"9244:44:3"}]},"documentation":{"id":778,"nodeType":"StructuredDocumentation","src":"8552:311:3","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":843,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8877:5:3","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"to","nameLocation":"8891:2:3","nodeType":"VariableDeclaration","scope":843,"src":"8883:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"8883:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"tokenId","nameLocation":"8903:7:3","nodeType":"VariableDeclaration","scope":843,"src":"8895:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint256","nodeType":"ElementaryTypeName","src":"8895:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8882:29:3"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"8929:0:3"},"scope":1133,"src":"8868:427:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":902,"nodeType":"Block","src":"9561:357:3","statements":[{"assignments":[850],"declarations":[{"constant":false,"id":850,"mutability":"mutable","name":"owner","nameLocation":"9579:5:3","nodeType":"VariableDeclaration","scope":902,"src":"9571:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":849,"name":"address","nodeType":"ElementaryTypeName","src":"9571:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":855,"initialValue":{"arguments":[{"id":853,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"9602:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":851,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"9587:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1133_$","typeString":"type(contract ERC721)"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":412,"src":"9587:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9587:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9571:39:3"},{"expression":{"arguments":[{"id":857,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"9642:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9657:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9649:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":858,"name":"address","nodeType":"ElementaryTypeName","src":"9649:7:3","typeDescriptions":{}}},"id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9649:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":862,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"9661:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":856,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"9621:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9621:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":864,"nodeType":"ExpressionStatement","src":"9621:48:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9724:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9716:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"9716:7:3","typeDescriptions":{}}},"id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9716:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":870,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"9728:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":865,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"9707:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9707:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":872,"nodeType":"ExpressionStatement","src":"9707:29:3"},{"expression":{"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":873,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"9747:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":875,"indexExpression":{"id":874,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"9757:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9747:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9767:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9747:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":878,"nodeType":"ExpressionStatement","src":"9747:21:3"},{"expression":{"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"9778:23:3","subExpression":{"baseExpression":{"id":879,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"9785:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":881,"indexExpression":{"id":880,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"9793:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9785:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":883,"nodeType":"ExpressionStatement","src":"9778:23:3"},{"eventCall":{"arguments":[{"id":885,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"9826:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9841:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9833:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"9833:7:3","typeDescriptions":{}}},"id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9833:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":890,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"9845:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":884,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"9817:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9817:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":892,"nodeType":"EmitStatement","src":"9812:41:3"},{"expression":{"arguments":[{"id":894,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"9884:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9899:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9891:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"9891:7:3","typeDescriptions":{}}},"id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9891:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":899,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"9903:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":893,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"9864:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9864:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":901,"nodeType":"ExpressionStatement","src":"9864:47:3"}]},"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"9301:206:3","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":903,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9521:5:3","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"tokenId","nameLocation":"9535:7:3","nodeType":"VariableDeclaration","scope":903,"src":"9527:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":845,"name":"uint256","nodeType":"ElementaryTypeName","src":"9527:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9526:17:3"},"returnParameters":{"id":848,"nodeType":"ParameterList","parameters":[],"src":"9561:0:3"},"scope":1133,"src":"9512:406:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":977,"nodeType":"Block","src":"10351:496:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":916,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"10384:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":914,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"10369:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1133_$","typeString":"type(contract ERC721)"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":412,"src":"10369:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10369:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":918,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"10396:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10369:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10402:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":913,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10361:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10361:81:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":922,"nodeType":"ExpressionStatement","src":"10361:81:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":924,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"10460:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10474:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10466:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"10466:7:3","typeDescriptions":{}}},"id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10466:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10460:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10478:38:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":923,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10452:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10452:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":932,"nodeType":"ExpressionStatement","src":"10452:65:3"},{"expression":{"arguments":[{"id":934,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"10549:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":935,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"10555:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":936,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"10559:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":933,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"10528:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10528:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":938,"nodeType":"ExpressionStatement","src":"10528:39:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10646:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10638:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"10638:7:3","typeDescriptions":{}}},"id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10638:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"10650:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":939,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"10629:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10629:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":946,"nodeType":"ExpressionStatement","src":"10629:29:3"},{"expression":{"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":947,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"10669:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":949,"indexExpression":{"id":948,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"10679:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10669:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10688:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10669:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":952,"nodeType":"ExpressionStatement","src":"10669:20:3"},{"expression":{"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":953,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"10699:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":955,"indexExpression":{"id":954,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"10709:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10699:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10716:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10699:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":958,"nodeType":"ExpressionStatement","src":"10699:18:3"},{"expression":{"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":959,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"10727:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":961,"indexExpression":{"id":960,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"10735:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10727:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":962,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"10746:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10727:21:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":964,"nodeType":"ExpressionStatement","src":"10727:21:3"},{"eventCall":{"arguments":[{"id":966,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"10773:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":967,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"10779:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":968,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"10783:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":965,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1148,"src":"10764:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10764:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":970,"nodeType":"EmitStatement","src":"10759:32:3"},{"expression":{"arguments":[{"id":972,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"10822:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":973,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"10828:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":974,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"10832:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":971,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"10802:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10802:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":976,"nodeType":"ExpressionStatement","src":"10802:38:3"}]},"documentation":{"id":904,"nodeType":"StructuredDocumentation","src":"9924:313:3","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":978,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"10251:9:3","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":906,"mutability":"mutable","name":"from","nameLocation":"10278:4:3","nodeType":"VariableDeclaration","scope":978,"src":"10270:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":905,"name":"address","nodeType":"ElementaryTypeName","src":"10270:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":908,"mutability":"mutable","name":"to","nameLocation":"10300:2:3","nodeType":"VariableDeclaration","scope":978,"src":"10292:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":907,"name":"address","nodeType":"ElementaryTypeName","src":"10292:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":910,"mutability":"mutable","name":"tokenId","nameLocation":"10320:7:3","nodeType":"VariableDeclaration","scope":978,"src":"10312:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint256","nodeType":"ElementaryTypeName","src":"10312:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10260:73:3"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"10351:0:3"},"scope":1133,"src":"10242:605:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1001,"nodeType":"Block","src":"11023:107:3","statements":[{"expression":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":986,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"11033:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":988,"indexExpression":{"id":987,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"11049:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11033:24:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":989,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"11060:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11033:29:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":991,"nodeType":"ExpressionStatement","src":"11033:29:3"},{"eventCall":{"arguments":[{"arguments":[{"id":995,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"11101:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":993,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"11086:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1133_$","typeString":"type(contract ERC721)"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":412,"src":"11086:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11086:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":997,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"11111:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":998,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"11115:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":992,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"11077:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11077:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1000,"nodeType":"EmitStatement","src":"11072:51:3"}]},"documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"10853:101:3","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":1002,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10968:8:3","nodeType":"FunctionDefinition","parameters":{"id":984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":981,"mutability":"mutable","name":"to","nameLocation":"10985:2:3","nodeType":"VariableDeclaration","scope":1002,"src":"10977:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":980,"name":"address","nodeType":"ElementaryTypeName","src":"10977:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":983,"mutability":"mutable","name":"tokenId","nameLocation":"10997:7:3","nodeType":"VariableDeclaration","scope":1002,"src":"10989:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":982,"name":"uint256","nodeType":"ElementaryTypeName","src":"10989:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10976:29:3"},"returnParameters":{"id":985,"nodeType":"ParameterList","parameters":[],"src":"11023:0:3"},"scope":1133,"src":"10959:171:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1033,"nodeType":"Block","src":"11389:184:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1013,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"11407:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1014,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"11416:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11407:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11426:27:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":1012,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11399:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11399:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1018,"nodeType":"ExpressionStatement","src":"11399:55:3"},{"expression":{"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1019,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"11464:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1022,"indexExpression":{"id":1020,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"11483:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11464:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1023,"indexExpression":{"id":1021,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"11490:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11464:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1024,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"11502:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11464:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1026,"nodeType":"ExpressionStatement","src":"11464:46:3"},{"eventCall":{"arguments":[{"id":1028,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"11540:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1029,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"11547:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1030,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"11557:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1027,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"11525:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11525:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1032,"nodeType":"EmitStatement","src":"11520:46:3"}]},"documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"11136:125:3","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":1034,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"11275:18:3","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"owner","nameLocation":"11311:5:3","nodeType":"VariableDeclaration","scope":1034,"src":"11303:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"11303:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1007,"mutability":"mutable","name":"operator","nameLocation":"11334:8:3","nodeType":"VariableDeclaration","scope":1034,"src":"11326:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"11326:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1009,"mutability":"mutable","name":"approved","nameLocation":"11357:8:3","nodeType":"VariableDeclaration","scope":1034,"src":"11352:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1008,"name":"bool","nodeType":"ElementaryTypeName","src":"11352:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11293:78:3"},"returnParameters":{"id":1011,"nodeType":"ParameterList","parameters":[],"src":"11389:0:3"},"scope":1133,"src":"11266:307:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1047,"nodeType":"Block","src":"11720:70:3","statements":[{"expression":{"arguments":[{"arguments":[{"id":1042,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"11746:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1041,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"11738:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11738:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11756:26:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1040,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11730:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11730:53:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1046,"nodeType":"ExpressionStatement","src":"11730:53:3"}]},"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"11579:73:3","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":1048,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"11666:14:3","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"tokenId","nameLocation":"11689:7:3","nodeType":"VariableDeclaration","scope":1048,"src":"11681:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1036,"name":"uint256","nodeType":"ElementaryTypeName","src":"11681:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11680:17:3"},"returnParameters":{"id":1039,"nodeType":"ParameterList","parameters":[],"src":"11720:0:3"},"scope":1133,"src":"11657:133:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1109,"nodeType":"Block","src":"12497:676:3","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1062,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"12511:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1437,"src":"12511:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12511:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1107,"nodeType":"Block","src":"13131:36:3","statements":[{"expression":{"hexValue":"74727565","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13152:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1061,"id":1106,"nodeType":"Return","src":"13145:11:3"}]},"id":1108,"nodeType":"IfStatement","src":"12507:660:3","trueBody":{"id":1104,"nodeType":"Block","src":"12528:597:3","statements":[{"clauses":[{"block":{"id":1084,"nodeType":"Block","src":"12642:91:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1078,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"12667:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":1079,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"12677:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1267_$","typeString":"type(contract IERC721Receiver)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1266,"src":"12677:32:3","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"12677:41:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"12667:51:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1061,"id":1083,"nodeType":"Return","src":"12660:58:3"}]},"errorName":"","id":1085,"nodeType":"TryCatchClause","parameters":{"id":1077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"retval","nameLocation":"12634:6:3","nodeType":"VariableDeclaration","scope":1085,"src":"12627:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1075,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12627:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"12626:15:3"},"src":"12618:115:3"},{"block":{"id":1101,"nodeType":"Block","src":"12762:353:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1089,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"12784:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"12784:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12801:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12784:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1099,"nodeType":"Block","src":"12911:190:3","statements":[{"AST":{"nodeType":"YulBlock","src":"12997:86:3","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13034:2:3","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"13038:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13030:3:3"},"nodeType":"YulFunctionCall","src":"13030:15:3"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"13053:6:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13047:5:3"},"nodeType":"YulFunctionCall","src":"13047:13:3"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13023:6:3"},"nodeType":"YulFunctionCall","src":"13023:38:3"},"nodeType":"YulExpressionStatement","src":"13023:38:3"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1087,"isOffset":false,"isSlot":false,"src":"13038:6:3","valueSize":1},{"declaration":1087,"isOffset":false,"isSlot":false,"src":"13053:6:3","valueSize":1}],"id":1098,"nodeType":"InlineAssembly","src":"12988:95:3"}]},"id":1100,"nodeType":"IfStatement","src":"12780:321:3","trueBody":{"id":1097,"nodeType":"Block","src":"12804:101:3","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12833:52:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1093,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"12826:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12826:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1096,"nodeType":"ExpressionStatement","src":"12826:60:3"}]}}]},"errorName":"","id":1102,"nodeType":"TryCatchClause","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1087,"mutability":"mutable","name":"reason","nameLocation":"12754:6:3","nodeType":"VariableDeclaration","scope":1102,"src":"12741:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1086,"name":"bytes","nodeType":"ElementaryTypeName","src":"12741:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12740:21:3"},"src":"12734:381:3"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1069,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"12583:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12583:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1071,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1051,"src":"12597:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1072,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"12603:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1073,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"12612:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1066,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"12562:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1065,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"12546:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1267_$","typeString":"type(contract IERC721Receiver)"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12546:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1267","typeString":"contract IERC721Receiver"}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1266,"src":"12546:36:3","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12546:71:3","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1103,"nodeType":"TryStatement","src":"12542:573:3"}]}}]},"documentation":{"id":1049,"nodeType":"StructuredDocumentation","src":"11796:541:3","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":1110,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"12351:22:3","nodeType":"FunctionDefinition","parameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1051,"mutability":"mutable","name":"from","nameLocation":"12391:4:3","nodeType":"VariableDeclaration","scope":1110,"src":"12383:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1050,"name":"address","nodeType":"ElementaryTypeName","src":"12383:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"to","nameLocation":"12413:2:3","nodeType":"VariableDeclaration","scope":1110,"src":"12405:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"12405:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"tokenId","nameLocation":"12433:7:3","nodeType":"VariableDeclaration","scope":1110,"src":"12425:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"12425:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"data","nameLocation":"12463:4:3","nodeType":"VariableDeclaration","scope":1110,"src":"12450:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1056,"name":"bytes","nodeType":"ElementaryTypeName","src":"12450:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"12373:100:3"},"returnParameters":{"id":1061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1110,"src":"12491:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1059,"name":"bool","nodeType":"ElementaryTypeName","src":"12491:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12490:6:3"},"scope":1133,"src":"12342:831:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1120,"nodeType":"Block","src":"13849:2:3","statements":[]},"documentation":{"id":1111,"nodeType":"StructuredDocumentation","src":"13179:545:3","text":" @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1121,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"13738:20:3","nodeType":"FunctionDefinition","parameters":{"id":1118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"from","nameLocation":"13776:4:3","nodeType":"VariableDeclaration","scope":1121,"src":"13768:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1112,"name":"address","nodeType":"ElementaryTypeName","src":"13768:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1115,"mutability":"mutable","name":"to","nameLocation":"13798:2:3","nodeType":"VariableDeclaration","scope":1121,"src":"13790:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"13790:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1117,"mutability":"mutable","name":"tokenId","nameLocation":"13818:7:3","nodeType":"VariableDeclaration","scope":1121,"src":"13810:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1116,"name":"uint256","nodeType":"ElementaryTypeName","src":"13810:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:73:3"},"returnParameters":{"id":1119,"nodeType":"ParameterList","parameters":[],"src":"13849:0:3"},"scope":1133,"src":"13729:122:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1131,"nodeType":"Block","src":"14342:2:3","statements":[]},"documentation":{"id":1122,"nodeType":"StructuredDocumentation","src":"13857:361:3","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1132,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"14232:19:3","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"from","nameLocation":"14269:4:3","nodeType":"VariableDeclaration","scope":1132,"src":"14261:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1123,"name":"address","nodeType":"ElementaryTypeName","src":"14261:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"to","nameLocation":"14291:2:3","nodeType":"VariableDeclaration","scope":1132,"src":"14283:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"14283:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"tokenId","nameLocation":"14311:7:3","nodeType":"VariableDeclaration","scope":1132,"src":"14303:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"14303:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14251:73:3"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"14342:0:3"},"scope":1133,"src":"14223:121:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1134,"src":"628:13718:3","usedErrors":[]}],"src":"107:14240:3"},"id":3},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[1998],"IERC721":[1249]},"id":1250,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1135,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1136,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1250,"sourceUnit":1999,"src":"133:47:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1138,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1998,"src":"271:7:4"},"id":1139,"nodeType":"InheritanceSpecifier","src":"271:7:4"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1137,"nodeType":"StructuredDocumentation","src":"182:67:4","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1249,"linearizedBaseContracts":[1249,1998],"name":"IERC721","nameLocation":"260:7:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1140,"nodeType":"StructuredDocumentation","src":"285:88:4","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":1148,"name":"Transfer","nameLocation":"384:8:4","nodeType":"EventDefinition","parameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1142,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:4","nodeType":"VariableDeclaration","scope":1148,"src":"393:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1141,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1144,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:4","nodeType":"VariableDeclaration","scope":1148,"src":"415:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1143,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1146,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:4","nodeType":"VariableDeclaration","scope":1148,"src":"435:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:4"},"src":"378:82:4"},{"anonymous":false,"documentation":{"id":1149,"nodeType":"StructuredDocumentation","src":"466:94:4","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":1157,"name":"Approval","nameLocation":"571:8:4","nodeType":"EventDefinition","parameters":{"id":1156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:4","nodeType":"VariableDeclaration","scope":1157,"src":"580:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1150,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1153,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:4","nodeType":"VariableDeclaration","scope":1157,"src":"603:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1152,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1155,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:4","nodeType":"VariableDeclaration","scope":1157,"src":"629:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:4"},"src":"565:89:4"},{"anonymous":false,"documentation":{"id":1158,"nodeType":"StructuredDocumentation","src":"660:117:4","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":1166,"name":"ApprovalForAll","nameLocation":"788:14:4","nodeType":"EventDefinition","parameters":{"id":1165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:4","nodeType":"VariableDeclaration","scope":1166,"src":"803:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1159,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1162,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:4","nodeType":"VariableDeclaration","scope":1166,"src":"826:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1164,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:4","nodeType":"VariableDeclaration","scope":1166,"src":"852:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1163,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:4"},"src":"782:85:4"},{"documentation":{"id":1167,"nodeType":"StructuredDocumentation","src":"873:76:4","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1174,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:4","nodeType":"FunctionDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1169,"mutability":"mutable","name":"owner","nameLocation":"981:5:4","nodeType":"VariableDeclaration","scope":1174,"src":"973:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1168,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:4"},"returnParameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"balance","nameLocation":"1019:7:4","nodeType":"VariableDeclaration","scope":1174,"src":"1011:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:4"},"scope":1249,"src":"954:74:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"1034:131:4","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1182,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:4","nodeType":"FunctionDefinition","parameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:4","nodeType":"VariableDeclaration","scope":1182,"src":"1187:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1176,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:4"},"returnParameters":{"id":1181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1180,"mutability":"mutable","name":"owner","nameLocation":"1235:5:4","nodeType":"VariableDeclaration","scope":1182,"src":"1227:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1179,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:4"},"scope":1249,"src":"1170:72:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1183,"nodeType":"StructuredDocumentation","src":"1248:556:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1194,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:4","nodeType":"FunctionDefinition","parameters":{"id":1192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"mutability":"mutable","name":"from","nameLocation":"1852:4:4","nodeType":"VariableDeclaration","scope":1194,"src":"1844:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1184,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1187,"mutability":"mutable","name":"to","nameLocation":"1874:2:4","nodeType":"VariableDeclaration","scope":1194,"src":"1866:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1186,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:4","nodeType":"VariableDeclaration","scope":1194,"src":"1886:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"data","nameLocation":"1926:4:4","nodeType":"VariableDeclaration","scope":1194,"src":"1911:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1190,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:4"},"returnParameters":{"id":1193,"nodeType":"ParameterList","parameters":[],"src":"1945:0:4"},"scope":1249,"src":"1809:137:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1195,"nodeType":"StructuredDocumentation","src":"1952:687:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1204,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:4","nodeType":"FunctionDefinition","parameters":{"id":1202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"from","nameLocation":"2687:4:4","nodeType":"VariableDeclaration","scope":1204,"src":"2679:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1196,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1199,"mutability":"mutable","name":"to","nameLocation":"2709:2:4","nodeType":"VariableDeclaration","scope":1204,"src":"2701:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1198,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1201,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:4","nodeType":"VariableDeclaration","scope":1204,"src":"2721:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1200,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:4"},"returnParameters":{"id":1203,"nodeType":"ParameterList","parameters":[],"src":"2751:0:4"},"scope":1249,"src":"2644:108:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"2758:504:4","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1214,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3276:12:4","nodeType":"FunctionDefinition","parameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"from","nameLocation":"3306:4:4","nodeType":"VariableDeclaration","scope":1214,"src":"3298:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"3298:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1209,"mutability":"mutable","name":"to","nameLocation":"3328:2:4","nodeType":"VariableDeclaration","scope":1214,"src":"3320:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"3320:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"tokenId","nameLocation":"3348:7:4","nodeType":"VariableDeclaration","scope":1214,"src":"3340:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3340:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3288:73:4"},"returnParameters":{"id":1213,"nodeType":"ParameterList","parameters":[],"src":"3370:0:4"},"scope":1249,"src":"3267:104:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1215,"nodeType":"StructuredDocumentation","src":"3377:452:4","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1222,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3843:7:4","nodeType":"FunctionDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"to","nameLocation":"3859:2:4","nodeType":"VariableDeclaration","scope":1222,"src":"3851:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"3851:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"tokenId","nameLocation":"3871:7:4","nodeType":"VariableDeclaration","scope":1222,"src":"3863:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3850:29:4"},"returnParameters":{"id":1221,"nodeType":"ParameterList","parameters":[],"src":"3888:0:4"},"scope":1249,"src":"3834:55:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"3895:309:4","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1230,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4218:17:4","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"operator","nameLocation":"4244:8:4","nodeType":"VariableDeclaration","scope":1230,"src":"4236:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"_approved","nameLocation":"4259:9:4","nodeType":"VariableDeclaration","scope":1230,"src":"4254:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1226,"name":"bool","nodeType":"ElementaryTypeName","src":"4254:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4235:34:4"},"returnParameters":{"id":1229,"nodeType":"ParameterList","parameters":[],"src":"4278:0:4"},"scope":1249,"src":"4209:70:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"4285:139:4","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1238,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4438:11:4","nodeType":"FunctionDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"tokenId","nameLocation":"4458:7:4","nodeType":"VariableDeclaration","scope":1238,"src":"4450:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"4450:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:17:4"},"returnParameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1236,"mutability":"mutable","name":"operator","nameLocation":"4498:8:4","nodeType":"VariableDeclaration","scope":1238,"src":"4490:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1235,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4489:18:4"},"scope":1249,"src":"4429:79:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1239,"nodeType":"StructuredDocumentation","src":"4514:138:4","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1248,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4666:16:4","nodeType":"FunctionDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1241,"mutability":"mutable","name":"owner","nameLocation":"4691:5:4","nodeType":"VariableDeclaration","scope":1248,"src":"4683:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"4683:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"operator","nameLocation":"4706:8:4","nodeType":"VariableDeclaration","scope":1248,"src":"4698:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"4698:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4682:33:4"},"returnParameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1248,"src":"4739:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1245,"name":"bool","nodeType":"ElementaryTypeName","src":"4739:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4738:6:4"},"scope":1249,"src":"4657:88:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1250,"src":"250:4497:4","usedErrors":[]}],"src":"108:4640:4"},"id":4},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1267]},"id":1268,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1251,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1252,"nodeType":"StructuredDocumentation","src":"141:152:5","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1267,"linearizedBaseContracts":[1267],"name":"IERC721Receiver","nameLocation":"304:15:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"326:493:5","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1266,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:5","nodeType":"FunctionDefinition","parameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"operator","nameLocation":"867:8:5","nodeType":"VariableDeclaration","scope":1266,"src":"859:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"from","nameLocation":"893:4:5","nodeType":"VariableDeclaration","scope":1266,"src":"885:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1259,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:5","nodeType":"VariableDeclaration","scope":1266,"src":"907:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1258,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1261,"mutability":"mutable","name":"data","nameLocation":"947:4:5","nodeType":"VariableDeclaration","scope":1266,"src":"932:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1260,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:5"},"returnParameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1266,"src":"976:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1263,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:5"},"scope":1267,"src":"824:160:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1268,"src":"294:692:5","usedErrors":[]}],"src":"116:871:5"},"id":5},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"Address":[1714],"Context":[1736],"ERC165":[1986],"ERC721":[1133],"ERC721URIStorage":[1392],"IERC165":[1998],"IERC721":[1249],"IERC721Metadata":[1419],"IERC721Receiver":[1267],"Strings":[1962]},"id":1393,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1269,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1270,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1393,"sourceUnit":1134,"src":"153:23:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1272,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1133,"src":"286:6:6"},"id":1273,"nodeType":"InheritanceSpecifier","src":"286:6:6"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1271,"nodeType":"StructuredDocumentation","src":"178:69:6","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":false,"id":1392,"linearizedBaseContracts":[1392,1133,1419,1249,1986,1998,1736],"name":"ERC721URIStorage","nameLocation":"266:16:6","nodeType":"ContractDefinition","nodes":[{"id":1276,"libraryName":{"id":1274,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":1962,"src":"305:7:6"},"nodeType":"UsingForDirective","src":"299:26:6","typeName":{"id":1275,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1280,"mutability":"mutable","name":"_tokenURIs","nameLocation":"405:10:6","nodeType":"VariableDeclaration","scope":1392,"src":"370:45:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1279,"keyType":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"378:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"370:26:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":1278,"name":"string","nodeType":"ElementaryTypeName","src":"389:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[471],"body":{"id":1338,"nodeType":"Block","src":"570:520:6","statements":[{"expression":{"arguments":[{"id":1290,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"595:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1289,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1048,"src":"580:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"580:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1292,"nodeType":"ExpressionStatement","src":"580:23:6"},{"assignments":[1294],"declarations":[{"constant":false,"id":1294,"mutability":"mutable","name":"_tokenURI","nameLocation":"628:9:6","nodeType":"VariableDeclaration","scope":1338,"src":"614:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1293,"name":"string","nodeType":"ElementaryTypeName","src":"614:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1298,"initialValue":{"baseExpression":{"id":1295,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"640:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1297,"indexExpression":{"id":1296,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"651:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"640:19:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"614:45:6"},{"assignments":[1300],"declarations":[{"constant":false,"id":1300,"mutability":"mutable","name":"base","nameLocation":"683:4:6","nodeType":"VariableDeclaration","scope":1338,"src":"669:18:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1299,"name":"string","nodeType":"ElementaryTypeName","src":"669:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1303,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1301,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"690:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"690:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"669:31:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1306,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"779:4:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"773:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1304,"name":"bytes","nodeType":"ElementaryTypeName","src":"773:5:6","typeDescriptions":{}}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"773:11:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"773:18:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"795:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"773:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1314,"nodeType":"IfStatement","src":"769:70:6","trueBody":{"id":1313,"nodeType":"Block","src":"798:41:6","statements":[{"expression":{"id":1311,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"819:9:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1288,"id":1312,"nodeType":"Return","src":"812:16:6"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1317,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"947:9:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"941:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1315,"name":"bytes","nodeType":"ElementaryTypeName","src":"941:5:6","typeDescriptions":{}}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"941:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"941:23:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"967:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"941:27:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1332,"nodeType":"IfStatement","src":"937:106:6","trueBody":{"id":1331,"nodeType":"Block","src":"970:73:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1326,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"1015:4:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1327,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"1021:9:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1324,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"998:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"998:16:6","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"998:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"991:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1322,"name":"string","nodeType":"ElementaryTypeName","src":"991:6:6","typeDescriptions":{}}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"991:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1288,"id":1330,"nodeType":"Return","src":"984:48:6"}]}},{"expression":{"arguments":[{"id":1335,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1283,"src":"1075:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1333,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1060:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1392_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":471,"src":"1060:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1060:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1288,"id":1337,"nodeType":"Return","src":"1053:30:6"}]},"documentation":{"id":1281,"nodeType":"StructuredDocumentation","src":"422:55:6","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1339,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"491:8:6","nodeType":"FunctionDefinition","overrides":{"id":1285,"nodeType":"OverrideSpecifier","overrides":[],"src":"537:8:6"},"parameters":{"id":1284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1283,"mutability":"mutable","name":"tokenId","nameLocation":"508:7:6","nodeType":"VariableDeclaration","scope":1339,"src":"500:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1282,"name":"uint256","nodeType":"ElementaryTypeName","src":"500:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"499:17:6"},"returnParameters":{"id":1288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1339,"src":"555:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1286,"name":"string","nodeType":"ElementaryTypeName","src":"555:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"554:15:6"},"scope":1392,"src":"482:608:6","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1360,"nodeType":"Block","src":"1318:133:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":1349,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"1344:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1348,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"1336:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1336:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1354:48:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""},"value":"ERC721URIStorage: URI set of nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""}],"id":1347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1328:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1328:75:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1353,"nodeType":"ExpressionStatement","src":"1328:75:6"},{"expression":{"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1354,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"1413:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1356,"indexExpression":{"id":1355,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"1424:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1413:19:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1357,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"1435:9:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1413:31:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1359,"nodeType":"ExpressionStatement","src":"1413:31:6"}]},"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"1096:136:6","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":1361,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1246:12:6","nodeType":"FunctionDefinition","parameters":{"id":1345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"tokenId","nameLocation":"1267:7:6","nodeType":"VariableDeclaration","scope":1361,"src":"1259:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"1259:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1344,"mutability":"mutable","name":"_tokenURI","nameLocation":"1290:9:6","nodeType":"VariableDeclaration","scope":1361,"src":"1276:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1343,"name":"string","nodeType":"ElementaryTypeName","src":"1276:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:42:6"},"returnParameters":{"id":1346,"nodeType":"ParameterList","parameters":[],"src":"1318:0:6"},"scope":1392,"src":"1237:214:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[903],"body":{"id":1390,"nodeType":"Block","src":"1727:142:6","statements":[{"expression":{"arguments":[{"id":1371,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"1749:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1368,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1737:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1392_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":903,"src":"1737:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1737:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1373,"nodeType":"ExpressionStatement","src":"1737:20:6"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":1376,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"1778:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1378,"indexExpression":{"id":1377,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"1789:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1778:19:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1772:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1374,"name":"bytes","nodeType":"ElementaryTypeName","src":"1772:5:6","typeDescriptions":{}}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1772:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1772:33:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1809:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1772:38:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1389,"nodeType":"IfStatement","src":"1768:95:6","trueBody":{"id":1388,"nodeType":"Block","src":"1812:51:6","statements":[{"expression":{"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"1826:26:6","subExpression":{"baseExpression":{"id":1383,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1280,"src":"1833:10:6","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1385,"indexExpression":{"id":1384,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"1844:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1833:19:6","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1387,"nodeType":"ExpressionStatement","src":"1826:26:6"}]}}]},"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"1457:207:6","text":" @dev See {ERC721-_burn}. This override additionally checks to see if a\n token-specific URI was set for the token, and if so, it deletes the token URI from\n the storage mapping."},"id":1391,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"1678:5:6","nodeType":"FunctionDefinition","overrides":{"id":1366,"nodeType":"OverrideSpecifier","overrides":[],"src":"1718:8:6"},"parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"tokenId","nameLocation":"1692:7:6","nodeType":"VariableDeclaration","scope":1391,"src":"1684:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1683:17:6"},"returnParameters":{"id":1367,"nodeType":"ParameterList","parameters":[],"src":"1727:0:6"},"scope":1392,"src":"1669:200:6","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1393,"src":"248:1623:6","usedErrors":[]}],"src":"128:1744:6"},"id":6},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[1998],"IERC721":[1249],"IERC721Metadata":[1419]},"id":1420,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1394,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1395,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1420,"sourceUnit":1250,"src":"137:24:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1397,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":1249,"src":"326:7:7"},"id":1398,"nodeType":"InheritanceSpecifier","src":"326:7:7"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"163:133:7","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1419,"linearizedBaseContracts":[1419,1249,1998],"name":"IERC721Metadata","nameLocation":"307:15:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1399,"nodeType":"StructuredDocumentation","src":"340:58:7","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1404,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:7","nodeType":"FunctionDefinition","parameters":{"id":1400,"nodeType":"ParameterList","parameters":[],"src":"416:2:7"},"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1404,"src":"442:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1401,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:7"},"scope":1419,"src":"403:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1405,"nodeType":"StructuredDocumentation","src":"463:60:7","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1410,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:7","nodeType":"FunctionDefinition","parameters":{"id":1406,"nodeType":"ParameterList","parameters":[],"src":"543:2:7"},"returnParameters":{"id":1409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1410,"src":"569:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1407,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:7"},"scope":1419,"src":"528:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1411,"nodeType":"StructuredDocumentation","src":"590:90:7","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1418,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:7","nodeType":"FunctionDefinition","parameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1413,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:7","nodeType":"VariableDeclaration","scope":1418,"src":"703:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1412,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:7"},"returnParameters":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1418,"src":"743:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1415,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:7"},"scope":1419,"src":"685:73:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1420,"src":"297:463:7","usedErrors":[]}],"src":"112:649:7"},"id":7},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1714]},"id":1715,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1421,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"126:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1714,"linearizedBaseContracts":[1714],"name":"Address","nameLocation":"202:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1436,"nodeType":"Block","src":"1241:254:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1430,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"1465:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1429,"id":1435,"nodeType":"Return","src":"1458:30:8"}]},"documentation":{"id":1423,"nodeType":"StructuredDocumentation","src":"216:954:8","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1437,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:8","nodeType":"FunctionDefinition","parameters":{"id":1426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"account","nameLocation":"1203:7:8","nodeType":"VariableDeclaration","scope":1437,"src":"1195:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1424,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:8"},"returnParameters":{"id":1429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1437,"src":"1235:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1427,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:8"},"scope":1714,"src":"1175:320:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1470,"nodeType":"Block","src":"2483:241:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1448,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1714","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1714","typeString":"library Address"}],"id":1447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1446,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:8","typeDescriptions":{}}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1451,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"2526:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1445,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1455,"nodeType":"ExpressionStatement","src":"2493:73:8"},{"assignments":[1457,null],"declarations":[{"constant":false,"id":1457,"mutability":"mutable","name":"success","nameLocation":"2583:7:8","nodeType":"VariableDeclaration","scope":1470,"src":"2578:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1456,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1464,"initialValue":{"arguments":[{"hexValue":"","id":1462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1458,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"2596:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1460,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"2618:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:8"},{"expression":{"arguments":[{"id":1466,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1457,"src":"2647:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1465,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1469,"nodeType":"ExpressionStatement","src":"2639:78:8"}]},"documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"1501:906:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1471,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:8","nodeType":"FunctionDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:8","nodeType":"VariableDeclaration","scope":1471,"src":"2431:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1439,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"amount","nameLocation":"2466:6:8","nodeType":"VariableDeclaration","scope":1471,"src":"2458:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:8"},"returnParameters":{"id":1444,"nodeType":"ParameterList","parameters":[],"src":"2483:0:8"},"scope":1714,"src":"2412:312:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1487,"nodeType":"Block","src":"3555:84:8","statements":[{"expression":{"arguments":[{"id":1482,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"3585:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1483,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"3593:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1481,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[1488,1508],"referencedDeclaration":1508,"src":"3572:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1480,"id":1486,"nodeType":"Return","src":"3565:67:8"}]},"documentation":{"id":1472,"nodeType":"StructuredDocumentation","src":"2730:731:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1488,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:8","nodeType":"FunctionDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"target","nameLocation":"3496:6:8","nodeType":"VariableDeclaration","scope":1488,"src":"3488:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1473,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"data","nameLocation":"3517:4:8","nodeType":"VariableDeclaration","scope":1488,"src":"3504:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1475,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:8"},"returnParameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1488,"src":"3541:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1478,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:8"},"scope":1714,"src":"3466:173:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1507,"nodeType":"Block","src":"4008:76:8","statements":[{"expression":{"arguments":[{"id":1501,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"4047:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1502,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"4055:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1504,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"4064:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1500,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1528,1578],"referencedDeclaration":1578,"src":"4025:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4025:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1499,"id":1506,"nodeType":"Return","src":"4018:59:8"}]},"documentation":{"id":1489,"nodeType":"StructuredDocumentation","src":"3645:211:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1508,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:8","nodeType":"FunctionDefinition","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1491,"mutability":"mutable","name":"target","nameLocation":"3900:6:8","nodeType":"VariableDeclaration","scope":1508,"src":"3892:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1490,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1493,"mutability":"mutable","name":"data","nameLocation":"3929:4:8","nodeType":"VariableDeclaration","scope":1508,"src":"3916:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1492,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:8","nodeType":"VariableDeclaration","scope":1508,"src":"3943:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1494,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:8"},"returnParameters":{"id":1499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1508,"src":"3994:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1497,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:8"},"scope":1714,"src":"3861:223:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1527,"nodeType":"Block","src":"4589:111:8","statements":[{"expression":{"arguments":[{"id":1521,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"4628:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1522,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"4636:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"4642:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1520,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1528,1578],"referencedDeclaration":1578,"src":"4606:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4606:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1519,"id":1526,"nodeType":"Return","src":"4599:94:8"}]},"documentation":{"id":1509,"nodeType":"StructuredDocumentation","src":"4090:351:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1528,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:8","nodeType":"FunctionDefinition","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1511,"mutability":"mutable","name":"target","nameLocation":"4494:6:8","nodeType":"VariableDeclaration","scope":1528,"src":"4486:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1510,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"data","nameLocation":"4523:4:8","nodeType":"VariableDeclaration","scope":1528,"src":"4510:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1512,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"value","nameLocation":"4545:5:8","nodeType":"VariableDeclaration","scope":1528,"src":"4537:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:8"},"returnParameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1528,"src":"4575:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1517,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:8"},"scope":1714,"src":"4446:254:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1577,"nodeType":"Block","src":"5127:320:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1545,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1714","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1714","typeString":"library Address"}],"id":1544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1543,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:8","typeDescriptions":{}}},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5145:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"5170:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1542,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1552,"nodeType":"ExpressionStatement","src":"5137:81:8"},{"expression":{"arguments":[{"arguments":[{"id":1555,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"5247:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1554,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"5236:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5236:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1553,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5228:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1559,"nodeType":"ExpressionStatement","src":"5228:60:8"},{"assignments":[1561,1563],"declarations":[{"constant":false,"id":1561,"mutability":"mutable","name":"success","nameLocation":"5305:7:8","nodeType":"VariableDeclaration","scope":1577,"src":"5300:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1560,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1563,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:8","nodeType":"VariableDeclaration","scope":1577,"src":"5314:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1562,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1570,"initialValue":{"arguments":[{"id":1568,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"5367:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1564,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"5341:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5341:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"5360:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:8"},{"expression":{"arguments":[{"id":1572,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"5406:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1573,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"5415:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1574,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"5427:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1571,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"5389:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5389:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1541,"id":1576,"nodeType":"Return","src":"5382:58:8"}]},"documentation":{"id":1529,"nodeType":"StructuredDocumentation","src":"4706:237:8","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1578,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:8","nodeType":"FunctionDefinition","parameters":{"id":1538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"target","nameLocation":"4996:6:8","nodeType":"VariableDeclaration","scope":1578,"src":"4988:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1530,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1533,"mutability":"mutable","name":"data","nameLocation":"5025:4:8","nodeType":"VariableDeclaration","scope":1578,"src":"5012:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1532,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1535,"mutability":"mutable","name":"value","nameLocation":"5047:5:8","nodeType":"VariableDeclaration","scope":1578,"src":"5039:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1534,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1537,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:8","nodeType":"VariableDeclaration","scope":1578,"src":"5062:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1536,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:8"},"returnParameters":{"id":1541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1540,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1578,"src":"5113:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1539,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:8"},"scope":1714,"src":"4948:499:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1594,"nodeType":"Block","src":"5724:97:8","statements":[{"expression":{"arguments":[{"id":1589,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"5760:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1590,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"5768:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1588,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1595,1630],"referencedDeclaration":1630,"src":"5741:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5741:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1587,"id":1593,"nodeType":"Return","src":"5734:80:8"}]},"documentation":{"id":1579,"nodeType":"StructuredDocumentation","src":"5453:166:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1595,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:8","nodeType":"FunctionDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1581,"mutability":"mutable","name":"target","nameLocation":"5660:6:8","nodeType":"VariableDeclaration","scope":1595,"src":"5652:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1580,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"data","nameLocation":"5681:4:8","nodeType":"VariableDeclaration","scope":1595,"src":"5668:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1582,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:8"},"returnParameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1595,"src":"5710:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1585,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:8"},"scope":1714,"src":"5624:197:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1629,"nodeType":"Block","src":"6163:228:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1609,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"6192:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1608,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"6181:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6181:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1607,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6173:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1613,"nodeType":"ExpressionStatement","src":"6173:67:8"},{"assignments":[1615,1617],"declarations":[{"constant":false,"id":1615,"mutability":"mutable","name":"success","nameLocation":"6257:7:8","nodeType":"VariableDeclaration","scope":1629,"src":"6252:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1614,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1617,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:8","nodeType":"VariableDeclaration","scope":1629,"src":"6266:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1616,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1622,"initialValue":{"arguments":[{"id":1620,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"6311:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1618,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"6293:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6293:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:8"},{"expression":{"arguments":[{"id":1624,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"6350:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1625,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"6359:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1626,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"6371:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1623,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"6333:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6333:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1606,"id":1628,"nodeType":"Return","src":"6326:58:8"}]},"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"5827:173:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:8","nodeType":"FunctionDefinition","parameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"target","nameLocation":"6050:6:8","nodeType":"VariableDeclaration","scope":1630,"src":"6042:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"data","nameLocation":"6079:4:8","nodeType":"VariableDeclaration","scope":1630,"src":"6066:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1599,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1602,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:8","nodeType":"VariableDeclaration","scope":1630,"src":"6093:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1601,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:8"},"returnParameters":{"id":1606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1630,"src":"6149:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1604,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:8"},"scope":1714,"src":"6005:386:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1646,"nodeType":"Block","src":"6667:101:8","statements":[{"expression":{"arguments":[{"id":1641,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"6705:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1642,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"6713:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1640,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1647,1682],"referencedDeclaration":1682,"src":"6684:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6684:77:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1639,"id":1645,"nodeType":"Return","src":"6677:84:8"}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"6397:168:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1647,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:8","nodeType":"FunctionDefinition","parameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"target","nameLocation":"6608:6:8","nodeType":"VariableDeclaration","scope":1647,"src":"6600:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"data","nameLocation":"6629:4:8","nodeType":"VariableDeclaration","scope":1647,"src":"6616:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1634,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:8"},"returnParameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1647,"src":"6653:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1637,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:8"},"scope":1714,"src":"6570:198:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1681,"nodeType":"Block","src":"7109:232:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1661,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"7138:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1660,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"7127:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7127:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":1663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":1659,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7119:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1665,"nodeType":"ExpressionStatement","src":"7119:69:8"},{"assignments":[1667,1669],"declarations":[{"constant":false,"id":1667,"mutability":"mutable","name":"success","nameLocation":"7205:7:8","nodeType":"VariableDeclaration","scope":1681,"src":"7200:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1666,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1669,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:8","nodeType":"VariableDeclaration","scope":1681,"src":"7214:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1668,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1674,"initialValue":{"arguments":[{"id":1672,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"7261:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1670,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"7241:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7241:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:8"},{"expression":{"arguments":[{"id":1676,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"7300:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1677,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"7309:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1678,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"7321:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1675,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"7283:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1658,"id":1680,"nodeType":"Return","src":"7276:58:8"}]},"documentation":{"id":1648,"nodeType":"StructuredDocumentation","src":"6774:175:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1682,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:8","nodeType":"FunctionDefinition","parameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1650,"mutability":"mutable","name":"target","nameLocation":"7001:6:8","nodeType":"VariableDeclaration","scope":1682,"src":"6993:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1649,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1652,"mutability":"mutable","name":"data","nameLocation":"7030:4:8","nodeType":"VariableDeclaration","scope":1682,"src":"7017:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1651,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1654,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:8","nodeType":"VariableDeclaration","scope":1682,"src":"7044:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1653,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:8"},"returnParameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1682,"src":"7095:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1656,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:8"},"scope":1714,"src":"6954:387:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1712,"nodeType":"Block","src":"7721:582:8","statements":[{"condition":{"id":1694,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"7735:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1710,"nodeType":"Block","src":"7792:505:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1698,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"7876:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7876:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1708,"nodeType":"Block","src":"8234:53:8","statements":[{"expression":{"arguments":[{"id":1705,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"8259:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1704,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8252:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8252:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1707,"nodeType":"ExpressionStatement","src":"8252:20:8"}]},"id":1709,"nodeType":"IfStatement","src":"7872:415:8","trueBody":{"id":1703,"nodeType":"Block","src":"7899:329:8","statements":[{"AST":{"nodeType":"YulBlock","src":"8069:145:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8091:40:8","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8120:10:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8114:5:8"},"nodeType":"YulFunctionCall","src":"8114:17:8"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8095:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8163:2:8","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8167:10:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8159:3:8"},"nodeType":"YulFunctionCall","src":"8159:19:8"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8180:15:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8152:6:8"},"nodeType":"YulFunctionCall","src":"8152:44:8"},"nodeType":"YulExpressionStatement","src":"8152:44:8"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1687,"isOffset":false,"isSlot":false,"src":"8120:10:8","valueSize":1},{"declaration":1687,"isOffset":false,"isSlot":false,"src":"8167:10:8","valueSize":1}],"id":1702,"nodeType":"InlineAssembly","src":"8060:154:8"}]}}]},"id":1711,"nodeType":"IfStatement","src":"7731:566:8","trueBody":{"id":1697,"nodeType":"Block","src":"7744:42:8","statements":[{"expression":{"id":1695,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"7765:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1693,"id":1696,"nodeType":"Return","src":"7758:17:8"}]}}]},"documentation":{"id":1683,"nodeType":"StructuredDocumentation","src":"7347:209:8","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":1713,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:8","nodeType":"FunctionDefinition","parameters":{"id":1690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1685,"mutability":"mutable","name":"success","nameLocation":"7601:7:8","nodeType":"VariableDeclaration","scope":1713,"src":"7596:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1684,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1687,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:8","nodeType":"VariableDeclaration","scope":1713,"src":"7618:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1686,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1689,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:8","nodeType":"VariableDeclaration","scope":1713,"src":"7651:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1688,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:8"},"returnParameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1713,"src":"7707:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1691,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:8"},"scope":1714,"src":"7561:742:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1715,"src":"194:8111:8","usedErrors":[]}],"src":"101:8205:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1736]},"id":1737,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1716,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1717,"nodeType":"StructuredDocumentation","src":"111:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1736,"linearizedBaseContracts":[1736],"name":"Context","nameLocation":"626:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1725,"nodeType":"Block","src":"702:34:9","statements":[{"expression":{"expression":{"id":1722,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1721,"id":1724,"nodeType":"Return","src":"712:17:9"}]},"id":1726,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:9","nodeType":"FunctionDefinition","parameters":{"id":1718,"nodeType":"ParameterList","parameters":[],"src":"659:2:9"},"returnParameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1726,"src":"693:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:9"},"scope":1736,"src":"640:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1734,"nodeType":"Block","src":"809:32:9","statements":[{"expression":{"expression":{"id":1731,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1730,"id":1733,"nodeType":"Return","src":"819:15:9"}]},"id":1735,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:9","nodeType":"FunctionDefinition","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[],"src":"759:2:9"},"returnParameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1735,"src":"793:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1728,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:9"},"scope":1736,"src":"742:99:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1737,"src":"608:235:9","usedErrors":[]}],"src":"86:758:9"},"id":9},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[1962]},"id":1963,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1738,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1739,"nodeType":"StructuredDocumentation","src":"126:34:10","text":" @dev String operations."},"fullyImplemented":true,"id":1962,"linearizedBaseContracts":[1962],"name":"Strings","nameLocation":"169:7:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1742,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"208:12:10","nodeType":"VariableDeclaration","scope":1962,"src":"183:58:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1740,"name":"bytes16","nodeType":"ElementaryTypeName","src":"183:7:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"223:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1745,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"270:15:10","nodeType":"VariableDeclaration","scope":1962,"src":"247:43:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1743,"name":"uint8","nodeType":"ElementaryTypeName","src":"247:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"288:2:10","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1823,"nodeType":"Block","src":"463:632:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"665:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"674:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"665:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1759,"nodeType":"IfStatement","src":"661:51:10","trueBody":{"id":1758,"nodeType":"Block","src":"677:35:10","statements":[{"expression":{"hexValue":"30","id":1756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"698:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":1752,"id":1757,"nodeType":"Return","src":"691:10:10"}]}},{"assignments":[1761],"declarations":[{"constant":false,"id":1761,"mutability":"mutable","name":"temp","nameLocation":"729:4:10","nodeType":"VariableDeclaration","scope":1823,"src":"721:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1763,"initialValue":{"id":1762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"736:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"721:20:10"},{"assignments":[1765],"declarations":[{"constant":false,"id":1765,"mutability":"mutable","name":"digits","nameLocation":"759:6:10","nodeType":"VariableDeclaration","scope":1823,"src":"751:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1764,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1766,"nodeType":"VariableDeclarationStatement","src":"751:14:10"},{"body":{"id":1777,"nodeType":"Block","src":"793:57:10","statements":[{"expression":{"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"807:8:10","subExpression":{"id":1770,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"807:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1772,"nodeType":"ExpressionStatement","src":"807:8:10"},{"expression":{"id":1775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1773,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"829:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"829:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1776,"nodeType":"ExpressionStatement","src":"829:10:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1767,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"782:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"790:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"782:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1778,"nodeType":"WhileStatement","src":"775:75:10"},{"assignments":[1780],"declarations":[{"constant":false,"id":1780,"mutability":"mutable","name":"buffer","nameLocation":"872:6:10","nodeType":"VariableDeclaration","scope":1823,"src":"859:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1779,"name":"bytes","nodeType":"ElementaryTypeName","src":"859:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1785,"initialValue":{"arguments":[{"id":1783,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"891:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"881:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1781,"name":"bytes","nodeType":"ElementaryTypeName","src":"885:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"881:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"859:39:10"},{"body":{"id":1816,"nodeType":"Block","src":"927:131:10","statements":[{"expression":{"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1789,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"941:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"941:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1792,"nodeType":"ExpressionStatement","src":"941:11:10"},{"expression":{"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1793,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"966:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1795,"indexExpression":{"id":1794,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"973:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"966:14:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":1800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"996:2:10","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"1009:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":1804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1017:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1009:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1001:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:10","typeDescriptions":{}}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1001:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"996:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"990:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1798,"name":"uint8","nodeType":"ElementaryTypeName","src":"990:5:10","typeDescriptions":{}}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"990:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"983:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1796,"name":"bytes1","nodeType":"ElementaryTypeName","src":"983:6:10","typeDescriptions":{}}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"983:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"966:56:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1811,"nodeType":"ExpressionStatement","src":"966:56:10"},{"expression":{"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"1036:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1036:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1815,"nodeType":"ExpressionStatement","src":"1036:11:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"915:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"915:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1817,"nodeType":"WhileStatement","src":"908:150:10"},{"expression":{"arguments":[{"id":1820,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"1081:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1074:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1818,"name":"string","nodeType":"ElementaryTypeName","src":"1074:6:10","typeDescriptions":{}}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1074:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1752,"id":1822,"nodeType":"Return","src":"1067:21:10"}]},"documentation":{"id":1746,"nodeType":"StructuredDocumentation","src":"297:90:10","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1824,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"401:8:10","nodeType":"FunctionDefinition","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1748,"mutability":"mutable","name":"value","nameLocation":"418:5:10","nodeType":"VariableDeclaration","scope":1824,"src":"410:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1747,"name":"uint256","nodeType":"ElementaryTypeName","src":"410:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:15:10"},"returnParameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1824,"src":"448:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1750,"name":"string","nodeType":"ElementaryTypeName","src":"448:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"447:15:10"},"scope":1962,"src":"392:703:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1864,"nodeType":"Block","src":"1274:255:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"1288:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1288:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1838,"nodeType":"IfStatement","src":"1284:54:10","trueBody":{"id":1837,"nodeType":"Block","src":"1300:38:10","statements":[{"expression":{"hexValue":"30783030","id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1321:6:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":1831,"id":1836,"nodeType":"Return","src":"1314:13:10"}]}},{"assignments":[1840],"declarations":[{"constant":false,"id":1840,"mutability":"mutable","name":"temp","nameLocation":"1355:4:10","nodeType":"VariableDeclaration","scope":1864,"src":"1347:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1842,"initialValue":{"id":1841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"1362:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1347:20:10"},{"assignments":[1844],"declarations":[{"constant":false,"id":1844,"mutability":"mutable","name":"length","nameLocation":"1385:6:10","nodeType":"VariableDeclaration","scope":1864,"src":"1377:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1843,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1846,"initialValue":{"hexValue":"30","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1394:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1377:18:10"},{"body":{"id":1857,"nodeType":"Block","src":"1423:57:10","statements":[{"expression":{"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1437:8:10","subExpression":{"id":1850,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"1437:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1852,"nodeType":"ExpressionStatement","src":"1437:8:10"},{"expression":{"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1853,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"1459:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1468:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1459:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1856,"nodeType":"ExpressionStatement","src":"1459:10:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1847,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"1412:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1412:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1858,"nodeType":"WhileStatement","src":"1405:75:10"},{"expression":{"arguments":[{"id":1860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"1508:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1861,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"1515:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1859,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1865,1941,1961],"referencedDeclaration":1941,"src":"1496:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1496:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1831,"id":1863,"nodeType":"Return","src":"1489:33:10"}]},"documentation":{"id":1825,"nodeType":"StructuredDocumentation","src":"1101:94:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1865,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1209:11:10","nodeType":"FunctionDefinition","parameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"value","nameLocation":"1229:5:10","nodeType":"VariableDeclaration","scope":1865,"src":"1221:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1826,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:15:10"},"returnParameters":{"id":1831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1865,"src":"1259:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1829,"name":"string","nodeType":"ElementaryTypeName","src":"1259:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:15:10"},"scope":1962,"src":"1200:329:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1940,"nodeType":"Block","src":"1742:351:10","statements":[{"assignments":[1876],"declarations":[{"constant":false,"id":1876,"mutability":"mutable","name":"buffer","nameLocation":"1765:6:10","nodeType":"VariableDeclaration","scope":1940,"src":"1752:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1875,"name":"bytes","nodeType":"ElementaryTypeName","src":"1752:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1885,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1784:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1880,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"1788:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1784:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1784:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1774:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1877,"name":"bytes","nodeType":"ElementaryTypeName","src":"1778:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1774:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1752:47:10"},{"expression":{"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1886,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"1809:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1888,"indexExpression":{"hexValue":"30","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1816:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1809:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1809:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1891,"nodeType":"ExpressionStatement","src":"1809:15:10"},{"expression":{"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1892,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"1834:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1894,"indexExpression":{"hexValue":"31","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1834:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1846:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1834:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1897,"nodeType":"ExpressionStatement","src":"1834:15:10"},{"body":{"id":1926,"nodeType":"Block","src":"1904:87:10","statements":[{"expression":{"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1912,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"1918:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1914,"indexExpression":{"id":1913,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"1925:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1918:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1915,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"1930:12:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1919,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"1943:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1951:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1943:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1930:25:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1918:37:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1921,"nodeType":"ExpressionStatement","src":"1918:37:10"},{"expression":{"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"1969:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1979:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1969:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1925,"nodeType":"ExpressionStatement","src":"1969:11:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1906,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"1892:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1896:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1892:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1927,"initializationExpression":{"assignments":[1899],"declarations":[{"constant":false,"id":1899,"mutability":"mutable","name":"i","nameLocation":"1872:1:10","nodeType":"VariableDeclaration","scope":1927,"src":"1864:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1898,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1905,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1901,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"1880:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1876:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1876:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1864:26:10"},"loopExpression":{"expression":{"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1899:3:10","subExpression":{"id":1909,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"1901:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1911,"nodeType":"ExpressionStatement","src":"1899:3:10"},"nodeType":"ForStatement","src":"1859:132:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"2008:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2017:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2008:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2020:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1928,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2000:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2000:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1934,"nodeType":"ExpressionStatement","src":"2000:55:10"},{"expression":{"arguments":[{"id":1937,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"2079:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2072:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1935,"name":"string","nodeType":"ElementaryTypeName","src":"2072:6:10","typeDescriptions":{}}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2072:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1874,"id":1939,"nodeType":"Return","src":"2065:21:10"}]},"documentation":{"id":1866,"nodeType":"StructuredDocumentation","src":"1535:112:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1941,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1661:11:10","nodeType":"FunctionDefinition","parameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"value","nameLocation":"1681:5:10","nodeType":"VariableDeclaration","scope":1941,"src":"1673:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1867,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1870,"mutability":"mutable","name":"length","nameLocation":"1696:6:10","nodeType":"VariableDeclaration","scope":1941,"src":"1688:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1869,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1672:31:10"},"returnParameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1941,"src":"1727:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1872,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:15:10"},"scope":1962,"src":"1652:441:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1960,"nodeType":"Block","src":"2318:76:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1954,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"2363:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2355:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1952,"name":"uint160","nodeType":"ElementaryTypeName","src":"2355:7:10","typeDescriptions":{}}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2355:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2347:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"2347:7:10","typeDescriptions":{}}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2347:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1957,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1745,"src":"2371:15:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1949,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1865,1941,1961],"referencedDeclaration":1941,"src":"2335:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2335:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1948,"id":1959,"nodeType":"Return","src":"2328:59:10"}]},"documentation":{"id":1942,"nodeType":"StructuredDocumentation","src":"2099:141:10","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1961,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2254:11:10","nodeType":"FunctionDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1944,"mutability":"mutable","name":"addr","nameLocation":"2274:4:10","nodeType":"VariableDeclaration","scope":1961,"src":"2266:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1943,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2265:14:10"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1961,"src":"2303:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1946,"name":"string","nodeType":"ElementaryTypeName","src":"2303:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2302:15:10"},"scope":1962,"src":"2245:149:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1963,"src":"161:2235:10","usedErrors":[]}],"src":"101:2296:10"},"id":10},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1986],"IERC165":[1998]},"id":1987,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1964,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1965,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1987,"sourceUnit":1999,"src":"124:23:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1967,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1998,"src":"754:7:11"},"id":1968,"nodeType":"InheritanceSpecifier","src":"754:7:11"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1966,"nodeType":"StructuredDocumentation","src":"149:576:11","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":1986,"linearizedBaseContracts":[1986,1998],"name":"ERC165","nameLocation":"744:6:11","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1997],"body":{"id":1984,"nodeType":"Block","src":"920:64:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1977,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"937:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1979,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1998,"src":"957:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1998_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1998_$","typeString":"type(contract IERC165)"}],"id":1978,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1998","typeString":"type(contract IERC165)"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1976,"id":1983,"nodeType":"Return","src":"930:47:11"}]},"documentation":{"id":1969,"nodeType":"StructuredDocumentation","src":"768:56:11","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1985,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:11","nodeType":"FunctionDefinition","overrides":{"id":1973,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:11"},"parameters":{"id":1972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1971,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:11","nodeType":"VariableDeclaration","scope":1985,"src":"856:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1970,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:11"},"returnParameters":{"id":1976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1975,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1985,"src":"914:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1974,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:11"},"scope":1986,"src":"829:155:11","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1987,"src":"726:260:11","usedErrors":[]}],"src":"99:888:11"},"id":11},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1998]},"id":1999,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1988,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1989,"nodeType":"StructuredDocumentation","src":"125:279:12","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1998,"linearizedBaseContracts":[1998],"name":"IERC165","nameLocation":"415:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1990,"nodeType":"StructuredDocumentation","src":"429:340:12","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1997,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:12","nodeType":"FunctionDefinition","parameters":{"id":1993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:12","nodeType":"VariableDeclaration","scope":1997,"src":"801:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1991,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:12"},"returnParameters":{"id":1996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1995,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1997,"src":"844:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1994,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:12"},"scope":1998,"src":"774:76:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1999,"src":"405:447:12","usedErrors":[]}],"src":"100:753:12"},"id":12},"contracts/RandomipfsNft.sol":{"ast":{"absolutePath":"contracts/RandomipfsNft.sol","exportedSymbols":{"Address":[1714],"Context":[1736],"ERC165":[1986],"ERC721":[1133],"ERC721URIStorage":[1392],"IERC165":[1998],"IERC721":[1249],"IERC721Metadata":[1419],"IERC721Receiver":[1267],"Ownable":[266],"RandomIpfsNft":[2347],"RandomIpfsNft__NeedMoreETHSent":[2008],"RandomIpfsNft__RangeOutOfBounds":[2006],"RandomIpfsNft__TransferFailed":[2010],"Strings":[1962],"VRFConsumerBaseV2":[57],"VRFCoordinatorV2Interface":[153]},"id":2348,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2000,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:13"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":2001,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2348,"sourceUnit":154,"src":"57:80:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","id":2002,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2348,"sourceUnit":58,"src":"138:61:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":2003,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2348,"sourceUnit":1393,"src":"200:78:13","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2004,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2348,"sourceUnit":267,"src":"279:52:13","symbolAliases":[],"unitAlias":""},{"id":2006,"name":"RandomIpfsNft__RangeOutOfBounds","nameLocation":"340:31:13","nodeType":"ErrorDefinition","parameters":{"id":2005,"nodeType":"ParameterList","parameters":[],"src":"371:2:13"},"src":"334:40:13"},{"id":2008,"name":"RandomIpfsNft__NeedMoreETHSent","nameLocation":"381:30:13","nodeType":"ErrorDefinition","parameters":{"id":2007,"nodeType":"ParameterList","parameters":[],"src":"411:2:13"},"src":"375:39:13"},{"id":2010,"name":"RandomIpfsNft__TransferFailed","nameLocation":"421:29:13","nodeType":"ErrorDefinition","parameters":{"id":2009,"nodeType":"ParameterList","parameters":[],"src":"450:2:13"},"src":"415:38:13"},{"abstract":false,"baseContracts":[{"baseName":{"id":2011,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"481:17:13"},"id":2012,"nodeType":"InheritanceSpecifier","src":"481:17:13"},{"baseName":{"id":2013,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":1392,"src":"500:16:13"},"id":2014,"nodeType":"InheritanceSpecifier","src":"500:16:13"},{"baseName":{"id":2015,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":266,"src":"518:7:13"},"id":2016,"nodeType":"InheritanceSpecifier","src":"518:7:13"}],"canonicalName":"RandomIpfsNft","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2347,"linearizedBaseContracts":[2347,266,1392,1133,1419,1249,1986,1998,1736,57],"name":"RandomIpfsNft","nameLocation":"464:13:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"RandomIpfsNft.Breed","id":2020,"members":[{"id":2017,"name":"PUG","nameLocation":"925:3:13","nodeType":"EnumValue","src":"925:3:13"},{"id":2018,"name":"SHIBA_INU","nameLocation":"938:9:13","nodeType":"EnumValue","src":"938:9:13"},{"id":2019,"name":"ST_BERNARD","nameLocation":"957:10:13","nodeType":"EnumValue","src":"957:10:13"}],"name":"Breed","nameLocation":"909:5:13","nodeType":"EnumDefinition","src":"904:69:13"},{"constant":false,"id":2023,"mutability":"immutable","name":"i_vrfCoordinator","nameLocation":"1055:16:13","nodeType":"VariableDeclaration","scope":2347,"src":"1011:60:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":2022,"nodeType":"UserDefinedTypeName","pathNode":{"id":2021,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":153,"src":"1011:25:13"},"referencedDeclaration":153,"src":"1011:25:13","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"private"},{"constant":false,"id":2025,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"1102:16:13","nodeType":"VariableDeclaration","scope":2347,"src":"1077:41:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2024,"name":"uint64","nodeType":"ElementaryTypeName","src":"1077:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":false,"id":2027,"mutability":"immutable","name":"i_gasLane","nameLocation":"1150:9:13","nodeType":"VariableDeclaration","scope":2347,"src":"1124:35:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1124:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2029,"mutability":"immutable","name":"i_callbackGasLimit","nameLocation":"1190:18:13","nodeType":"VariableDeclaration","scope":2347,"src":"1165:43:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2028,"name":"uint32","nodeType":"ElementaryTypeName","src":"1165:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":true,"id":2032,"mutability":"constant","name":"REQUEST_CONFIRMATIONS","nameLocation":"1238:21:13","nodeType":"VariableDeclaration","scope":2347,"src":"1214:49:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2030,"name":"uint16","nodeType":"ElementaryTypeName","src":"1214:6:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1262:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":2035,"mutability":"constant","name":"NUM_WORDS","nameLocation":"1293:9:13","nodeType":"VariableDeclaration","scope":2347,"src":"1269:37:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2033,"name":"uint32","nodeType":"ElementaryTypeName","src":"1269:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":2034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1305:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"functionSelector":"a36f573b","id":2039,"mutability":"mutable","name":"s_requestIdToSender","nameLocation":"1367:19:13","nodeType":"VariableDeclaration","scope":2347,"src":"1332:54:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2038,"keyType":{"id":2036,"name":"uint256","nodeType":"ElementaryTypeName","src":"1340:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1332:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":2037,"name":"address","nodeType":"ElementaryTypeName","src":"1351:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"0b21a83b","id":2041,"mutability":"mutable","name":"s_tokenCounter","nameLocation":"1429:14:13","nodeType":"VariableDeclaration","scope":2347,"src":"1414:29:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2040,"name":"uint256","nodeType":"ElementaryTypeName","src":"1414:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"id":2044,"mutability":"constant","name":"MAX_CHANCE_VALUE","nameLocation":"1475:16:13","nodeType":"VariableDeclaration","scope":2347,"src":"1449:48:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"1449:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1494:3:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"constant":false,"id":2047,"mutability":"mutable","name":"s_dogTokenUris","nameLocation":"1521:14:13","nodeType":"VariableDeclaration","scope":2347,"src":"1503:32:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":2045,"name":"string","nodeType":"ElementaryTypeName","src":"1503:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2046,"nodeType":"ArrayTypeName","src":"1503:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2049,"mutability":"immutable","name":"i_mintFee","nameLocation":"1568:9:13","nodeType":"VariableDeclaration","scope":2347,"src":"1541:36:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1541:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"anonymous":false,"id":2055,"name":"NftRequested","nameLocation":"1604:12:13","nodeType":"EventDefinition","parameters":{"id":2054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2051,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1633:9:13","nodeType":"VariableDeclaration","scope":2055,"src":"1617:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2050,"name":"uint256","nodeType":"ElementaryTypeName","src":"1617:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2053,"indexed":false,"mutability":"mutable","name":"requester","nameLocation":"1652:9:13","nodeType":"VariableDeclaration","scope":2055,"src":"1644:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2052,"name":"address","nodeType":"ElementaryTypeName","src":"1644:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1616:46:13"},"src":"1598:65:13"},{"anonymous":false,"id":2062,"name":"NftMinted","nameLocation":"1674:9:13","nodeType":"EventDefinition","parameters":{"id":2061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2058,"indexed":false,"mutability":"mutable","name":"dogBreed","nameLocation":"1690:8:13","nodeType":"VariableDeclaration","scope":2062,"src":"1684:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2020","typeString":"enum RandomIpfsNft.Breed"},"typeName":{"id":2057,"nodeType":"UserDefinedTypeName","pathNode":{"id":2056,"name":"Breed","nodeType":"IdentifierPath","referencedDeclaration":2020,"src":"1684:5:13"},"referencedDeclaration":2020,"src":"1684:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2020","typeString":"enum RandomIpfsNft.Breed"}},"visibility":"internal"},{"constant":false,"id":2060,"indexed":false,"mutability":"mutable","name":"minter","nameLocation":"1708:6:13","nodeType":"VariableDeclaration","scope":2062,"src":"1700:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2059,"name":"address","nodeType":"ElementaryTypeName","src":"1700:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:32:13"},"src":"1668:48:13"},{"body":{"id":2111,"nodeType":"Block","src":"1942:266:13","statements":[{"expression":{"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2085,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"1952:16:13","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2087,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"1997:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2086,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"1971:25:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$153_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1971:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"src":"1952:62:13","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"id":2090,"nodeType":"ExpressionStatement","src":"1952:62:13"},{"expression":{"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2091,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"2024:16:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2092,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"2043:14:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"2024:33:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":2094,"nodeType":"ExpressionStatement","src":"2024:33:13"},{"expression":{"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2095,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"2067:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2096,"name":"gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"2079:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2067:19:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2098,"nodeType":"ExpressionStatement","src":"2067:19:13"},{"expression":{"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2099,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"2096:18:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2100,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"2117:16:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"2096:37:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":2102,"nodeType":"ExpressionStatement","src":"2096:37:13"},{"expression":{"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2103,"name":"s_dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"2143:14:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2104,"name":"dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"2160:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"2143:29:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":2106,"nodeType":"ExpressionStatement","src":"2143:29:13"},{"expression":{"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2107,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2182:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2108,"name":"mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"2194:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2182:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2110,"nodeType":"ExpressionStatement","src":"2182:19:13"}]},"id":2112,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":2078,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"1891:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2079,"kind":"baseConstructorSpecifier","modifierName":{"id":2077,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"1872:17:13"},"nodeType":"ModifierInvocation","src":"1872:36:13"},{"arguments":[{"hexValue":"52616e646f6d2049504653204e4654","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1916:17:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_060d1bdab5c66f2c3459267e43d1a510b3c61ad39afb4b1b9b944fbc6d6a9661","typeString":"literal_string \"Random IPFS NFT\""},"value":"Random IPFS NFT"},{"hexValue":"52494e","id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1935:5:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c2493aacafadd9e7cfb3e25fe184ffa39fa77c9794b3bfc81822f04194b6f764","typeString":"literal_string \"RIN\""},"value":"RIN"}],"id":2083,"kind":"baseConstructorSpecifier","modifierName":{"id":2080,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":1133,"src":"1909:6:13"},"nodeType":"ModifierInvocation","src":"1909:32:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"vrfCoordinatorV2","nameLocation":"1742:16:13","nodeType":"VariableDeclaration","scope":2112,"src":"1734:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2063,"name":"address","nodeType":"ElementaryTypeName","src":"1734:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2066,"mutability":"mutable","name":"subscriptionId","nameLocation":"1767:14:13","nodeType":"VariableDeclaration","scope":2112,"src":"1760:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2065,"name":"uint64","nodeType":"ElementaryTypeName","src":"1760:6:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2068,"mutability":"mutable","name":"gasLane","nameLocation":"1791:7:13","nodeType":"VariableDeclaration","scope":2112,"src":"1783:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2067,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1783:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2070,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1807:16:13","nodeType":"VariableDeclaration","scope":2112,"src":"1800:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2069,"name":"uint32","nodeType":"ElementaryTypeName","src":"1800:6:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2073,"mutability":"mutable","name":"dogTokenUris","nameLocation":"1841:12:13","nodeType":"VariableDeclaration","scope":2112,"src":"1825:28:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":2071,"name":"string","nodeType":"ElementaryTypeName","src":"1825:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":2072,"nodeType":"ArrayTypeName","src":"1825:8:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":2075,"mutability":"mutable","name":"mintFee","nameLocation":"1863:7:13","nodeType":"VariableDeclaration","scope":2112,"src":"1855:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2074,"name":"uint256","nodeType":"ElementaryTypeName","src":"1855:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1733:138:13"},"returnParameters":{"id":2084,"nodeType":"ParameterList","parameters":[],"src":"1942:0:13"},"scope":2347,"src":"1722:486:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2150,"nodeType":"Block","src":"2279:420:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2117,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2293:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"2293:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2119,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"2305:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2293:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2125,"nodeType":"IfStatement","src":"2289:91:13","trueBody":{"id":2124,"nodeType":"Block","src":"2316:64:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2121,"name":"RandomIpfsNft__NeedMoreETHSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2008,"src":"2337:30:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2337:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2123,"nodeType":"RevertStatement","src":"2330:39:13"}]}},{"expression":{"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2126,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"2389:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2129,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"2450:9:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2130,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"2473:16:13","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":2131,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"2503:21:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2132,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"2538:18:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2133,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"2570:9:13","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":2127,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"2401:16:13","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":86,"src":"2401:35:13","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2401:188:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2389:200:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2136,"nodeType":"ExpressionStatement","src":"2389:200:13"},{"expression":{"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2137,"name":"s_requestIdToSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"2599:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2139,"indexExpression":{"id":2138,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"2619:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2599:30:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2140,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2632:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2632:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2599:43:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2143,"nodeType":"ExpressionStatement","src":"2599:43:13"},{"eventCall":{"arguments":[{"id":2145,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"2670:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2146,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2681:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2681:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2144,"name":"NftRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"2657:12:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2657:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2149,"nodeType":"EmitStatement","src":"2652:40:13"}]},"functionSelector":"aa152491","id":2151,"implemented":true,"kind":"function","modifiers":[],"name":"requestNft","nameLocation":"2223:10:13","nodeType":"FunctionDefinition","parameters":{"id":2113,"nodeType":"ParameterList","parameters":[],"src":"2233:2:13"},"returnParameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2115,"mutability":"mutable","name":"requestId","nameLocation":"2268:9:13","nodeType":"VariableDeclaration","scope":2151,"src":"2260:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2114,"name":"uint256","nodeType":"ElementaryTypeName","src":"2260:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2259:19:13"},"scope":2347,"src":"2214:485:13","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[30],"body":{"id":2209,"nodeType":"Block","src":"2800:429:13","statements":[{"assignments":[2161],"declarations":[{"constant":false,"id":2161,"mutability":"mutable","name":"dogOwner","nameLocation":"2818:8:13","nodeType":"VariableDeclaration","scope":2209,"src":"2810:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2160,"name":"address","nodeType":"ElementaryTypeName","src":"2810:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2165,"initialValue":{"baseExpression":{"id":2162,"name":"s_requestIdToSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"2829:19:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2164,"indexExpression":{"id":2163,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"2849:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2829:30:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2810:49:13"},{"assignments":[2167],"declarations":[{"constant":false,"id":2167,"mutability":"mutable","name":"newTokenId","nameLocation":"2877:10:13","nodeType":"VariableDeclaration","scope":2209,"src":"2869:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2166,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2169,"initialValue":{"id":2168,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"2890:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2869:35:13"},{"assignments":[2171],"declarations":[{"constant":false,"id":2171,"mutability":"mutable","name":"moddedRng","nameLocation":"2922:9:13","nodeType":"VariableDeclaration","scope":2209,"src":"2914:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2170,"name":"uint256","nodeType":"ElementaryTypeName","src":"2914:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2177,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2172,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"2934:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2174,"indexExpression":{"hexValue":"30","id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2946:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2934:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2175,"name":"MAX_CHANCE_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"2951:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2934:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2914:53:13"},{"assignments":[2180],"declarations":[{"constant":false,"id":2180,"mutability":"mutable","name":"dogBreed","nameLocation":"2983:8:13","nodeType":"VariableDeclaration","scope":2209,"src":"2977:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2020","typeString":"enum RandomIpfsNft.Breed"},"typeName":{"id":2179,"nodeType":"UserDefinedTypeName","pathNode":{"id":2178,"name":"Breed","nodeType":"IdentifierPath","referencedDeclaration":2020,"src":"2977:5:13"},"referencedDeclaration":2020,"src":"2977:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2020","typeString":"enum RandomIpfsNft.Breed"}},"visibility":"internal"}],"id":2184,"initialValue":{"arguments":[{"id":2182,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"3016:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2181,"name":"getBreedFromModdedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"2994:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_enum$_Breed_$2020_$","typeString":"function (uint256) pure returns (enum RandomIpfsNft.Breed)"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2994:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2020","typeString":"enum RandomIpfsNft.Breed"}},"nodeType":"VariableDeclarationStatement","src":"2977:49:13"},{"expression":{"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2185,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"3036:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2186,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"3054:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3036:32:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2188,"nodeType":"ExpressionStatement","src":"3036:32:13"},{"expression":{"arguments":[{"id":2190,"name":"dogOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"3088:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2191,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"3098:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2189,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[748,777],"referencedDeclaration":748,"src":"3078:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3078:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2193,"nodeType":"ExpressionStatement","src":"3078:31:13"},{"expression":{"arguments":[{"id":2195,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"3132:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":2196,"name":"s_dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"3144:14:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":2201,"indexExpression":{"arguments":[{"id":2199,"name":"dogBreed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"3167:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2020","typeString":"enum RandomIpfsNft.Breed"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Breed_$2020","typeString":"enum RandomIpfsNft.Breed"}],"id":2198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3159:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2197,"name":"uint256","nodeType":"ElementaryTypeName","src":"3159:7:13","typeDescriptions":{}}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3159:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3144:33:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2194,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"3119:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3119:59:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2203,"nodeType":"ExpressionStatement","src":"3119:59:13"},{"eventCall":{"arguments":[{"id":2205,"name":"dogBreed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"3203:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2020","typeString":"enum RandomIpfsNft.Breed"}},{"id":2206,"name":"dogOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"3213:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Breed_$2020","typeString":"enum RandomIpfsNft.Breed"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2204,"name":"NftMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2062,"src":"3193:9:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_Breed_$2020_$_t_address_$returns$__$","typeString":"function (enum RandomIpfsNft.Breed,address)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3193:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2208,"nodeType":"EmitStatement","src":"3188:34:13"}]},"id":2210,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"2714:18:13","nodeType":"FunctionDefinition","overrides":{"id":2158,"nodeType":"OverrideSpecifier","overrides":[],"src":"2791:8:13"},"parameters":{"id":2157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2153,"mutability":"mutable","name":"requestId","nameLocation":"2741:9:13","nodeType":"VariableDeclaration","scope":2210,"src":"2733:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2152,"name":"uint256","nodeType":"ElementaryTypeName","src":"2733:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2156,"mutability":"mutable","name":"randomWords","nameLocation":"2769:11:13","nodeType":"VariableDeclaration","scope":2210,"src":"2752:28:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2154,"name":"uint256","nodeType":"ElementaryTypeName","src":"2752:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2155,"nodeType":"ArrayTypeName","src":"2752:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2732:49:13"},"returnParameters":{"id":2159,"nodeType":"ParameterList","parameters":[],"src":"2800:0:13"},"scope":2347,"src":"2705:524:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2243,"nodeType":"Block","src":"3272:191:13","statements":[{"assignments":[2216],"declarations":[{"constant":false,"id":2216,"mutability":"mutable","name":"amount","nameLocation":"3290:6:13","nodeType":"VariableDeclaration","scope":2243,"src":"3282:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2215,"name":"uint256","nodeType":"ElementaryTypeName","src":"3282:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2222,"initialValue":{"expression":{"arguments":[{"id":2219,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3307:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_RandomIpfsNft_$2347","typeString":"contract RandomIpfsNft"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RandomIpfsNft_$2347","typeString":"contract RandomIpfsNft"}],"id":2218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3299:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2217,"name":"address","nodeType":"ElementaryTypeName","src":"3299:7:13","typeDescriptions":{}}},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3299:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"3299:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3282:38:13"},{"assignments":[2224,null],"declarations":[{"constant":false,"id":2224,"mutability":"mutable","name":"success","nameLocation":"3336:7:13","nodeType":"VariableDeclaration","scope":2243,"src":"3331:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2223,"name":"bool","nodeType":"ElementaryTypeName","src":"3331:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2235,"initialValue":{"arguments":[{"hexValue":"","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3389:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":2227,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3357:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3357:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3349:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2225,"name":"address","nodeType":"ElementaryTypeName","src":"3349:8:13","stateMutability":"payable","typeDescriptions":{}}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3349:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"3349:24:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2231,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"3381:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3349:39:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3349:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3330:62:13"},{"condition":{"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3405:8:13","subExpression":{"id":2236,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"3406:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2242,"nodeType":"IfStatement","src":"3402:55:13","trueBody":{"id":2241,"nodeType":"Block","src":"3415:42:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2238,"name":"RandomIpfsNft__TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"3424:29:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3424:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2240,"nodeType":"RevertStatement","src":"3417:38:13"}]}}]},"functionSelector":"3ccfd60b","id":2244,"implemented":true,"kind":"function","modifiers":[{"id":2213,"kind":"modifierInvocation","modifierName":{"id":2212,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":185,"src":"3262:9:13"},"nodeType":"ModifierInvocation","src":"3262:9:13"}],"name":"withdraw","nameLocation":"3244:8:13","nodeType":"FunctionDefinition","parameters":{"id":2211,"nodeType":"ParameterList","parameters":[],"src":"3252:2:13"},"returnParameters":{"id":2214,"nodeType":"ParameterList","parameters":[],"src":"3272:0:13"},"scope":2347,"src":"3235:228:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2304,"nodeType":"Block","src":"3547:406:13","statements":[{"assignments":[2253],"declarations":[{"constant":false,"id":2253,"mutability":"mutable","name":"cummulativeSum","nameLocation":"3565:14:13","nodeType":"VariableDeclaration","scope":2304,"src":"3557:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2252,"name":"uint256","nodeType":"ElementaryTypeName","src":"3557:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2255,"initialValue":{"hexValue":"30","id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3582:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3557:26:13"},{"assignments":[2261],"declarations":[{"constant":false,"id":2261,"mutability":"mutable","name":"chanceArray","nameLocation":"3611:11:13","nodeType":"VariableDeclaration","scope":2304,"src":"3593:29:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":2259,"name":"uint256","nodeType":"ElementaryTypeName","src":"3593:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2260,"length":{"hexValue":"33","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3601:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"3593:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"id":2264,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2262,"name":"getChanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2318,"src":"3625:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_array$_t_uint256_$3_memory_ptr_$","typeString":"function () pure returns (uint256[3] memory)"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3625:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"nodeType":"VariableDeclarationStatement","src":"3593:48:13"},{"body":{"id":2299,"nodeType":"Block","src":"3699:197:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2276,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"3716:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2277,"name":"cummulativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"3729:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3716:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2279,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"3747:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2280,"name":"cummulativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"3759:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":2281,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"3776:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":2283,"indexExpression":{"id":2282,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"3788:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3759:31:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3747:43:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3716:74:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2292,"nodeType":"IfStatement","src":"3713:127:13","trueBody":{"id":2291,"nodeType":"Block","src":"3792:48:13","statements":[{"expression":{"arguments":[{"id":2288,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"3823:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2287,"name":"Breed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"3817:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Breed_$2020_$","typeString":"type(enum RandomIpfsNft.Breed)"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3817:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2020","typeString":"enum RandomIpfsNft.Breed"}},"functionReturnParameters":2251,"id":2290,"nodeType":"Return","src":"3810:15:13"}]}},{"expression":{"id":2297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2293,"name":"cummulativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2253,"src":"3853:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":2294,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"3871:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":2296,"indexExpression":{"id":2295,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"3883:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3871:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3853:32:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2298,"nodeType":"ExpressionStatement","src":"3853:32:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2269,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"3670:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2270,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"3674:11:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3674:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3670:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2300,"initializationExpression":{"assignments":[2266],"declarations":[{"constant":false,"id":2266,"mutability":"mutable","name":"i","nameLocation":"3663:1:13","nodeType":"VariableDeclaration","scope":2300,"src":"3655:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2265,"name":"uint256","nodeType":"ElementaryTypeName","src":"3655:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2268,"initialValue":{"hexValue":"30","id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3667:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3655:13:13"},"loopExpression":{"expression":{"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3694:3:13","subExpression":{"id":2273,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2266,"src":"3694:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2275,"nodeType":"ExpressionStatement","src":"3694:3:13"},"nodeType":"ForStatement","src":"3651:245:13"},{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2301,"name":"RandomIpfsNft__RangeOutOfBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"3912:31:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3912:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2303,"nodeType":"RevertStatement","src":"3905:40:13"}]},"functionSelector":"a51cccf3","id":2305,"implemented":true,"kind":"function","modifiers":[],"name":"getBreedFromModdedRng","nameLocation":"3478:21:13","nodeType":"FunctionDefinition","parameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"moddedRng","nameLocation":"3508:9:13","nodeType":"VariableDeclaration","scope":2305,"src":"3500:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2245,"name":"uint256","nodeType":"ElementaryTypeName","src":"3500:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3499:19:13"},"returnParameters":{"id":2251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2305,"src":"3540:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2020","typeString":"enum RandomIpfsNft.Breed"},"typeName":{"id":2249,"nodeType":"UserDefinedTypeName","pathNode":{"id":2248,"name":"Breed","nodeType":"IdentifierPath","referencedDeclaration":2020,"src":"3540:5:13"},"referencedDeclaration":2020,"src":"3540:5:13","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$2020","typeString":"enum RandomIpfsNft.Breed"}},"visibility":"internal"}],"src":"3539:7:13"},"scope":2347,"src":"3469:484:13","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":2317,"nodeType":"Block","src":"4025:50:13","statements":[{"expression":{"components":[{"hexValue":"3130","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4043:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},{"hexValue":"3330","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4047:2:13","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},{"id":2314,"name":"MAX_CHANCE_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"4051:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2315,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4042:26:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"functionReturnParameters":2311,"id":2316,"nodeType":"Return","src":"4035:33:13"}]},"functionSelector":"5dacf5f4","id":2318,"implemented":true,"kind":"function","modifiers":[],"name":"getChanceArray","nameLocation":"3968:14:13","nodeType":"FunctionDefinition","parameters":{"id":2306,"nodeType":"ParameterList","parameters":[],"src":"3982:2:13"},"returnParameters":{"id":2311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2318,"src":"4006:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":2307,"name":"uint256","nodeType":"ElementaryTypeName","src":"4006:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2309,"length":{"hexValue":"33","id":2308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4014:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"4006:10:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"src":"4005:19:13"},"scope":2347,"src":"3959:116:13","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":2325,"nodeType":"Block","src":"4133:33:13","statements":[{"expression":{"id":2323,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"4150:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2322,"id":2324,"nodeType":"Return","src":"4143:16:13"}]},"functionSelector":"7a5caab3","id":2326,"implemented":true,"kind":"function","modifiers":[],"name":"getMintFee","nameLocation":"4090:10:13","nodeType":"FunctionDefinition","parameters":{"id":2319,"nodeType":"ParameterList","parameters":[],"src":"4100:2:13"},"returnParameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2326,"src":"4124:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2320,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4123:9:13"},"scope":2347,"src":"4081:85:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2337,"nodeType":"Block","src":"4248:45:13","statements":[{"expression":{"baseExpression":{"id":2333,"name":"s_dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"4265:14:13","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":2335,"indexExpression":{"id":2334,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"4280:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4265:21:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2332,"id":2336,"nodeType":"Return","src":"4258:28:13"}]},"functionSelector":"3af25975","id":2338,"implemented":true,"kind":"function","modifiers":[],"name":"getDogTokenUris","nameLocation":"4181:15:13","nodeType":"FunctionDefinition","parameters":{"id":2329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2328,"mutability":"mutable","name":"index","nameLocation":"4205:5:13","nodeType":"VariableDeclaration","scope":2338,"src":"4197:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2327,"name":"uint256","nodeType":"ElementaryTypeName","src":"4197:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4196:15:13"},"returnParameters":{"id":2332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2331,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2338,"src":"4233:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2330,"name":"string","nodeType":"ElementaryTypeName","src":"4233:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4232:15:13"},"scope":2347,"src":"4172:121:13","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":2345,"nodeType":"Block","src":"4356:38:13","statements":[{"expression":{"id":2343,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"4373:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2342,"id":2344,"nodeType":"Return","src":"4366:21:13"}]},"functionSelector":"6e02007d","id":2346,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCounter","nameLocation":"4308:15:13","nodeType":"FunctionDefinition","parameters":{"id":2339,"nodeType":"ParameterList","parameters":[],"src":"4323:2:13"},"returnParameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2346,"src":"4347:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"4347:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4346:9:13"},"scope":2347,"src":"4299:95:13","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":2348,"src":"455:4023:13","usedErrors":[8,2006,2008,2010]}],"src":"32:4446:13"},"id":13}},"contracts":{"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":161,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_329":{"entryPoint":null,"id":329,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":576,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":437,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":289,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":468,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":522,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":383,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":835,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":336,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":309,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":314,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":304,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":299,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":319,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:14","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:14","statements":[{"nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:14"},"nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:14"},"nodeType":"YulFunctionCall","src":"187:12:14"},"nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nodeType":"YulBlock","src":"423:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:14"},"nodeType":"YulFunctionCall","src":"433:12:14"},"nodeType":"YulExpressionStatement","src":"433:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:14"},{"body":{"nodeType":"YulBlock","src":"546:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:14"},"nodeType":"YulFunctionCall","src":"556:12:14"},"nodeType":"YulExpressionStatement","src":"556:12:14"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:14"},{"body":{"nodeType":"YulBlock","src":"628:54:14","statements":[{"nodeType":"YulAssignment","src":"638:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:14"},"nodeType":"YulFunctionCall","src":"652:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:14"},"nodeType":"YulFunctionCall","src":"668:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:14"},"nodeType":"YulFunctionCall","src":"648:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:14","type":""}],"src":"580:102:14"},{"body":{"nodeType":"YulBlock","src":"716:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:14"},"nodeType":"YulFunctionCall","src":"726:88:14"},"nodeType":"YulExpressionStatement","src":"726:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:14"},"nodeType":"YulFunctionCall","src":"823:15:14"},"nodeType":"YulExpressionStatement","src":"823:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:14"},"nodeType":"YulFunctionCall","src":"847:15:14"},"nodeType":"YulExpressionStatement","src":"847:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:14"},{"body":{"nodeType":"YulBlock","src":"917:238:14","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:14"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:14"},"nodeType":"YulFunctionCall","src":"957:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:14"},"nodeType":"YulFunctionCall","src":"945:40:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:14"},"nodeType":"YulFunctionCall","src":"1098:18:14"},"nodeType":"YulExpressionStatement","src":"1098:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:14"},"nodeType":"YulFunctionCall","src":"1036:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:14"},"nodeType":"YulFunctionCall","src":"1072:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:14"},"nodeType":"YulFunctionCall","src":"1033:62:14"},"nodeType":"YulIf","src":"1030:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:14"},"nodeType":"YulFunctionCall","src":"1127:22:14"},"nodeType":"YulExpressionStatement","src":"1127:22:14"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:14","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:14","type":""}],"src":"874:281:14"},{"body":{"nodeType":"YulBlock","src":"1202:88:14","statements":[{"nodeType":"YulAssignment","src":"1212:30:14","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:14"},"nodeType":"YulFunctionCall","src":"1222:20:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:14"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:14"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:14"},"nodeType":"YulFunctionCall","src":"1251:33:14"},"nodeType":"YulExpressionStatement","src":"1251:33:14"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:14","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:14","type":""}],"src":"1161:129:14"},{"body":{"nodeType":"YulBlock","src":"1363:241:14","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:14"},"nodeType":"YulFunctionCall","src":"1470:18:14"},"nodeType":"YulExpressionStatement","src":"1470:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:14"},"nodeType":"YulFunctionCall","src":"1437:30:14"},"nodeType":"YulIf","src":"1434:56:14"},{"nodeType":"YulAssignment","src":"1500:37:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:14"},"nodeType":"YulFunctionCall","src":"1508:29:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:14"}]},{"nodeType":"YulAssignment","src":"1574:23:14","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:14"},"nodeType":"YulFunctionCall","src":"1582:15:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:14"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:14","type":""}],"src":"1296:308:14"},{"body":{"nodeType":"YulBlock","src":"1659:258:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1669:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1678:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1673:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1738:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1763:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"1768:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:14"},"nodeType":"YulFunctionCall","src":"1759:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1782:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"1787:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:14"},"nodeType":"YulFunctionCall","src":"1778:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1772:5:14"},"nodeType":"YulFunctionCall","src":"1772:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:14"},"nodeType":"YulFunctionCall","src":"1752:39:14"},"nodeType":"YulExpressionStatement","src":"1752:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1699:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"1702:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1696:2:14"},"nodeType":"YulFunctionCall","src":"1696:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1710:19:14","statements":[{"nodeType":"YulAssignment","src":"1712:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1721:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:14"},"nodeType":"YulFunctionCall","src":"1717:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"1692:3:14","statements":[]},"src":"1688:113:14"},{"body":{"nodeType":"YulBlock","src":"1835:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1885:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:14"},"nodeType":"YulFunctionCall","src":"1881:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:14"},"nodeType":"YulFunctionCall","src":"1874:27:14"},"nodeType":"YulExpressionStatement","src":"1874:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1816:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"1819:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1813:2:14"},"nodeType":"YulFunctionCall","src":"1813:13:14"},"nodeType":"YulIf","src":"1810:101:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1641:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1646:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"1651:6:14","type":""}],"src":"1610:307:14"},{"body":{"nodeType":"YulBlock","src":"2018:326:14","statements":[{"nodeType":"YulAssignment","src":"2028:75:14","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2095:6:14"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2053:41:14"},"nodeType":"YulFunctionCall","src":"2053:49:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2037:15:14"},"nodeType":"YulFunctionCall","src":"2037:66:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2028:5:14"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2119:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"2126:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:14"},"nodeType":"YulFunctionCall","src":"2112:21:14"},"nodeType":"YulExpressionStatement","src":"2112:21:14"},{"nodeType":"YulVariableDeclaration","src":"2142:27:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2157:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2164:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:14"},"nodeType":"YulFunctionCall","src":"2153:16:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2146:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2207:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2209:77:14"},"nodeType":"YulFunctionCall","src":"2209:79:14"},"nodeType":"YulExpressionStatement","src":"2209:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2188:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2193:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:14"},"nodeType":"YulFunctionCall","src":"2184:16:14"},{"name":"end","nodeType":"YulIdentifier","src":"2202:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2181:2:14"},"nodeType":"YulFunctionCall","src":"2181:25:14"},"nodeType":"YulIf","src":"2178:112:14"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2321:3:14"},{"name":"dst","nodeType":"YulIdentifier","src":"2326:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2331:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2299:21:14"},"nodeType":"YulFunctionCall","src":"2299:39:14"},"nodeType":"YulExpressionStatement","src":"2299:39:14"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1991:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"1996:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2004:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2012:5:14","type":""}],"src":"1923:421:14"},{"body":{"nodeType":"YulBlock","src":"2437:282:14","statements":[{"body":{"nodeType":"YulBlock","src":"2486:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2488:77:14"},"nodeType":"YulFunctionCall","src":"2488:79:14"},"nodeType":"YulExpressionStatement","src":"2488:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2473:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:14"},"nodeType":"YulFunctionCall","src":"2461:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"2480:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:14"},"nodeType":"YulFunctionCall","src":"2457:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:14"},"nodeType":"YulFunctionCall","src":"2450:35:14"},"nodeType":"YulIf","src":"2447:122:14"},{"nodeType":"YulVariableDeclaration","src":"2578:27:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2598:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:14"},"nodeType":"YulFunctionCall","src":"2592:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2582:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2614:99:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2686:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2694:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:14"},"nodeType":"YulFunctionCall","src":"2682:17:14"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"2709:3:14"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2623:58:14"},"nodeType":"YulFunctionCall","src":"2623:90:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2614:5:14"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2415:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"2423:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2431:5:14","type":""}],"src":"2364:355:14"},{"body":{"nodeType":"YulBlock","src":"2839:739:14","statements":[{"body":{"nodeType":"YulBlock","src":"2885:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2887:77:14"},"nodeType":"YulFunctionCall","src":"2887:79:14"},"nodeType":"YulExpressionStatement","src":"2887:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2869:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2856:3:14"},"nodeType":"YulFunctionCall","src":"2856:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"2881:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2852:3:14"},"nodeType":"YulFunctionCall","src":"2852:32:14"},"nodeType":"YulIf","src":"2849:119:14"},{"nodeType":"YulBlock","src":"2978:291:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2993:38:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3028:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:14"},"nodeType":"YulFunctionCall","src":"3013:17:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3007:5:14"},"nodeType":"YulFunctionCall","src":"3007:24:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2997:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3078:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3080:77:14"},"nodeType":"YulFunctionCall","src":"3080:79:14"},"nodeType":"YulExpressionStatement","src":"3080:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3050:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3058:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3047:2:14"},"nodeType":"YulFunctionCall","src":"3047:30:14"},"nodeType":"YulIf","src":"3044:117:14"},{"nodeType":"YulAssignment","src":"3175:84:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3242:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3227:3:14"},"nodeType":"YulFunctionCall","src":"3227:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3251:7:14"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3185:41:14"},"nodeType":"YulFunctionCall","src":"3185:74:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3175:6:14"}]}]},{"nodeType":"YulBlock","src":"3279:292:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3294:39:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3318:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3329:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3314:3:14"},"nodeType":"YulFunctionCall","src":"3314:18:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3308:5:14"},"nodeType":"YulFunctionCall","src":"3308:25:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3298:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3380:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3382:77:14"},"nodeType":"YulFunctionCall","src":"3382:79:14"},"nodeType":"YulExpressionStatement","src":"3382:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3352:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3360:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3349:2:14"},"nodeType":"YulFunctionCall","src":"3349:30:14"},"nodeType":"YulIf","src":"3346:117:14"},{"nodeType":"YulAssignment","src":"3477:84:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3533:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3544:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3529:3:14"},"nodeType":"YulFunctionCall","src":"3529:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3553:7:14"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3487:41:14"},"nodeType":"YulFunctionCall","src":"3487:74:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3477:6:14"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2801:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2812:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2824:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2832:6:14","type":""}],"src":"2725:853:14"},{"body":{"nodeType":"YulBlock","src":"3612:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3629:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3632:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3622:6:14"},"nodeType":"YulFunctionCall","src":"3622:88:14"},"nodeType":"YulExpressionStatement","src":"3622:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3726:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3729:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3719:6:14"},"nodeType":"YulFunctionCall","src":"3719:15:14"},"nodeType":"YulExpressionStatement","src":"3719:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3750:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3753:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3743:6:14"},"nodeType":"YulFunctionCall","src":"3743:15:14"},"nodeType":"YulExpressionStatement","src":"3743:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3584:180:14"},{"body":{"nodeType":"YulBlock","src":"3821:269:14","statements":[{"nodeType":"YulAssignment","src":"3831:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3845:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3841:3:14"},"nodeType":"YulFunctionCall","src":"3841:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3831:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"3862:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3892:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"3898:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3888:3:14"},"nodeType":"YulFunctionCall","src":"3888:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3866:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3939:51:14","statements":[{"nodeType":"YulAssignment","src":"3953:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3967:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3975:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3963:3:14"},"nodeType":"YulFunctionCall","src":"3963:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3953:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3919:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3912:6:14"},"nodeType":"YulFunctionCall","src":"3912:26:14"},"nodeType":"YulIf","src":"3909:81:14"},{"body":{"nodeType":"YulBlock","src":"4042:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4056:16:14"},"nodeType":"YulFunctionCall","src":"4056:18:14"},"nodeType":"YulExpressionStatement","src":"4056:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4006:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4029:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4037:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4026:2:14"},"nodeType":"YulFunctionCall","src":"4026:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4003:2:14"},"nodeType":"YulFunctionCall","src":"4003:38:14"},"nodeType":"YulIf","src":"4000:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3805:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3814:6:14","type":""}],"src":"3770:320:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200254e3803806200254e8339818101604052810190620000379190620002be565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b505050620003a8565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b60208210811415620003a257620003a162000343565b5b50919050565b61219680620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e991906113cd565b6102bc565b6040516100fb9190611415565b60405180910390f35b61010c61039e565b60405161011991906114c9565b60405180910390f35b61013c60048036038101906101379190611521565b610430565b604051610149919061158f565b60405180910390f35b61016c600480360381019061016791906115d6565b610476565b005b61018860048036038101906101839190611616565b61058e565b005b6101a4600480360381019061019f9190611616565b6105ee565b005b6101c060048036038101906101bb9190611521565b61060e565b6040516101cd919061158f565b60405180910390f35b6101f060048036038101906101eb9190611669565b6106c0565b6040516101fd91906116a5565b60405180910390f35b61020e610778565b60405161021b91906114c9565b60405180910390f35b61023e600480360381019061023991906116ec565b61080a565b005b61025a60048036038101906102559190611861565b610820565b005b61027660048036038101906102719190611521565b610882565b60405161028391906114c9565b60405180910390f35b6102a660048036038101906102a191906118e4565b6108ea565b6040516102b39190611415565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061039757506103968261097e565b5b9050919050565b6060600080546103ad90611953565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611953565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109e8565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e9906119f7565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a33565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a33565b6108ea565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611a89565b60405180910390fd5b6105898383610a3b565b505050565b61059f610599610a33565b82610af4565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611b1b565b60405180910390fd5b6105e9838383610b89565b505050565b61060983838360405180602001604052806000815250610820565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae90611b87565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072890611c19565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461078790611953565b80601f01602080910402602001604051908101604052809291908181526020018280546107b390611953565b80156108005780601f106107d557610100808354040283529160200191610800565b820191906000526020600020905b8154815290600101906020018083116107e357829003601f168201915b5050505050905090565b61081c610815610a33565b8383610df0565b5050565b61083161082b610a33565b83610af4565b610870576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086790611b1b565b60405180910390fd5b61087c84848484610f5d565b50505050565b606061088d826109e8565b6000610897610fb9565b905060008151116108b757604051806020016040528060008152506108e2565b806108c184610fd0565b6040516020016108d2929190611c75565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109f181611131565b610a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2790611b87565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610aae8361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b008361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b425750610b4181856108ea565b5b80610b8057508373ffffffffffffffffffffffffffffffffffffffff16610b6884610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ba98261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf690611d0b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6690611d9d565b60405180910390fd5b610c7a83838361119d565b610c85600082610a3b565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cd59190611dec565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d2c9190611e20565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610deb8383836111a2565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5690611ec2565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f509190611415565b60405180910390a3505050565b610f68848484610b89565b610f74848484846111a7565b610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa90611f54565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000821415611018576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061112c565b600082905060005b6000821461104a57808061103390611f74565b915050600a826110439190611fec565b9150611020565b60008167ffffffffffffffff81111561106657611065611736565b5b6040519080825280601f01601f1916602001820160405280156110985781602001600182028036833780820191505090505b5090505b60008514611125576001826110b19190611dec565b9150600a856110c0919061201d565b60306110cc9190611e20565b60f81b8183815181106110e2576110e161204e565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561111e9190611fec565b945061109c565b8093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b505050565b60006111c88473ffffffffffffffffffffffffffffffffffffffff1661133e565b15611331578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111f1610a33565b8786866040518563ffffffff1660e01b815260040161121394939291906120d2565b602060405180830381600087803b15801561122d57600080fd5b505af192505050801561125e57506040513d601f19601f8201168201806040525081019061125b9190612133565b60015b6112e1573d806000811461128e576040519150601f19603f3d011682016040523d82523d6000602084013e611293565b606091505b506000815114156112d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d090611f54565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611336565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113aa81611375565b81146113b557600080fd5b50565b6000813590506113c7816113a1565b92915050565b6000602082840312156113e3576113e261136b565b5b60006113f1848285016113b8565b91505092915050565b60008115159050919050565b61140f816113fa565b82525050565b600060208201905061142a6000830184611406565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561146a57808201518184015260208101905061144f565b83811115611479576000848401525b50505050565b6000601f19601f8301169050919050565b600061149b82611430565b6114a5818561143b565b93506114b581856020860161144c565b6114be8161147f565b840191505092915050565b600060208201905081810360008301526114e38184611490565b905092915050565b6000819050919050565b6114fe816114eb565b811461150957600080fd5b50565b60008135905061151b816114f5565b92915050565b6000602082840312156115375761153661136b565b5b60006115458482850161150c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115798261154e565b9050919050565b6115898161156e565b82525050565b60006020820190506115a46000830184611580565b92915050565b6115b38161156e565b81146115be57600080fd5b50565b6000813590506115d0816115aa565b92915050565b600080604083850312156115ed576115ec61136b565b5b60006115fb858286016115c1565b925050602061160c8582860161150c565b9150509250929050565b60008060006060848603121561162f5761162e61136b565b5b600061163d868287016115c1565b935050602061164e868287016115c1565b925050604061165f8682870161150c565b9150509250925092565b60006020828403121561167f5761167e61136b565b5b600061168d848285016115c1565b91505092915050565b61169f816114eb565b82525050565b60006020820190506116ba6000830184611696565b92915050565b6116c9816113fa565b81146116d457600080fd5b50565b6000813590506116e6816116c0565b92915050565b600080604083850312156117035761170261136b565b5b6000611711858286016115c1565b9250506020611722858286016116d7565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61176e8261147f565b810181811067ffffffffffffffff8211171561178d5761178c611736565b5b80604052505050565b60006117a0611361565b90506117ac8282611765565b919050565b600067ffffffffffffffff8211156117cc576117cb611736565b5b6117d58261147f565b9050602081019050919050565b82818337600083830152505050565b60006118046117ff846117b1565b611796565b9050828152602081018484840111156118205761181f611731565b5b61182b8482856117e2565b509392505050565b600082601f8301126118485761184761172c565b5b81356118588482602086016117f1565b91505092915050565b6000806000806080858703121561187b5761187a61136b565b5b6000611889878288016115c1565b945050602061189a878288016115c1565b93505060406118ab8782880161150c565b925050606085013567ffffffffffffffff8111156118cc576118cb611370565b5b6118d887828801611833565b91505092959194509250565b600080604083850312156118fb576118fa61136b565b5b6000611909858286016115c1565b925050602061191a858286016115c1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061196b57607f821691505b6020821081141561197f5761197e611924565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006119e160218361143b565b91506119ec82611985565b604082019050919050565b60006020820190508181036000830152611a10816119d4565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b6000611a73603e8361143b565b9150611a7e82611a17565b604082019050919050565b60006020820190508181036000830152611aa281611a66565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6000611b05602e8361143b565b9150611b1082611aa9565b604082019050919050565b60006020820190508181036000830152611b3481611af8565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611b7160188361143b565b9150611b7c82611b3b565b602082019050919050565b60006020820190508181036000830152611ba081611b64565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611c0360298361143b565b9150611c0e82611ba7565b604082019050919050565b60006020820190508181036000830152611c3281611bf6565b9050919050565b600081905092915050565b6000611c4f82611430565b611c598185611c39565b9350611c6981856020860161144c565b80840191505092915050565b6000611c818285611c44565b9150611c8d8284611c44565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611cf560258361143b565b9150611d0082611c99565b604082019050919050565b60006020820190508181036000830152611d2481611ce8565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611d8760248361143b565b9150611d9282611d2b565b604082019050919050565b60006020820190508181036000830152611db681611d7a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611df7826114eb565b9150611e02836114eb565b925082821015611e1557611e14611dbd565b5b828203905092915050565b6000611e2b826114eb565b9150611e36836114eb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e6b57611e6a611dbd565b5b828201905092915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611eac60198361143b565b9150611eb782611e76565b602082019050919050565b60006020820190508181036000830152611edb81611e9f565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611f3e60328361143b565b9150611f4982611ee2565b604082019050919050565b60006020820190508181036000830152611f6d81611f31565b9050919050565b6000611f7f826114eb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611fb257611fb1611dbd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ff7826114eb565b9150612002836114eb565b92508261201257612011611fbd565b5b828204905092915050565b6000612028826114eb565b9150612033836114eb565b92508261204357612042611fbd565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60006120a48261207d565b6120ae8185612088565b93506120be81856020860161144c565b6120c78161147f565b840191505092915050565b60006080820190506120e76000830187611580565b6120f46020830186611580565b6121016040830185611696565b81810360608301526121138184612099565b905095945050505050565b60008151905061212d816113a1565b92915050565b6000602082840312156121495761214861136b565b5b60006121578482850161211e565b9150509291505056fea26469706673582212201ed4128f65eb8b255eac0042de409e7ee609866e4cbda6165c02f1f921184e5e64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x254E CODESIZE SUB DUP1 PUSH3 0x254E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2BE JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x18A DUP3 PUSH3 0x13F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AB PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C1 PUSH3 0x121 JUMP JUMPDEST SWAP1 POP PUSH3 0x1CF DUP3 DUP3 PUSH3 0x17F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH3 0x1F1 PUSH3 0x150 JUMP JUMPDEST JUMPDEST PUSH3 0x1FD DUP3 PUSH3 0x13F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x22A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x23A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x257 PUSH3 0x251 DUP5 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x1B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x276 JUMPI PUSH3 0x275 PUSH3 0x13A JUMP JUMPDEST JUMPDEST PUSH3 0x283 DUP5 DUP3 DUP6 PUSH3 0x20A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A3 JUMPI PUSH3 0x2A2 PUSH3 0x135 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D8 JUMPI PUSH3 0x2D7 PUSH3 0x12B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F8 PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x307 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x32B JUMPI PUSH3 0x32A PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x339 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x38B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3A2 JUMPI PUSH3 0x3A1 PUSH3 0x343 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2196 DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1669 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x16EC JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1861 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x97E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA33 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA3B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA33 JUMP JUMPDEST DUP3 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB89 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x820 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP1 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0x1C19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x787 SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B3 SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x800 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x800 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x81C PUSH2 0x815 PUSH2 0xA33 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDF0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x831 PUSH2 0x82B PUSH2 0xA33 JUMP JUMPDEST DUP4 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87C DUP5 DUP5 DUP5 DUP5 PUSH2 0xF5D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x88D DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x897 PUSH2 0xFB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8E2 JUMP JUMPDEST DUP1 PUSH2 0x8C1 DUP5 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8D2 SWAP3 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F1 DUP2 PUSH2 0x1131 JUMP JUMPDEST PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP1 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAAE DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB00 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB42 JUMPI POP PUSH2 0xB41 DUP2 DUP6 PUSH2 0x8EA JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB80 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB68 DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBA9 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF6 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC66 SWAP1 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7A DUP4 DUP4 DUP4 PUSH2 0x119D JUMP JUMPDEST PUSH2 0xC85 PUSH1 0x0 DUP3 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD2C SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDEB DUP4 DUP4 DUP4 PUSH2 0x11A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE56 SWAP1 PUSH2 0x1EC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF50 SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xF68 DUP5 DUP5 DUP5 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0xF74 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1018 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x112C JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x104A JUMPI DUP1 DUP1 PUSH2 0x1033 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST SWAP2 POP PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1066 JUMPI PUSH2 0x1065 PUSH2 0x1736 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1098 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1125 JUMPI PUSH1 0x1 DUP3 PUSH2 0x10B1 SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x10C0 SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x30 PUSH2 0x10CC SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10E2 JUMPI PUSH2 0x10E1 PUSH2 0x204E JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x111E SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST SWAP5 POP PUSH2 0x109C JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C8 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x133E JUMP JUMPDEST ISZERO PUSH2 0x1331 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11F1 PUSH2 0xA33 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1213 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x122D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x125E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x125B SWAP2 SWAP1 PUSH2 0x2133 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12E1 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x128E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x12D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D0 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1336 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13AA DUP2 PUSH2 0x1375 JUMP JUMPDEST DUP2 EQ PUSH2 0x13B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13C7 DUP2 PUSH2 0x13A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E3 JUMPI PUSH2 0x13E2 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13F1 DUP5 DUP3 DUP6 ADD PUSH2 0x13B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x140F DUP2 PUSH2 0x13FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x142A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1406 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x146A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x144F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1479 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149B DUP3 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x14A5 DUP2 DUP6 PUSH2 0x143B JUMP JUMPDEST SWAP4 POP PUSH2 0x14B5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST PUSH2 0x14BE DUP2 PUSH2 0x147F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14E3 DUP2 DUP5 PUSH2 0x1490 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14FE DUP2 PUSH2 0x14EB JUMP JUMPDEST DUP2 EQ PUSH2 0x1509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x151B DUP2 PUSH2 0x14F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1537 JUMPI PUSH2 0x1536 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1545 DUP5 DUP3 DUP6 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1579 DUP3 PUSH2 0x154E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1589 DUP2 PUSH2 0x156E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1580 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B3 DUP2 PUSH2 0x156E JUMP JUMPDEST DUP2 EQ PUSH2 0x15BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15D0 DUP2 PUSH2 0x15AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15ED JUMPI PUSH2 0x15EC PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15FB DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x160C DUP6 DUP3 DUP7 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x162F JUMPI PUSH2 0x162E PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x163D DUP7 DUP3 DUP8 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x164E DUP7 DUP3 DUP8 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x165F DUP7 DUP3 DUP8 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x167F JUMPI PUSH2 0x167E PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x168D DUP5 DUP3 DUP6 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x169F DUP2 PUSH2 0x14EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16C9 DUP2 PUSH2 0x13FA JUMP JUMPDEST DUP2 EQ PUSH2 0x16D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16E6 DUP2 PUSH2 0x16C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1703 JUMPI PUSH2 0x1702 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1711 DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1722 DUP6 DUP3 DUP7 ADD PUSH2 0x16D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x176E DUP3 PUSH2 0x147F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x178D JUMPI PUSH2 0x178C PUSH2 0x1736 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A0 PUSH2 0x1361 JUMP JUMPDEST SWAP1 POP PUSH2 0x17AC DUP3 DUP3 PUSH2 0x1765 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17CC JUMPI PUSH2 0x17CB PUSH2 0x1736 JUMP JUMPDEST JUMPDEST PUSH2 0x17D5 DUP3 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1804 PUSH2 0x17FF DUP5 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0x1796 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1820 JUMPI PUSH2 0x181F PUSH2 0x1731 JUMP JUMPDEST JUMPDEST PUSH2 0x182B DUP5 DUP3 DUP6 PUSH2 0x17E2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1848 JUMPI PUSH2 0x1847 PUSH2 0x172C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1858 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x187B JUMPI PUSH2 0x187A PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1889 DUP8 DUP3 DUP9 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x189A DUP8 DUP3 DUP9 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18AB DUP8 DUP3 DUP9 ADD PUSH2 0x150C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18CC JUMPI PUSH2 0x18CB PUSH2 0x1370 JUMP JUMPDEST JUMPDEST PUSH2 0x18D8 DUP8 DUP3 DUP9 ADD PUSH2 0x1833 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18FB JUMPI PUSH2 0x18FA PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1909 DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x191A DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x196B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x197F JUMPI PUSH2 0x197E PUSH2 0x1924 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E1 PUSH1 0x21 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x19EC DUP3 PUSH2 0x1985 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A10 DUP2 PUSH2 0x19D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A73 PUSH1 0x3E DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A7E DUP3 PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AA2 DUP2 PUSH2 0x1A66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B05 PUSH1 0x2E DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B10 DUP3 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B34 DUP2 PUSH2 0x1AF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B71 PUSH1 0x18 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7C DUP3 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BA0 DUP2 PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C03 PUSH1 0x29 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0E DUP3 PUSH2 0x1BA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C32 DUP2 PUSH2 0x1BF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4F DUP3 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x1C59 DUP2 DUP6 PUSH2 0x1C39 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C69 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C81 DUP3 DUP6 PUSH2 0x1C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8D DUP3 DUP5 PUSH2 0x1C44 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF5 PUSH1 0x25 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D00 DUP3 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D24 DUP2 PUSH2 0x1CE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D87 PUSH1 0x24 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D92 DUP3 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB6 DUP2 PUSH2 0x1D7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DF7 DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1E02 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1E15 JUMPI PUSH2 0x1E14 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2B DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1E36 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1E6B JUMPI PUSH2 0x1E6A PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAC PUSH1 0x19 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB7 DUP3 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EDB DUP2 PUSH2 0x1E9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3E PUSH1 0x32 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1F49 DUP3 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F6D DUP2 PUSH2 0x1F31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7F DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1FB2 JUMPI PUSH2 0x1FB1 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FF7 DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2002 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2012 JUMPI PUSH2 0x2011 PUSH2 0x1FBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2028 DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2033 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2043 JUMPI PUSH2 0x2042 PUSH2 0x1FBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A4 DUP3 PUSH2 0x207D JUMP JUMPDEST PUSH2 0x20AE DUP2 DUP6 PUSH2 0x2088 JUMP JUMPDEST SWAP4 POP PUSH2 0x20BE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST PUSH2 0x20C7 DUP2 PUSH2 0x147F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x20E7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x20F4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x2101 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1696 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2113 DUP2 DUP5 PUSH2 0x2099 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x212D DUP2 PUSH2 0x13A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2149 JUMPI PUSH2 0x2148 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2157 DUP5 DUP3 DUP6 ADD PUSH2 0x211E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xD4 SLT DUP16 PUSH6 0xEB8B255EAC00 TIMESTAMP 0xDE BLOCKHASH SWAP15 PUSH31 0xE609866E4CBDA6165C02F1F921184E5E64736F6C6343000809003300000000 ","sourceMap":"628:13718:3:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;628:13718;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;628:13718:3:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1132":{"entryPoint":4514,"id":1132,"parameterSlots":3,"returnSlots":0},"@_approve_1002":{"entryPoint":2619,"id":1002,"parameterSlots":2,"returnSlots":0},"@_baseURI_480":{"entryPoint":4025,"id":480,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_1121":{"entryPoint":4509,"id":1121,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_1110":{"entryPoint":4519,"id":1110,"parameterSlots":4,"returnSlots":1},"@_exists_699":{"entryPoint":4401,"id":699,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_733":{"entryPoint":2804,"id":733,"parameterSlots":2,"returnSlots":1},"@_msgSender_1726":{"entryPoint":2611,"id":1726,"parameterSlots":0,"returnSlots":1},"@_requireMinted_1048":{"entryPoint":2536,"id":1048,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_681":{"entryPoint":3933,"id":681,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1034":{"entryPoint":3568,"id":1034,"parameterSlots":3,"returnSlots":0},"@_transfer_978":{"entryPoint":2953,"id":978,"parameterSlots":3,"returnSlots":0},"@approve_523":{"entryPoint":1142,"id":523,"parameterSlots":2,"returnSlots":0},"@balanceOf_384":{"entryPoint":1728,"id":384,"parameterSlots":1,"returnSlots":1},"@getApproved_541":{"entryPoint":1072,"id":541,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_576":{"entryPoint":2282,"id":576,"parameterSlots":2,"returnSlots":1},"@isContract_1437":{"entryPoint":4926,"id":1437,"parameterSlots":1,"returnSlots":1},"@name_422":{"entryPoint":926,"id":422,"parameterSlots":0,"returnSlots":1},"@ownerOf_412":{"entryPoint":1550,"id":412,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_622":{"entryPoint":1518,"id":622,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_652":{"entryPoint":2080,"id":652,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_558":{"entryPoint":2058,"id":558,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1985":{"entryPoint":2430,"id":1985,"parameterSlots":1,"returnSlots":1},"@supportsInterface_360":{"entryPoint":700,"id":360,"parameterSlots":1,"returnSlots":1},"@symbol_432":{"entryPoint":1912,"id":432,"parameterSlots":0,"returnSlots":1},"@toString_1824":{"entryPoint":4048,"id":1824,"parameterSlots":1,"returnSlots":1},"@tokenURI_471":{"entryPoint":2178,"id":471,"parameterSlots":1,"returnSlots":1},"@transferFrom_603":{"entryPoint":1422,"id":603,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6129,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5569,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":5847,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5048,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8478,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6195,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5388,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5737,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6372,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5654,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6241,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":5868,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5590,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5069,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8499,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5409,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5504,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5126,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8345,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5264,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7236,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":7985,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":7400,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":7546,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":7839,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":7158,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack":{"entryPoint":6758,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":7012,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":6612,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack":{"entryPoint":6904,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5782,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7285,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5519,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8402,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5141,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5321,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8020,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7435,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7581,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7874,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7193,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6793,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7047,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6647,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6939,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5797,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6038,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":4961,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6065,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8317,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5168,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8328,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5179,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7225,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7712,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":8172,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7660,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5486,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5114,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":4981,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5454,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5355,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":6114,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":5196,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6483,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":5989,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":8052,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":8221,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":7613,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8125,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6436,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":8270,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5942,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5932,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":5937,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":4976,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":4971,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5247,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":7906,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":7321,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":7467,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":7798,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":7079,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304":{"entryPoint":6679,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":6971,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":6533,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b":{"entryPoint":6825,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5546,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":5824,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5025,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5365,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24661:14","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:14","statements":[{"nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:14"},"nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:14"},"nodeType":"YulFunctionCall","src":"187:12:14"},"nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nodeType":"YulBlock","src":"378:105:14","statements":[{"nodeType":"YulAssignment","src":"388:89:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:14","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:14"},"nodeType":"YulFunctionCall","src":"399:78:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:14"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:14","type":""}],"src":"334:149:14"},{"body":{"nodeType":"YulBlock","src":"531:78:14","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:14"},"nodeType":"YulFunctionCall","src":"589:12:14"},"nodeType":"YulExpressionStatement","src":"589:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:14"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:14"},"nodeType":"YulFunctionCall","src":"561:23:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:14"},"nodeType":"YulFunctionCall","src":"551:34:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:14"},"nodeType":"YulFunctionCall","src":"544:42:14"},"nodeType":"YulIf","src":"541:62:14"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:14","type":""}],"src":"489:120:14"},{"body":{"nodeType":"YulBlock","src":"666:86:14","statements":[{"nodeType":"YulAssignment","src":"676:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:14"},"nodeType":"YulFunctionCall","src":"685:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:14"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:14"},"nodeType":"YulFunctionCall","src":"714:32:14"},"nodeType":"YulExpressionStatement","src":"714:32:14"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:14","type":""}],"src":"615:137:14"},{"body":{"nodeType":"YulBlock","src":"823:262:14","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:14"},"nodeType":"YulFunctionCall","src":"871:79:14"},"nodeType":"YulExpressionStatement","src":"871:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:14"},"nodeType":"YulFunctionCall","src":"840:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:14"},"nodeType":"YulFunctionCall","src":"836:32:14"},"nodeType":"YulIf","src":"833:119:14"},{"nodeType":"YulBlock","src":"962:116:14","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:14"},"nodeType":"YulFunctionCall","src":"1036:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:14"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:14"},"nodeType":"YulFunctionCall","src":"1016:52:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:14","type":""}],"src":"758:327:14"},{"body":{"nodeType":"YulBlock","src":"1133:48:14","statements":[{"nodeType":"YulAssignment","src":"1143:32:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:14"},"nodeType":"YulFunctionCall","src":"1161:13:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:14"},"nodeType":"YulFunctionCall","src":"1154:21:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:14"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:14","type":""}],"src":"1091:90:14"},{"body":{"nodeType":"YulBlock","src":"1246:50:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:14"},"nodeType":"YulFunctionCall","src":"1268:21:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:14"},"nodeType":"YulFunctionCall","src":"1256:34:14"},"nodeType":"YulExpressionStatement","src":"1256:34:14"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:14","type":""}],"src":"1187:109:14"},{"body":{"nodeType":"YulBlock","src":"1394:118:14","statements":[{"nodeType":"YulAssignment","src":"1404:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:14"},"nodeType":"YulFunctionCall","src":"1412:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:14"},"nodeType":"YulFunctionCall","src":"1487:17:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:14"},"nodeType":"YulFunctionCall","src":"1440:65:14"},"nodeType":"YulExpressionStatement","src":"1440:65:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:14","type":""}],"src":"1302:210:14"},{"body":{"nodeType":"YulBlock","src":"1577:40:14","statements":[{"nodeType":"YulAssignment","src":"1588:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:14"},"nodeType":"YulFunctionCall","src":"1598:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:14","type":""}],"src":"1518:99:14"},{"body":{"nodeType":"YulBlock","src":"1719:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:14"},"nodeType":"YulFunctionCall","src":"1729:19:14"},"nodeType":"YulExpressionStatement","src":"1729:19:14"},{"nodeType":"YulAssignment","src":"1757:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:14"},"nodeType":"YulFunctionCall","src":"1772:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:14","type":""}],"src":"1623:169:14"},{"body":{"nodeType":"YulBlock","src":"1847:258:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:14"},"nodeType":"YulFunctionCall","src":"1947:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:14"},"nodeType":"YulFunctionCall","src":"1966:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:14"},"nodeType":"YulFunctionCall","src":"1960:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:14"},"nodeType":"YulFunctionCall","src":"1940:39:14"},"nodeType":"YulExpressionStatement","src":"1940:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:14"},"nodeType":"YulFunctionCall","src":"1884:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:14","statements":[{"nodeType":"YulAssignment","src":"1900:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:14"},"nodeType":"YulFunctionCall","src":"1905:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:14","statements":[]},"src":"1876:113:14"},{"body":{"nodeType":"YulBlock","src":"2023:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:14"},"nodeType":"YulFunctionCall","src":"2069:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:14"},"nodeType":"YulFunctionCall","src":"2062:27:14"},"nodeType":"YulExpressionStatement","src":"2062:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:14"},"nodeType":"YulFunctionCall","src":"2001:13:14"},"nodeType":"YulIf","src":"1998:101:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:14","type":""}],"src":"1798:307:14"},{"body":{"nodeType":"YulBlock","src":"2159:54:14","statements":[{"nodeType":"YulAssignment","src":"2169:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:14"},"nodeType":"YulFunctionCall","src":"2183:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:14"},"nodeType":"YulFunctionCall","src":"2199:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:14"},"nodeType":"YulFunctionCall","src":"2179:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:14","type":""}],"src":"2111:102:14"},{"body":{"nodeType":"YulBlock","src":"2311:272:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:14"},"nodeType":"YulFunctionCall","src":"2335:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:14"},"nodeType":"YulFunctionCall","src":"2390:71:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:14"},"nodeType":"YulFunctionCall","src":"2492:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:14"},"nodeType":"YulFunctionCall","src":"2470:52:14"},"nodeType":"YulExpressionStatement","src":"2470:52:14"},{"nodeType":"YulAssignment","src":"2531:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:14"},"nodeType":"YulFunctionCall","src":"2547:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:14"},"nodeType":"YulFunctionCall","src":"2538:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:14","type":""}],"src":"2219:364:14"},{"body":{"nodeType":"YulBlock","src":"2707:195:14","statements":[{"nodeType":"YulAssignment","src":"2717:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:14"},"nodeType":"YulFunctionCall","src":"2725:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:14"},"nodeType":"YulFunctionCall","src":"2760:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:14"},"nodeType":"YulFunctionCall","src":"2779:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:14"},"nodeType":"YulFunctionCall","src":"2753:47:14"},"nodeType":"YulExpressionStatement","src":"2753:47:14"},{"nodeType":"YulAssignment","src":"2809:86:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:14"},"nodeType":"YulFunctionCall","src":"2817:78:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:14","type":""}],"src":"2589:313:14"},{"body":{"nodeType":"YulBlock","src":"2953:32:14","statements":[{"nodeType":"YulAssignment","src":"2963:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:14","type":""}],"src":"2908:77:14"},{"body":{"nodeType":"YulBlock","src":"3034:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:14"},"nodeType":"YulFunctionCall","src":"3093:12:14"},"nodeType":"YulExpressionStatement","src":"3093:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:14"},"nodeType":"YulFunctionCall","src":"3064:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:14"},"nodeType":"YulFunctionCall","src":"3054:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:14"},"nodeType":"YulFunctionCall","src":"3047:43:14"},"nodeType":"YulIf","src":"3044:63:14"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:14","type":""}],"src":"2991:122:14"},{"body":{"nodeType":"YulBlock","src":"3171:87:14","statements":[{"nodeType":"YulAssignment","src":"3181:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:14"},"nodeType":"YulFunctionCall","src":"3190:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:14"},"nodeType":"YulFunctionCall","src":"3219:33:14"},"nodeType":"YulExpressionStatement","src":"3219:33:14"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:14","type":""}],"src":"3119:139:14"},{"body":{"nodeType":"YulBlock","src":"3330:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:14"},"nodeType":"YulFunctionCall","src":"3378:79:14"},"nodeType":"YulExpressionStatement","src":"3378:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:14"},"nodeType":"YulFunctionCall","src":"3347:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:14"},"nodeType":"YulFunctionCall","src":"3343:32:14"},"nodeType":"YulIf","src":"3340:119:14"},{"nodeType":"YulBlock","src":"3469:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:14"},"nodeType":"YulFunctionCall","src":"3544:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:14"},"nodeType":"YulFunctionCall","src":"3523:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:14","type":""}],"src":"3264:329:14"},{"body":{"nodeType":"YulBlock","src":"3644:81:14","statements":[{"nodeType":"YulAssignment","src":"3654:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:14"},"nodeType":"YulFunctionCall","src":"3665:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:14","type":""}],"src":"3599:126:14"},{"body":{"nodeType":"YulBlock","src":"3776:51:14","statements":[{"nodeType":"YulAssignment","src":"3786:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:14"},"nodeType":"YulFunctionCall","src":"3797:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:14","type":""}],"src":"3731:96:14"},{"body":{"nodeType":"YulBlock","src":"3898:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:14"},"nodeType":"YulFunctionCall","src":"3920:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:14"},"nodeType":"YulFunctionCall","src":"3908:37:14"},"nodeType":"YulExpressionStatement","src":"3908:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:14","type":""}],"src":"3833:118:14"},{"body":{"nodeType":"YulBlock","src":"4055:124:14","statements":[{"nodeType":"YulAssignment","src":"4065:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:14"},"nodeType":"YulFunctionCall","src":"4073:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:14"},"nodeType":"YulFunctionCall","src":"4154:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:14"},"nodeType":"YulFunctionCall","src":"4101:71:14"},"nodeType":"YulExpressionStatement","src":"4101:71:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:14","type":""}],"src":"3957:222:14"},{"body":{"nodeType":"YulBlock","src":"4228:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:14"},"nodeType":"YulFunctionCall","src":"4287:12:14"},"nodeType":"YulExpressionStatement","src":"4287:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:14"},"nodeType":"YulFunctionCall","src":"4258:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:14"},"nodeType":"YulFunctionCall","src":"4248:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:14"},"nodeType":"YulFunctionCall","src":"4241:43:14"},"nodeType":"YulIf","src":"4238:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:14","type":""}],"src":"4185:122:14"},{"body":{"nodeType":"YulBlock","src":"4365:87:14","statements":[{"nodeType":"YulAssignment","src":"4375:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:14"},"nodeType":"YulFunctionCall","src":"4384:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:14"},"nodeType":"YulFunctionCall","src":"4413:33:14"},"nodeType":"YulExpressionStatement","src":"4413:33:14"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:14","type":""}],"src":"4313:139:14"},{"body":{"nodeType":"YulBlock","src":"4541:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:14"},"nodeType":"YulFunctionCall","src":"4589:79:14"},"nodeType":"YulExpressionStatement","src":"4589:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:14"},"nodeType":"YulFunctionCall","src":"4558:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:14"},"nodeType":"YulFunctionCall","src":"4554:32:14"},"nodeType":"YulIf","src":"4551:119:14"},{"nodeType":"YulBlock","src":"4680:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:14"},"nodeType":"YulFunctionCall","src":"4755:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:14"},"nodeType":"YulFunctionCall","src":"4734:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:14"}]}]},{"nodeType":"YulBlock","src":"4807:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:14"},"nodeType":"YulFunctionCall","src":"4883:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:14"},"nodeType":"YulFunctionCall","src":"4862:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:14","type":""}],"src":"4458:474:14"},{"body":{"nodeType":"YulBlock","src":"5038:519:14","statements":[{"body":{"nodeType":"YulBlock","src":"5084:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5086:77:14"},"nodeType":"YulFunctionCall","src":"5086:79:14"},"nodeType":"YulExpressionStatement","src":"5086:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5059:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5068:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5055:3:14"},"nodeType":"YulFunctionCall","src":"5055:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5080:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5051:3:14"},"nodeType":"YulFunctionCall","src":"5051:32:14"},"nodeType":"YulIf","src":"5048:119:14"},{"nodeType":"YulBlock","src":"5177:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5192:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5206:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5196:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5221:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5256:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5267:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:14"},"nodeType":"YulFunctionCall","src":"5252:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5276:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5231:20:14"},"nodeType":"YulFunctionCall","src":"5231:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5221:6:14"}]}]},{"nodeType":"YulBlock","src":"5304:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5319:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5333:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5323:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5349:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5395:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:14"},"nodeType":"YulFunctionCall","src":"5380:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5404:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5359:20:14"},"nodeType":"YulFunctionCall","src":"5359:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5349:6:14"}]}]},{"nodeType":"YulBlock","src":"5432:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5447:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5461:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5451:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5477:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5512:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5523:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5508:3:14"},"nodeType":"YulFunctionCall","src":"5508:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5532:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5487:20:14"},"nodeType":"YulFunctionCall","src":"5487:53:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5477:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4992:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5003:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5015:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5023:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5031:6:14","type":""}],"src":"4938:619:14"},{"body":{"nodeType":"YulBlock","src":"5629:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"5675:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5677:77:14"},"nodeType":"YulFunctionCall","src":"5677:79:14"},"nodeType":"YulExpressionStatement","src":"5677:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5650:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5659:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5646:3:14"},"nodeType":"YulFunctionCall","src":"5646:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5671:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5642:3:14"},"nodeType":"YulFunctionCall","src":"5642:32:14"},"nodeType":"YulIf","src":"5639:119:14"},{"nodeType":"YulBlock","src":"5768:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5783:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5797:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5787:6:14","type":""}]},{"nodeType":"YulAssignment","src":"5812:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5847:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"5858:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5843:3:14"},"nodeType":"YulFunctionCall","src":"5843:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5867:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5822:20:14"},"nodeType":"YulFunctionCall","src":"5822:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5812:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5599:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5610:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5622:6:14","type":""}],"src":"5563:329:14"},{"body":{"nodeType":"YulBlock","src":"5963:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5980:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6003:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5985:17:14"},"nodeType":"YulFunctionCall","src":"5985:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5973:6:14"},"nodeType":"YulFunctionCall","src":"5973:37:14"},"nodeType":"YulExpressionStatement","src":"5973:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5951:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5958:3:14","type":""}],"src":"5898:118:14"},{"body":{"nodeType":"YulBlock","src":"6120:124:14","statements":[{"nodeType":"YulAssignment","src":"6130:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6142:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6153:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6138:3:14"},"nodeType":"YulFunctionCall","src":"6138:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6130:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6210:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6223:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"6234:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6219:3:14"},"nodeType":"YulFunctionCall","src":"6219:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6166:43:14"},"nodeType":"YulFunctionCall","src":"6166:71:14"},"nodeType":"YulExpressionStatement","src":"6166:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6092:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6104:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6115:4:14","type":""}],"src":"6022:222:14"},{"body":{"nodeType":"YulBlock","src":"6290:76:14","statements":[{"body":{"nodeType":"YulBlock","src":"6344:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6353:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6356:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6346:6:14"},"nodeType":"YulFunctionCall","src":"6346:12:14"},"nodeType":"YulExpressionStatement","src":"6346:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6313:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6335:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6320:14:14"},"nodeType":"YulFunctionCall","src":"6320:21:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6310:2:14"},"nodeType":"YulFunctionCall","src":"6310:32:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6303:6:14"},"nodeType":"YulFunctionCall","src":"6303:40:14"},"nodeType":"YulIf","src":"6300:60:14"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6283:5:14","type":""}],"src":"6250:116:14"},{"body":{"nodeType":"YulBlock","src":"6421:84:14","statements":[{"nodeType":"YulAssignment","src":"6431:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6453:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6440:12:14"},"nodeType":"YulFunctionCall","src":"6440:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6431:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6493:5:14"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6469:23:14"},"nodeType":"YulFunctionCall","src":"6469:30:14"},"nodeType":"YulExpressionStatement","src":"6469:30:14"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6399:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"6407:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6415:5:14","type":""}],"src":"6372:133:14"},{"body":{"nodeType":"YulBlock","src":"6591:388:14","statements":[{"body":{"nodeType":"YulBlock","src":"6637:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6639:77:14"},"nodeType":"YulFunctionCall","src":"6639:79:14"},"nodeType":"YulExpressionStatement","src":"6639:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6612:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"6621:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6608:3:14"},"nodeType":"YulFunctionCall","src":"6608:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"6633:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6604:3:14"},"nodeType":"YulFunctionCall","src":"6604:32:14"},"nodeType":"YulIf","src":"6601:119:14"},{"nodeType":"YulBlock","src":"6730:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6745:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6759:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6749:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6774:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6809:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"6820:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6805:3:14"},"nodeType":"YulFunctionCall","src":"6805:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6829:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6784:20:14"},"nodeType":"YulFunctionCall","src":"6784:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6774:6:14"}]}]},{"nodeType":"YulBlock","src":"6857:115:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6872:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6886:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6876:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6902:60:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6934:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"6945:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6930:3:14"},"nodeType":"YulFunctionCall","src":"6930:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6954:7:14"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6912:17:14"},"nodeType":"YulFunctionCall","src":"6912:50:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6902:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6553:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6564:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6576:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6584:6:14","type":""}],"src":"6511:468:14"},{"body":{"nodeType":"YulBlock","src":"7074:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7091:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7094:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7084:6:14"},"nodeType":"YulFunctionCall","src":"7084:12:14"},"nodeType":"YulExpressionStatement","src":"7084:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6985:117:14"},{"body":{"nodeType":"YulBlock","src":"7197:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7214:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7217:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7207:6:14"},"nodeType":"YulFunctionCall","src":"7207:12:14"},"nodeType":"YulExpressionStatement","src":"7207:12:14"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7108:117:14"},{"body":{"nodeType":"YulBlock","src":"7259:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7276:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7279:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7269:6:14"},"nodeType":"YulFunctionCall","src":"7269:88:14"},"nodeType":"YulExpressionStatement","src":"7269:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7373:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7376:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7366:6:14"},"nodeType":"YulFunctionCall","src":"7366:15:14"},"nodeType":"YulExpressionStatement","src":"7366:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7397:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7400:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7390:6:14"},"nodeType":"YulFunctionCall","src":"7390:15:14"},"nodeType":"YulExpressionStatement","src":"7390:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7231:180:14"},{"body":{"nodeType":"YulBlock","src":"7460:238:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7470:58:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7492:6:14"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7522:4:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7500:21:14"},"nodeType":"YulFunctionCall","src":"7500:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7488:3:14"},"nodeType":"YulFunctionCall","src":"7488:40:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7474:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"7639:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7641:16:14"},"nodeType":"YulFunctionCall","src":"7641:18:14"},"nodeType":"YulExpressionStatement","src":"7641:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7582:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"7594:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7579:2:14"},"nodeType":"YulFunctionCall","src":"7579:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7618:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7630:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7615:2:14"},"nodeType":"YulFunctionCall","src":"7615:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7576:2:14"},"nodeType":"YulFunctionCall","src":"7576:62:14"},"nodeType":"YulIf","src":"7573:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7677:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7681:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7670:6:14"},"nodeType":"YulFunctionCall","src":"7670:22:14"},"nodeType":"YulExpressionStatement","src":"7670:22:14"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7446:6:14","type":""},{"name":"size","nodeType":"YulTypedName","src":"7454:4:14","type":""}],"src":"7417:281:14"},{"body":{"nodeType":"YulBlock","src":"7745:88:14","statements":[{"nodeType":"YulAssignment","src":"7755:30:14","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7765:18:14"},"nodeType":"YulFunctionCall","src":"7765:20:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7755:6:14"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7814:6:14"},{"name":"size","nodeType":"YulIdentifier","src":"7822:4:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7794:19:14"},"nodeType":"YulFunctionCall","src":"7794:33:14"},"nodeType":"YulExpressionStatement","src":"7794:33:14"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7729:4:14","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7738:6:14","type":""}],"src":"7704:129:14"},{"body":{"nodeType":"YulBlock","src":"7905:241:14","statements":[{"body":{"nodeType":"YulBlock","src":"8010:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8012:16:14"},"nodeType":"YulFunctionCall","src":"8012:18:14"},"nodeType":"YulExpressionStatement","src":"8012:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7982:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7990:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7979:2:14"},"nodeType":"YulFunctionCall","src":"7979:30:14"},"nodeType":"YulIf","src":"7976:56:14"},{"nodeType":"YulAssignment","src":"8042:37:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8072:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8050:21:14"},"nodeType":"YulFunctionCall","src":"8050:29:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8042:4:14"}]},{"nodeType":"YulAssignment","src":"8116:23:14","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8128:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"8134:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8124:3:14"},"nodeType":"YulFunctionCall","src":"8124:15:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8116:4:14"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7889:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7900:4:14","type":""}],"src":"7839:307:14"},{"body":{"nodeType":"YulBlock","src":"8203:103:14","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8226:3:14"},{"name":"src","nodeType":"YulIdentifier","src":"8231:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"8236:6:14"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8213:12:14"},"nodeType":"YulFunctionCall","src":"8213:30:14"},"nodeType":"YulExpressionStatement","src":"8213:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8284:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"8289:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8280:3:14"},"nodeType":"YulFunctionCall","src":"8280:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"8298:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8273:6:14"},"nodeType":"YulFunctionCall","src":"8273:27:14"},"nodeType":"YulExpressionStatement","src":"8273:27:14"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8185:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8190:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"8195:6:14","type":""}],"src":"8152:154:14"},{"body":{"nodeType":"YulBlock","src":"8395:327:14","statements":[{"nodeType":"YulAssignment","src":"8405:74:14","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8471:6:14"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8430:40:14"},"nodeType":"YulFunctionCall","src":"8430:48:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8414:15:14"},"nodeType":"YulFunctionCall","src":"8414:65:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8405:5:14"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8495:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"8502:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8488:6:14"},"nodeType":"YulFunctionCall","src":"8488:21:14"},"nodeType":"YulExpressionStatement","src":"8488:21:14"},{"nodeType":"YulVariableDeclaration","src":"8518:27:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8533:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"8540:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8529:3:14"},"nodeType":"YulFunctionCall","src":"8529:16:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8522:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"8583:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8585:77:14"},"nodeType":"YulFunctionCall","src":"8585:79:14"},"nodeType":"YulExpressionStatement","src":"8585:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8564:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"8569:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8560:3:14"},"nodeType":"YulFunctionCall","src":"8560:16:14"},{"name":"end","nodeType":"YulIdentifier","src":"8578:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8557:2:14"},"nodeType":"YulFunctionCall","src":"8557:25:14"},"nodeType":"YulIf","src":"8554:112:14"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8699:3:14"},{"name":"dst","nodeType":"YulIdentifier","src":"8704:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"8709:6:14"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"8675:23:14"},"nodeType":"YulFunctionCall","src":"8675:41:14"},"nodeType":"YulExpressionStatement","src":"8675:41:14"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8368:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"8373:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"8381:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8389:5:14","type":""}],"src":"8312:410:14"},{"body":{"nodeType":"YulBlock","src":"8802:277:14","statements":[{"body":{"nodeType":"YulBlock","src":"8851:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8853:77:14"},"nodeType":"YulFunctionCall","src":"8853:79:14"},"nodeType":"YulExpressionStatement","src":"8853:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8830:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8838:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8826:3:14"},"nodeType":"YulFunctionCall","src":"8826:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"8845:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8822:3:14"},"nodeType":"YulFunctionCall","src":"8822:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8815:6:14"},"nodeType":"YulFunctionCall","src":"8815:35:14"},"nodeType":"YulIf","src":"8812:122:14"},{"nodeType":"YulVariableDeclaration","src":"8943:34:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8970:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8957:12:14"},"nodeType":"YulFunctionCall","src":"8957:20:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8947:6:14","type":""}]},{"nodeType":"YulAssignment","src":"8986:87:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9046:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9054:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9042:3:14"},"nodeType":"YulFunctionCall","src":"9042:17:14"},{"name":"length","nodeType":"YulIdentifier","src":"9061:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"9069:3:14"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8995:46:14"},"nodeType":"YulFunctionCall","src":"8995:78:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8986:5:14"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8780:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"8788:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8796:5:14","type":""}],"src":"8741:338:14"},{"body":{"nodeType":"YulBlock","src":"9211:817:14","statements":[{"body":{"nodeType":"YulBlock","src":"9258:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9260:77:14"},"nodeType":"YulFunctionCall","src":"9260:79:14"},"nodeType":"YulExpressionStatement","src":"9260:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9232:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"9241:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9228:3:14"},"nodeType":"YulFunctionCall","src":"9228:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"9253:3:14","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9224:3:14"},"nodeType":"YulFunctionCall","src":"9224:33:14"},"nodeType":"YulIf","src":"9221:120:14"},{"nodeType":"YulBlock","src":"9351:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"9366:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"9380:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9370:6:14","type":""}]},{"nodeType":"YulAssignment","src":"9395:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9430:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"9441:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9426:3:14"},"nodeType":"YulFunctionCall","src":"9426:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9450:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9405:20:14"},"nodeType":"YulFunctionCall","src":"9405:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9395:6:14"}]}]},{"nodeType":"YulBlock","src":"9478:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"9493:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"9507:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9497:6:14","type":""}]},{"nodeType":"YulAssignment","src":"9523:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9558:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"9569:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9554:3:14"},"nodeType":"YulFunctionCall","src":"9554:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9578:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9533:20:14"},"nodeType":"YulFunctionCall","src":"9533:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9523:6:14"}]}]},{"nodeType":"YulBlock","src":"9606:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"9621:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"9635:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9625:6:14","type":""}]},{"nodeType":"YulAssignment","src":"9651:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9686:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"9697:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9682:3:14"},"nodeType":"YulFunctionCall","src":"9682:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9706:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9661:20:14"},"nodeType":"YulFunctionCall","src":"9661:53:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9651:6:14"}]}]},{"nodeType":"YulBlock","src":"9734:287:14","statements":[{"nodeType":"YulVariableDeclaration","src":"9749:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9780:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"9791:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9776:3:14"},"nodeType":"YulFunctionCall","src":"9776:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9763:12:14"},"nodeType":"YulFunctionCall","src":"9763:32:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9753:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"9842:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9844:77:14"},"nodeType":"YulFunctionCall","src":"9844:79:14"},"nodeType":"YulExpressionStatement","src":"9844:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9814:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"9822:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9811:2:14"},"nodeType":"YulFunctionCall","src":"9811:30:14"},"nodeType":"YulIf","src":"9808:117:14"},{"nodeType":"YulAssignment","src":"9939:72:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9983:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"9994:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9979:3:14"},"nodeType":"YulFunctionCall","src":"9979:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10003:7:14"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9949:29:14"},"nodeType":"YulFunctionCall","src":"9949:62:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9939:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9157:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9168:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9180:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9188:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9196:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9204:6:14","type":""}],"src":"9085:943:14"},{"body":{"nodeType":"YulBlock","src":"10117:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"10163:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10165:77:14"},"nodeType":"YulFunctionCall","src":"10165:79:14"},"nodeType":"YulExpressionStatement","src":"10165:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10138:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"10147:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10134:3:14"},"nodeType":"YulFunctionCall","src":"10134:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"10159:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10130:3:14"},"nodeType":"YulFunctionCall","src":"10130:32:14"},"nodeType":"YulIf","src":"10127:119:14"},{"nodeType":"YulBlock","src":"10256:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"10271:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"10285:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10275:6:14","type":""}]},{"nodeType":"YulAssignment","src":"10300:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10335:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"10346:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10331:3:14"},"nodeType":"YulFunctionCall","src":"10331:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10355:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10310:20:14"},"nodeType":"YulFunctionCall","src":"10310:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10300:6:14"}]}]},{"nodeType":"YulBlock","src":"10383:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"10398:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"10412:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10402:6:14","type":""}]},{"nodeType":"YulAssignment","src":"10428:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10463:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"10474:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10459:3:14"},"nodeType":"YulFunctionCall","src":"10459:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10483:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10438:20:14"},"nodeType":"YulFunctionCall","src":"10438:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10428:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10079:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10090:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10102:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10110:6:14","type":""}],"src":"10034:474:14"},{"body":{"nodeType":"YulBlock","src":"10542:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10559:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10562:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10552:6:14"},"nodeType":"YulFunctionCall","src":"10552:88:14"},"nodeType":"YulExpressionStatement","src":"10552:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10656:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10659:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10649:6:14"},"nodeType":"YulFunctionCall","src":"10649:15:14"},"nodeType":"YulExpressionStatement","src":"10649:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10680:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10683:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10673:6:14"},"nodeType":"YulFunctionCall","src":"10673:15:14"},"nodeType":"YulExpressionStatement","src":"10673:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10514:180:14"},{"body":{"nodeType":"YulBlock","src":"10751:269:14","statements":[{"nodeType":"YulAssignment","src":"10761:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10775:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"10781:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10771:3:14"},"nodeType":"YulFunctionCall","src":"10771:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10761:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"10792:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10822:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"10828:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10818:3:14"},"nodeType":"YulFunctionCall","src":"10818:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10796:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"10869:51:14","statements":[{"nodeType":"YulAssignment","src":"10883:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10897:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"10905:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10893:3:14"},"nodeType":"YulFunctionCall","src":"10893:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10883:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10849:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10842:6:14"},"nodeType":"YulFunctionCall","src":"10842:26:14"},"nodeType":"YulIf","src":"10839:81:14"},{"body":{"nodeType":"YulBlock","src":"10972:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10986:16:14"},"nodeType":"YulFunctionCall","src":"10986:18:14"},"nodeType":"YulExpressionStatement","src":"10986:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10936:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10959:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"10967:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10956:2:14"},"nodeType":"YulFunctionCall","src":"10956:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10933:2:14"},"nodeType":"YulFunctionCall","src":"10933:38:14"},"nodeType":"YulIf","src":"10930:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10735:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10744:6:14","type":""}],"src":"10700:320:14"},{"body":{"nodeType":"YulBlock","src":"11132:114:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11154:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"11162:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11150:3:14"},"nodeType":"YulFunctionCall","src":"11150:14:14"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"11166:34:14","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11143:6:14"},"nodeType":"YulFunctionCall","src":"11143:58:14"},"nodeType":"YulExpressionStatement","src":"11143:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11222:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"11230:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11218:3:14"},"nodeType":"YulFunctionCall","src":"11218:15:14"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"11235:3:14","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11211:6:14"},"nodeType":"YulFunctionCall","src":"11211:28:14"},"nodeType":"YulExpressionStatement","src":"11211:28:14"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11124:6:14","type":""}],"src":"11026:220:14"},{"body":{"nodeType":"YulBlock","src":"11398:220:14","statements":[{"nodeType":"YulAssignment","src":"11408:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11474:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11479:2:14","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11415:58:14"},"nodeType":"YulFunctionCall","src":"11415:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11408:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11580:3:14"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"11491:88:14"},"nodeType":"YulFunctionCall","src":"11491:93:14"},"nodeType":"YulExpressionStatement","src":"11491:93:14"},{"nodeType":"YulAssignment","src":"11593:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11604:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"11609:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11600:3:14"},"nodeType":"YulFunctionCall","src":"11600:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11593:3:14"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11386:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11394:3:14","type":""}],"src":"11252:366:14"},{"body":{"nodeType":"YulBlock","src":"11795:248:14","statements":[{"nodeType":"YulAssignment","src":"11805:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11817:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11828:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11813:3:14"},"nodeType":"YulFunctionCall","src":"11813:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11805:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11852:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"11863:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11848:3:14"},"nodeType":"YulFunctionCall","src":"11848:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11871:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"11877:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11867:3:14"},"nodeType":"YulFunctionCall","src":"11867:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11841:6:14"},"nodeType":"YulFunctionCall","src":"11841:47:14"},"nodeType":"YulExpressionStatement","src":"11841:47:14"},{"nodeType":"YulAssignment","src":"11897:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12031:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11905:124:14"},"nodeType":"YulFunctionCall","src":"11905:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11897:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11775:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11790:4:14","type":""}],"src":"11624:419:14"},{"body":{"nodeType":"YulBlock","src":"12155:143:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12177:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"12185:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12173:3:14"},"nodeType":"YulFunctionCall","src":"12173:14:14"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"12189:34:14","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12166:6:14"},"nodeType":"YulFunctionCall","src":"12166:58:14"},"nodeType":"YulExpressionStatement","src":"12166:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12245:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"12253:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12241:3:14"},"nodeType":"YulFunctionCall","src":"12241:15:14"},{"hexValue":"6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"12258:32:14","type":"","value":"ken owner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12234:6:14"},"nodeType":"YulFunctionCall","src":"12234:57:14"},"nodeType":"YulExpressionStatement","src":"12234:57:14"}]},"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12147:6:14","type":""}],"src":"12049:249:14"},{"body":{"nodeType":"YulBlock","src":"12450:220:14","statements":[{"nodeType":"YulAssignment","src":"12460:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12526:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12531:2:14","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12467:58:14"},"nodeType":"YulFunctionCall","src":"12467:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12460:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12632:3:14"}],"functionName":{"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulIdentifier","src":"12543:88:14"},"nodeType":"YulFunctionCall","src":"12543:93:14"},"nodeType":"YulExpressionStatement","src":"12543:93:14"},{"nodeType":"YulAssignment","src":"12645:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12656:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"12661:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12652:3:14"},"nodeType":"YulFunctionCall","src":"12652:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12645:3:14"}]}]},"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12438:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12446:3:14","type":""}],"src":"12304:366:14"},{"body":{"nodeType":"YulBlock","src":"12847:248:14","statements":[{"nodeType":"YulAssignment","src":"12857:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12869:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12880:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12865:3:14"},"nodeType":"YulFunctionCall","src":"12865:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12857:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12904:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12915:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12900:3:14"},"nodeType":"YulFunctionCall","src":"12900:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12923:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"12929:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12919:3:14"},"nodeType":"YulFunctionCall","src":"12919:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12893:6:14"},"nodeType":"YulFunctionCall","src":"12893:47:14"},"nodeType":"YulExpressionStatement","src":"12893:47:14"},{"nodeType":"YulAssignment","src":"12949:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13083:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12957:124:14"},"nodeType":"YulFunctionCall","src":"12957:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12949:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12827:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12842:4:14","type":""}],"src":"12676:419:14"},{"body":{"nodeType":"YulBlock","src":"13207:127:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13229:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"13237:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13225:3:14"},"nodeType":"YulFunctionCall","src":"13225:14:14"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"13241:34:14","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13218:6:14"},"nodeType":"YulFunctionCall","src":"13218:58:14"},"nodeType":"YulExpressionStatement","src":"13218:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13297:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"13305:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13293:3:14"},"nodeType":"YulFunctionCall","src":"13293:15:14"},{"hexValue":"72206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"13310:16:14","type":"","value":"r nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13286:6:14"},"nodeType":"YulFunctionCall","src":"13286:41:14"},"nodeType":"YulExpressionStatement","src":"13286:41:14"}]},"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13199:6:14","type":""}],"src":"13101:233:14"},{"body":{"nodeType":"YulBlock","src":"13486:220:14","statements":[{"nodeType":"YulAssignment","src":"13496:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13562:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"13567:2:14","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13503:58:14"},"nodeType":"YulFunctionCall","src":"13503:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13496:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13668:3:14"}],"functionName":{"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulIdentifier","src":"13579:88:14"},"nodeType":"YulFunctionCall","src":"13579:93:14"},"nodeType":"YulExpressionStatement","src":"13579:93:14"},{"nodeType":"YulAssignment","src":"13681:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13692:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"13697:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13688:3:14"},"nodeType":"YulFunctionCall","src":"13688:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13681:3:14"}]}]},"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13474:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13482:3:14","type":""}],"src":"13340:366:14"},{"body":{"nodeType":"YulBlock","src":"13883:248:14","statements":[{"nodeType":"YulAssignment","src":"13893:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13905:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13916:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13901:3:14"},"nodeType":"YulFunctionCall","src":"13901:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13893:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13940:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"13951:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13936:3:14"},"nodeType":"YulFunctionCall","src":"13936:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13959:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"13965:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13955:3:14"},"nodeType":"YulFunctionCall","src":"13955:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13929:6:14"},"nodeType":"YulFunctionCall","src":"13929:47:14"},"nodeType":"YulExpressionStatement","src":"13929:47:14"},{"nodeType":"YulAssignment","src":"13985:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14119:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13993:124:14"},"nodeType":"YulFunctionCall","src":"13993:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13985:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13863:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13878:4:14","type":""}],"src":"13712:419:14"},{"body":{"nodeType":"YulBlock","src":"14243:68:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14265:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"14273:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14261:3:14"},"nodeType":"YulFunctionCall","src":"14261:14:14"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"14277:26:14","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14254:6:14"},"nodeType":"YulFunctionCall","src":"14254:50:14"},"nodeType":"YulExpressionStatement","src":"14254:50:14"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14235:6:14","type":""}],"src":"14137:174:14"},{"body":{"nodeType":"YulBlock","src":"14463:220:14","statements":[{"nodeType":"YulAssignment","src":"14473:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14539:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"14544:2:14","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14480:58:14"},"nodeType":"YulFunctionCall","src":"14480:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14473:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14645:3:14"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"14556:88:14"},"nodeType":"YulFunctionCall","src":"14556:93:14"},"nodeType":"YulExpressionStatement","src":"14556:93:14"},{"nodeType":"YulAssignment","src":"14658:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14669:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"14674:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14665:3:14"},"nodeType":"YulFunctionCall","src":"14665:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14658:3:14"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14451:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14459:3:14","type":""}],"src":"14317:366:14"},{"body":{"nodeType":"YulBlock","src":"14860:248:14","statements":[{"nodeType":"YulAssignment","src":"14870:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14882:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14893:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14878:3:14"},"nodeType":"YulFunctionCall","src":"14878:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14870:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14917:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14928:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14913:3:14"},"nodeType":"YulFunctionCall","src":"14913:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14936:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"14942:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14932:3:14"},"nodeType":"YulFunctionCall","src":"14932:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14906:6:14"},"nodeType":"YulFunctionCall","src":"14906:47:14"},"nodeType":"YulExpressionStatement","src":"14906:47:14"},{"nodeType":"YulAssignment","src":"14962:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15096:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14970:124:14"},"nodeType":"YulFunctionCall","src":"14970:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14962:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14840:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14855:4:14","type":""}],"src":"14689:419:14"},{"body":{"nodeType":"YulBlock","src":"15220:122:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15242:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"15250:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15238:3:14"},"nodeType":"YulFunctionCall","src":"15238:14:14"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"15254:34:14","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15231:6:14"},"nodeType":"YulFunctionCall","src":"15231:58:14"},"nodeType":"YulExpressionStatement","src":"15231:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15310:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"15318:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15306:3:14"},"nodeType":"YulFunctionCall","src":"15306:15:14"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"15323:11:14","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15299:6:14"},"nodeType":"YulFunctionCall","src":"15299:36:14"},"nodeType":"YulExpressionStatement","src":"15299:36:14"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15212:6:14","type":""}],"src":"15114:228:14"},{"body":{"nodeType":"YulBlock","src":"15494:220:14","statements":[{"nodeType":"YulAssignment","src":"15504:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15570:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"15575:2:14","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15511:58:14"},"nodeType":"YulFunctionCall","src":"15511:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15504:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15676:3:14"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"15587:88:14"},"nodeType":"YulFunctionCall","src":"15587:93:14"},"nodeType":"YulExpressionStatement","src":"15587:93:14"},{"nodeType":"YulAssignment","src":"15689:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15700:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"15705:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15696:3:14"},"nodeType":"YulFunctionCall","src":"15696:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15689:3:14"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15482:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15490:3:14","type":""}],"src":"15348:366:14"},{"body":{"nodeType":"YulBlock","src":"15891:248:14","statements":[{"nodeType":"YulAssignment","src":"15901:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15913:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15924:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15909:3:14"},"nodeType":"YulFunctionCall","src":"15909:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15901:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15948:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"15959:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15944:3:14"},"nodeType":"YulFunctionCall","src":"15944:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15967:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"15973:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15963:3:14"},"nodeType":"YulFunctionCall","src":"15963:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15937:6:14"},"nodeType":"YulFunctionCall","src":"15937:47:14"},"nodeType":"YulExpressionStatement","src":"15937:47:14"},{"nodeType":"YulAssignment","src":"15993:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16127:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16001:124:14"},"nodeType":"YulFunctionCall","src":"16001:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15993:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15871:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15886:4:14","type":""}],"src":"15720:419:14"},{"body":{"nodeType":"YulBlock","src":"16259:34:14","statements":[{"nodeType":"YulAssignment","src":"16269:18:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"16284:3:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16269:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16231:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"16236:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16247:11:14","type":""}],"src":"16145:148:14"},{"body":{"nodeType":"YulBlock","src":"16409:267:14","statements":[{"nodeType":"YulVariableDeclaration","src":"16419:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16466:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16433:32:14"},"nodeType":"YulFunctionCall","src":"16433:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16423:6:14","type":""}]},{"nodeType":"YulAssignment","src":"16481:96:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16565:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"16570:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16488:76:14"},"nodeType":"YulFunctionCall","src":"16488:89:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16481:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16612:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"16619:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16608:3:14"},"nodeType":"YulFunctionCall","src":"16608:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"16626:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"16631:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"16586:21:14"},"nodeType":"YulFunctionCall","src":"16586:52:14"},"nodeType":"YulExpressionStatement","src":"16586:52:14"},{"nodeType":"YulAssignment","src":"16647:23:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16658:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"16663:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16654:3:14"},"nodeType":"YulFunctionCall","src":"16654:16:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16647:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16390:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16397:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16405:3:14","type":""}],"src":"16299:377:14"},{"body":{"nodeType":"YulBlock","src":"16866:251:14","statements":[{"nodeType":"YulAssignment","src":"16877:102:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16966:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"16975:3:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16884:81:14"},"nodeType":"YulFunctionCall","src":"16884:95:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16877:3:14"}]},{"nodeType":"YulAssignment","src":"16989:102:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17078:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"17087:3:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16996:81:14"},"nodeType":"YulFunctionCall","src":"16996:95:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16989:3:14"}]},{"nodeType":"YulAssignment","src":"17101:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"17108:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17101:3:14"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16837:3:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16843:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16851:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16862:3:14","type":""}],"src":"16682:435:14"},{"body":{"nodeType":"YulBlock","src":"17229:118:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17251:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"17259:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17247:3:14"},"nodeType":"YulFunctionCall","src":"17247:14:14"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"17263:34:14","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17240:6:14"},"nodeType":"YulFunctionCall","src":"17240:58:14"},"nodeType":"YulExpressionStatement","src":"17240:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17319:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"17327:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17315:3:14"},"nodeType":"YulFunctionCall","src":"17315:15:14"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"17332:7:14","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17308:6:14"},"nodeType":"YulFunctionCall","src":"17308:32:14"},"nodeType":"YulExpressionStatement","src":"17308:32:14"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17221:6:14","type":""}],"src":"17123:224:14"},{"body":{"nodeType":"YulBlock","src":"17499:220:14","statements":[{"nodeType":"YulAssignment","src":"17509:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17575:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"17580:2:14","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17516:58:14"},"nodeType":"YulFunctionCall","src":"17516:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17509:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17681:3:14"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"17592:88:14"},"nodeType":"YulFunctionCall","src":"17592:93:14"},"nodeType":"YulExpressionStatement","src":"17592:93:14"},{"nodeType":"YulAssignment","src":"17694:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17705:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"17710:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17701:3:14"},"nodeType":"YulFunctionCall","src":"17701:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17694:3:14"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17487:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17495:3:14","type":""}],"src":"17353:366:14"},{"body":{"nodeType":"YulBlock","src":"17896:248:14","statements":[{"nodeType":"YulAssignment","src":"17906:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17918:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17929:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17914:3:14"},"nodeType":"YulFunctionCall","src":"17914:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17906:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17953:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17964:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17949:3:14"},"nodeType":"YulFunctionCall","src":"17949:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17972:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"17978:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17968:3:14"},"nodeType":"YulFunctionCall","src":"17968:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17942:6:14"},"nodeType":"YulFunctionCall","src":"17942:47:14"},"nodeType":"YulExpressionStatement","src":"17942:47:14"},{"nodeType":"YulAssignment","src":"17998:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18132:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18006:124:14"},"nodeType":"YulFunctionCall","src":"18006:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17998:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17876:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17891:4:14","type":""}],"src":"17725:419:14"},{"body":{"nodeType":"YulBlock","src":"18256:117:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18278:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"18286:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18274:3:14"},"nodeType":"YulFunctionCall","src":"18274:14:14"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"18290:34:14","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18267:6:14"},"nodeType":"YulFunctionCall","src":"18267:58:14"},"nodeType":"YulExpressionStatement","src":"18267:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18346:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"18354:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18342:3:14"},"nodeType":"YulFunctionCall","src":"18342:15:14"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"18359:6:14","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18335:6:14"},"nodeType":"YulFunctionCall","src":"18335:31:14"},"nodeType":"YulExpressionStatement","src":"18335:31:14"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18248:6:14","type":""}],"src":"18150:223:14"},{"body":{"nodeType":"YulBlock","src":"18525:220:14","statements":[{"nodeType":"YulAssignment","src":"18535:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18601:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18606:2:14","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18542:58:14"},"nodeType":"YulFunctionCall","src":"18542:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18535:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18707:3:14"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"18618:88:14"},"nodeType":"YulFunctionCall","src":"18618:93:14"},"nodeType":"YulExpressionStatement","src":"18618:93:14"},{"nodeType":"YulAssignment","src":"18720:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18731:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18736:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18727:3:14"},"nodeType":"YulFunctionCall","src":"18727:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18720:3:14"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18513:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18521:3:14","type":""}],"src":"18379:366:14"},{"body":{"nodeType":"YulBlock","src":"18922:248:14","statements":[{"nodeType":"YulAssignment","src":"18932:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18944:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18955:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18940:3:14"},"nodeType":"YulFunctionCall","src":"18940:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18932:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18979:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18990:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18975:3:14"},"nodeType":"YulFunctionCall","src":"18975:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18998:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"19004:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18994:3:14"},"nodeType":"YulFunctionCall","src":"18994:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18968:6:14"},"nodeType":"YulFunctionCall","src":"18968:47:14"},"nodeType":"YulExpressionStatement","src":"18968:47:14"},{"nodeType":"YulAssignment","src":"19024:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19158:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19032:124:14"},"nodeType":"YulFunctionCall","src":"19032:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19024:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18902:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18917:4:14","type":""}],"src":"18751:419:14"},{"body":{"nodeType":"YulBlock","src":"19204:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19221:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19224:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19214:6:14"},"nodeType":"YulFunctionCall","src":"19214:88:14"},"nodeType":"YulExpressionStatement","src":"19214:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19318:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19321:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19311:6:14"},"nodeType":"YulFunctionCall","src":"19311:15:14"},"nodeType":"YulExpressionStatement","src":"19311:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19342:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19345:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19335:6:14"},"nodeType":"YulFunctionCall","src":"19335:15:14"},"nodeType":"YulExpressionStatement","src":"19335:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"19176:180:14"},{"body":{"nodeType":"YulBlock","src":"19407:146:14","statements":[{"nodeType":"YulAssignment","src":"19417:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19440:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19422:17:14"},"nodeType":"YulFunctionCall","src":"19422:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19417:1:14"}]},{"nodeType":"YulAssignment","src":"19451:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19474:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19456:17:14"},"nodeType":"YulFunctionCall","src":"19456:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19451:1:14"}]},{"body":{"nodeType":"YulBlock","src":"19498:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19500:16:14"},"nodeType":"YulFunctionCall","src":"19500:18:14"},"nodeType":"YulExpressionStatement","src":"19500:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19492:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"19495:1:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19489:2:14"},"nodeType":"YulFunctionCall","src":"19489:8:14"},"nodeType":"YulIf","src":"19486:34:14"},{"nodeType":"YulAssignment","src":"19530:17:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19542:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"19545:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19538:3:14"},"nodeType":"YulFunctionCall","src":"19538:9:14"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"19530:4:14"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19393:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"19396:1:14","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"19402:4:14","type":""}],"src":"19362:191:14"},{"body":{"nodeType":"YulBlock","src":"19603:261:14","statements":[{"nodeType":"YulAssignment","src":"19613:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19636:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19618:17:14"},"nodeType":"YulFunctionCall","src":"19618:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"19613:1:14"}]},{"nodeType":"YulAssignment","src":"19647:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"19670:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19652:17:14"},"nodeType":"YulFunctionCall","src":"19652:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"19647:1:14"}]},{"body":{"nodeType":"YulBlock","src":"19810:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19812:16:14"},"nodeType":"YulFunctionCall","src":"19812:18:14"},"nodeType":"YulExpressionStatement","src":"19812:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19731:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19738:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"19806:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19734:3:14"},"nodeType":"YulFunctionCall","src":"19734:74:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19728:2:14"},"nodeType":"YulFunctionCall","src":"19728:81:14"},"nodeType":"YulIf","src":"19725:107:14"},{"nodeType":"YulAssignment","src":"19842:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"19853:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"19856:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19849:3:14"},"nodeType":"YulFunctionCall","src":"19849:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"19842:3:14"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"19590:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"19593:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"19599:3:14","type":""}],"src":"19559:305:14"},{"body":{"nodeType":"YulBlock","src":"19976:69:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19998:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"20006:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19994:3:14"},"nodeType":"YulFunctionCall","src":"19994:14:14"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"20010:27:14","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19987:6:14"},"nodeType":"YulFunctionCall","src":"19987:51:14"},"nodeType":"YulExpressionStatement","src":"19987:51:14"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19968:6:14","type":""}],"src":"19870:175:14"},{"body":{"nodeType":"YulBlock","src":"20197:220:14","statements":[{"nodeType":"YulAssignment","src":"20207:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20273:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"20278:2:14","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20214:58:14"},"nodeType":"YulFunctionCall","src":"20214:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20207:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20379:3:14"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"20290:88:14"},"nodeType":"YulFunctionCall","src":"20290:93:14"},"nodeType":"YulExpressionStatement","src":"20290:93:14"},{"nodeType":"YulAssignment","src":"20392:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20403:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"20408:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20399:3:14"},"nodeType":"YulFunctionCall","src":"20399:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20392:3:14"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20185:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20193:3:14","type":""}],"src":"20051:366:14"},{"body":{"nodeType":"YulBlock","src":"20594:248:14","statements":[{"nodeType":"YulAssignment","src":"20604:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20616:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20627:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20612:3:14"},"nodeType":"YulFunctionCall","src":"20612:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20604:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20651:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"20662:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20647:3:14"},"nodeType":"YulFunctionCall","src":"20647:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20670:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"20676:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20666:3:14"},"nodeType":"YulFunctionCall","src":"20666:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20640:6:14"},"nodeType":"YulFunctionCall","src":"20640:47:14"},"nodeType":"YulExpressionStatement","src":"20640:47:14"},{"nodeType":"YulAssignment","src":"20696:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20830:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20704:124:14"},"nodeType":"YulFunctionCall","src":"20704:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20696:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20574:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20589:4:14","type":""}],"src":"20423:419:14"},{"body":{"nodeType":"YulBlock","src":"20954:131:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20976:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"20984:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20972:3:14"},"nodeType":"YulFunctionCall","src":"20972:14:14"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"20988:34:14","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20965:6:14"},"nodeType":"YulFunctionCall","src":"20965:58:14"},"nodeType":"YulExpressionStatement","src":"20965:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21044:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"21052:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21040:3:14"},"nodeType":"YulFunctionCall","src":"21040:15:14"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"21057:20:14","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21033:6:14"},"nodeType":"YulFunctionCall","src":"21033:45:14"},"nodeType":"YulExpressionStatement","src":"21033:45:14"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20946:6:14","type":""}],"src":"20848:237:14"},{"body":{"nodeType":"YulBlock","src":"21237:220:14","statements":[{"nodeType":"YulAssignment","src":"21247:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21313:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"21318:2:14","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21254:58:14"},"nodeType":"YulFunctionCall","src":"21254:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21247:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21419:3:14"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"21330:88:14"},"nodeType":"YulFunctionCall","src":"21330:93:14"},"nodeType":"YulExpressionStatement","src":"21330:93:14"},{"nodeType":"YulAssignment","src":"21432:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21443:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"21448:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21439:3:14"},"nodeType":"YulFunctionCall","src":"21439:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21432:3:14"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21225:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21233:3:14","type":""}],"src":"21091:366:14"},{"body":{"nodeType":"YulBlock","src":"21634:248:14","statements":[{"nodeType":"YulAssignment","src":"21644:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21656:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21667:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21652:3:14"},"nodeType":"YulFunctionCall","src":"21652:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21644:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21691:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21702:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21687:3:14"},"nodeType":"YulFunctionCall","src":"21687:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21710:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"21716:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21706:3:14"},"nodeType":"YulFunctionCall","src":"21706:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21680:6:14"},"nodeType":"YulFunctionCall","src":"21680:47:14"},"nodeType":"YulExpressionStatement","src":"21680:47:14"},{"nodeType":"YulAssignment","src":"21736:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21870:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21744:124:14"},"nodeType":"YulFunctionCall","src":"21744:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21736:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21614:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21629:4:14","type":""}],"src":"21463:419:14"},{"body":{"nodeType":"YulBlock","src":"21931:190:14","statements":[{"nodeType":"YulAssignment","src":"21941:33:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21968:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21950:17:14"},"nodeType":"YulFunctionCall","src":"21950:24:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21941:5:14"}]},{"body":{"nodeType":"YulBlock","src":"22064:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22066:16:14"},"nodeType":"YulFunctionCall","src":"22066:18:14"},"nodeType":"YulExpressionStatement","src":"22066:18:14"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21989:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"21996:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21986:2:14"},"nodeType":"YulFunctionCall","src":"21986:77:14"},"nodeType":"YulIf","src":"21983:103:14"},{"nodeType":"YulAssignment","src":"22095:20:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22106:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"22113:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22102:3:14"},"nodeType":"YulFunctionCall","src":"22102:13:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"22095:3:14"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21917:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"21927:3:14","type":""}],"src":"21888:233:14"},{"body":{"nodeType":"YulBlock","src":"22155:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22172:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22175:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22165:6:14"},"nodeType":"YulFunctionCall","src":"22165:88:14"},"nodeType":"YulExpressionStatement","src":"22165:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22269:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22272:4:14","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22262:6:14"},"nodeType":"YulFunctionCall","src":"22262:15:14"},"nodeType":"YulExpressionStatement","src":"22262:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22293:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22296:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22286:6:14"},"nodeType":"YulFunctionCall","src":"22286:15:14"},"nodeType":"YulExpressionStatement","src":"22286:15:14"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"22127:180:14"},{"body":{"nodeType":"YulBlock","src":"22355:143:14","statements":[{"nodeType":"YulAssignment","src":"22365:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22388:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22370:17:14"},"nodeType":"YulFunctionCall","src":"22370:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22365:1:14"}]},{"nodeType":"YulAssignment","src":"22399:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22422:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22404:17:14"},"nodeType":"YulFunctionCall","src":"22404:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22399:1:14"}]},{"body":{"nodeType":"YulBlock","src":"22446:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"22448:16:14"},"nodeType":"YulFunctionCall","src":"22448:18:14"},"nodeType":"YulExpressionStatement","src":"22448:18:14"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22443:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22436:6:14"},"nodeType":"YulFunctionCall","src":"22436:9:14"},"nodeType":"YulIf","src":"22433:35:14"},{"nodeType":"YulAssignment","src":"22478:14:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22487:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"22490:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"22483:3:14"},"nodeType":"YulFunctionCall","src":"22483:9:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"22478:1:14"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22344:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"22347:1:14","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"22353:1:14","type":""}],"src":"22313:185:14"},{"body":{"nodeType":"YulBlock","src":"22538:142:14","statements":[{"nodeType":"YulAssignment","src":"22548:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22571:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22553:17:14"},"nodeType":"YulFunctionCall","src":"22553:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"22548:1:14"}]},{"nodeType":"YulAssignment","src":"22582:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22605:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"22587:17:14"},"nodeType":"YulFunctionCall","src":"22587:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"22582:1:14"}]},{"body":{"nodeType":"YulBlock","src":"22629:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"22631:16:14"},"nodeType":"YulFunctionCall","src":"22631:18:14"},"nodeType":"YulExpressionStatement","src":"22631:18:14"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"22626:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22619:6:14"},"nodeType":"YulFunctionCall","src":"22619:9:14"},"nodeType":"YulIf","src":"22616:35:14"},{"nodeType":"YulAssignment","src":"22660:14:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22669:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"22672:1:14"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"22665:3:14"},"nodeType":"YulFunctionCall","src":"22665:9:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"22660:1:14"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22527:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"22530:1:14","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"22536:1:14","type":""}],"src":"22504:176:14"},{"body":{"nodeType":"YulBlock","src":"22714:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22731:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22734:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22724:6:14"},"nodeType":"YulFunctionCall","src":"22724:88:14"},"nodeType":"YulExpressionStatement","src":"22724:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22828:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22831:4:14","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22821:6:14"},"nodeType":"YulFunctionCall","src":"22821:15:14"},"nodeType":"YulExpressionStatement","src":"22821:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22852:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22855:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22845:6:14"},"nodeType":"YulFunctionCall","src":"22845:15:14"},"nodeType":"YulExpressionStatement","src":"22845:15:14"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"22686:180:14"},{"body":{"nodeType":"YulBlock","src":"22930:40:14","statements":[{"nodeType":"YulAssignment","src":"22941:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22957:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22951:5:14"},"nodeType":"YulFunctionCall","src":"22951:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22941:6:14"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22913:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22923:6:14","type":""}],"src":"22872:98:14"},{"body":{"nodeType":"YulBlock","src":"23071:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23088:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"23093:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23081:6:14"},"nodeType":"YulFunctionCall","src":"23081:19:14"},"nodeType":"YulExpressionStatement","src":"23081:19:14"},{"nodeType":"YulAssignment","src":"23109:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23128:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"23133:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23124:3:14"},"nodeType":"YulFunctionCall","src":"23124:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"23109:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23043:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"23048:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"23059:11:14","type":""}],"src":"22976:168:14"},{"body":{"nodeType":"YulBlock","src":"23240:270:14","statements":[{"nodeType":"YulVariableDeclaration","src":"23250:52:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23296:5:14"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"23264:31:14"},"nodeType":"YulFunctionCall","src":"23264:38:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"23254:6:14","type":""}]},{"nodeType":"YulAssignment","src":"23311:77:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23376:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"23381:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23318:57:14"},"nodeType":"YulFunctionCall","src":"23318:70:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23311:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23423:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"23430:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23419:3:14"},"nodeType":"YulFunctionCall","src":"23419:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"23437:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"23442:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"23397:21:14"},"nodeType":"YulFunctionCall","src":"23397:52:14"},"nodeType":"YulExpressionStatement","src":"23397:52:14"},{"nodeType":"YulAssignment","src":"23458:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23469:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23496:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"23474:21:14"},"nodeType":"YulFunctionCall","src":"23474:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23465:3:14"},"nodeType":"YulFunctionCall","src":"23465:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23458:3:14"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23221:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23228:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23236:3:14","type":""}],"src":"23150:360:14"},{"body":{"nodeType":"YulBlock","src":"23716:440:14","statements":[{"nodeType":"YulAssignment","src":"23726:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23738:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23749:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23734:3:14"},"nodeType":"YulFunctionCall","src":"23734:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23726:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23807:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23820:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23831:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23816:3:14"},"nodeType":"YulFunctionCall","src":"23816:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23763:43:14"},"nodeType":"YulFunctionCall","src":"23763:71:14"},"nodeType":"YulExpressionStatement","src":"23763:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23888:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23901:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23912:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23897:3:14"},"nodeType":"YulFunctionCall","src":"23897:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23844:43:14"},"nodeType":"YulFunctionCall","src":"23844:72:14"},"nodeType":"YulExpressionStatement","src":"23844:72:14"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23970:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23983:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"23994:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23979:3:14"},"nodeType":"YulFunctionCall","src":"23979:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23926:43:14"},"nodeType":"YulFunctionCall","src":"23926:72:14"},"nodeType":"YulExpressionStatement","src":"23926:72:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24019:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24030:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24015:3:14"},"nodeType":"YulFunctionCall","src":"24015:18:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24039:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"24045:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24035:3:14"},"nodeType":"YulFunctionCall","src":"24035:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24008:6:14"},"nodeType":"YulFunctionCall","src":"24008:48:14"},"nodeType":"YulExpressionStatement","src":"24008:48:14"},{"nodeType":"YulAssignment","src":"24065:84:14","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24135:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"24144:4:14"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24073:61:14"},"nodeType":"YulFunctionCall","src":"24073:76:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24065:4:14"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23664:9:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23676:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23684:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23692:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23700:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23711:4:14","type":""}],"src":"23516:640:14"},{"body":{"nodeType":"YulBlock","src":"24224:79:14","statements":[{"nodeType":"YulAssignment","src":"24234:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24249:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24243:5:14"},"nodeType":"YulFunctionCall","src":"24243:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"24234:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24291:5:14"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"24265:25:14"},"nodeType":"YulFunctionCall","src":"24265:32:14"},"nodeType":"YulExpressionStatement","src":"24265:32:14"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"24202:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"24210:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"24218:5:14","type":""}],"src":"24162:141:14"},{"body":{"nodeType":"YulBlock","src":"24385:273:14","statements":[{"body":{"nodeType":"YulBlock","src":"24431:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24433:77:14"},"nodeType":"YulFunctionCall","src":"24433:79:14"},"nodeType":"YulExpressionStatement","src":"24433:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24406:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"24415:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24402:3:14"},"nodeType":"YulFunctionCall","src":"24402:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"24427:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24398:3:14"},"nodeType":"YulFunctionCall","src":"24398:32:14"},"nodeType":"YulIf","src":"24395:119:14"},{"nodeType":"YulBlock","src":"24524:127:14","statements":[{"nodeType":"YulVariableDeclaration","src":"24539:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"24553:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24543:6:14","type":""}]},{"nodeType":"YulAssignment","src":"24568:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24613:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"24624:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24609:3:14"},"nodeType":"YulFunctionCall","src":"24609:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24633:7:14"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"24578:30:14"},"nodeType":"YulFunctionCall","src":"24578:63:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24568:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24355:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24366:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24378:6:14","type":""}],"src":"24309:349:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e991906113cd565b6102bc565b6040516100fb9190611415565b60405180910390f35b61010c61039e565b60405161011991906114c9565b60405180910390f35b61013c60048036038101906101379190611521565b610430565b604051610149919061158f565b60405180910390f35b61016c600480360381019061016791906115d6565b610476565b005b61018860048036038101906101839190611616565b61058e565b005b6101a4600480360381019061019f9190611616565b6105ee565b005b6101c060048036038101906101bb9190611521565b61060e565b6040516101cd919061158f565b60405180910390f35b6101f060048036038101906101eb9190611669565b6106c0565b6040516101fd91906116a5565b60405180910390f35b61020e610778565b60405161021b91906114c9565b60405180910390f35b61023e600480360381019061023991906116ec565b61080a565b005b61025a60048036038101906102559190611861565b610820565b005b61027660048036038101906102719190611521565b610882565b60405161028391906114c9565b60405180910390f35b6102a660048036038101906102a191906118e4565b6108ea565b6040516102b39190611415565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061039757506103968261097e565b5b9050919050565b6060600080546103ad90611953565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611953565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109e8565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e9906119f7565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a33565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a33565b6108ea565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611a89565b60405180910390fd5b6105898383610a3b565b505050565b61059f610599610a33565b82610af4565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611b1b565b60405180910390fd5b6105e9838383610b89565b505050565b61060983838360405180602001604052806000815250610820565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ae90611b87565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072890611c19565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461078790611953565b80601f01602080910402602001604051908101604052809291908181526020018280546107b390611953565b80156108005780601f106107d557610100808354040283529160200191610800565b820191906000526020600020905b8154815290600101906020018083116107e357829003601f168201915b5050505050905090565b61081c610815610a33565b8383610df0565b5050565b61083161082b610a33565b83610af4565b610870576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086790611b1b565b60405180910390fd5b61087c84848484610f5d565b50505050565b606061088d826109e8565b6000610897610fb9565b905060008151116108b757604051806020016040528060008152506108e2565b806108c184610fd0565b6040516020016108d2929190611c75565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109f181611131565b610a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2790611b87565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610aae8361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b008361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b425750610b4181856108ea565b5b80610b8057508373ffffffffffffffffffffffffffffffffffffffff16610b6884610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610ba98261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf690611d0b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6690611d9d565b60405180910390fd5b610c7a83838361119d565b610c85600082610a3b565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cd59190611dec565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d2c9190611e20565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610deb8383836111a2565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5690611ec2565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f509190611415565b60405180910390a3505050565b610f68848484610b89565b610f74848484846111a7565b610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa90611f54565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000821415611018576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061112c565b600082905060005b6000821461104a57808061103390611f74565b915050600a826110439190611fec565b9150611020565b60008167ffffffffffffffff81111561106657611065611736565b5b6040519080825280601f01601f1916602001820160405280156110985781602001600182028036833780820191505090505b5090505b60008514611125576001826110b19190611dec565b9150600a856110c0919061201d565b60306110cc9190611e20565b60f81b8183815181106110e2576110e161204e565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8561111e9190611fec565b945061109c565b8093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b505050565b60006111c88473ffffffffffffffffffffffffffffffffffffffff1661133e565b15611331578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111f1610a33565b8786866040518563ffffffff1660e01b815260040161121394939291906120d2565b602060405180830381600087803b15801561122d57600080fd5b505af192505050801561125e57506040513d601f19601f8201168201806040525081019061125b9190612133565b60015b6112e1573d806000811461128e576040519150601f19603f3d011682016040523d82523d6000602084013e611293565b606091505b506000815114156112d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d090611f54565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611336565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113aa81611375565b81146113b557600080fd5b50565b6000813590506113c7816113a1565b92915050565b6000602082840312156113e3576113e261136b565b5b60006113f1848285016113b8565b91505092915050565b60008115159050919050565b61140f816113fa565b82525050565b600060208201905061142a6000830184611406565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561146a57808201518184015260208101905061144f565b83811115611479576000848401525b50505050565b6000601f19601f8301169050919050565b600061149b82611430565b6114a5818561143b565b93506114b581856020860161144c565b6114be8161147f565b840191505092915050565b600060208201905081810360008301526114e38184611490565b905092915050565b6000819050919050565b6114fe816114eb565b811461150957600080fd5b50565b60008135905061151b816114f5565b92915050565b6000602082840312156115375761153661136b565b5b60006115458482850161150c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115798261154e565b9050919050565b6115898161156e565b82525050565b60006020820190506115a46000830184611580565b92915050565b6115b38161156e565b81146115be57600080fd5b50565b6000813590506115d0816115aa565b92915050565b600080604083850312156115ed576115ec61136b565b5b60006115fb858286016115c1565b925050602061160c8582860161150c565b9150509250929050565b60008060006060848603121561162f5761162e61136b565b5b600061163d868287016115c1565b935050602061164e868287016115c1565b925050604061165f8682870161150c565b9150509250925092565b60006020828403121561167f5761167e61136b565b5b600061168d848285016115c1565b91505092915050565b61169f816114eb565b82525050565b60006020820190506116ba6000830184611696565b92915050565b6116c9816113fa565b81146116d457600080fd5b50565b6000813590506116e6816116c0565b92915050565b600080604083850312156117035761170261136b565b5b6000611711858286016115c1565b9250506020611722858286016116d7565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61176e8261147f565b810181811067ffffffffffffffff8211171561178d5761178c611736565b5b80604052505050565b60006117a0611361565b90506117ac8282611765565b919050565b600067ffffffffffffffff8211156117cc576117cb611736565b5b6117d58261147f565b9050602081019050919050565b82818337600083830152505050565b60006118046117ff846117b1565b611796565b9050828152602081018484840111156118205761181f611731565b5b61182b8482856117e2565b509392505050565b600082601f8301126118485761184761172c565b5b81356118588482602086016117f1565b91505092915050565b6000806000806080858703121561187b5761187a61136b565b5b6000611889878288016115c1565b945050602061189a878288016115c1565b93505060406118ab8782880161150c565b925050606085013567ffffffffffffffff8111156118cc576118cb611370565b5b6118d887828801611833565b91505092959194509250565b600080604083850312156118fb576118fa61136b565b5b6000611909858286016115c1565b925050602061191a858286016115c1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061196b57607f821691505b6020821081141561197f5761197e611924565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006119e160218361143b565b91506119ec82611985565b604082019050919050565b60006020820190508181036000830152611a10816119d4565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b6000611a73603e8361143b565b9150611a7e82611a17565b604082019050919050565b60006020820190508181036000830152611aa281611a66565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6000611b05602e8361143b565b9150611b1082611aa9565b604082019050919050565b60006020820190508181036000830152611b3481611af8565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611b7160188361143b565b9150611b7c82611b3b565b602082019050919050565b60006020820190508181036000830152611ba081611b64565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611c0360298361143b565b9150611c0e82611ba7565b604082019050919050565b60006020820190508181036000830152611c3281611bf6565b9050919050565b600081905092915050565b6000611c4f82611430565b611c598185611c39565b9350611c6981856020860161144c565b80840191505092915050565b6000611c818285611c44565b9150611c8d8284611c44565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611cf560258361143b565b9150611d0082611c99565b604082019050919050565b60006020820190508181036000830152611d2481611ce8565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611d8760248361143b565b9150611d9282611d2b565b604082019050919050565b60006020820190508181036000830152611db681611d7a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611df7826114eb565b9150611e02836114eb565b925082821015611e1557611e14611dbd565b5b828203905092915050565b6000611e2b826114eb565b9150611e36836114eb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611e6b57611e6a611dbd565b5b828201905092915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611eac60198361143b565b9150611eb782611e76565b602082019050919050565b60006020820190508181036000830152611edb81611e9f565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611f3e60328361143b565b9150611f4982611ee2565b604082019050919050565b60006020820190508181036000830152611f6d81611f31565b9050919050565b6000611f7f826114eb565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611fb257611fb1611dbd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ff7826114eb565b9150612002836114eb565b92508261201257612011611fbd565b5b828204905092915050565b6000612028826114eb565b9150612033836114eb565b92508261204357612042611fbd565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60006120a48261207d565b6120ae8185612088565b93506120be81856020860161144c565b6120c78161147f565b840191505092915050565b60006080820190506120e76000830187611580565b6120f46020830186611580565b6121016040830185611696565b81810360608301526121138184612099565b905095945050505050565b60008151905061212d816113a1565b92915050565b6000602082840312156121495761214861136b565b5b60006121578482850161211e565b9150509291505056fea26469706673582212201ed4128f65eb8b255eac0042de409e7ee609866e4cbda6165c02f1f921184e5e64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x13CD JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x15D6 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1616 JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1669 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x778 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x16EC JUMP JUMPDEST PUSH2 0x80A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1861 JUMP JUMPDEST PUSH2 0x820 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x882 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x14C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x18E4 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x97E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x19F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA33 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA33 JUMP JUMPDEST PUSH2 0x8EA JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1A89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA3B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA33 JUMP JUMPDEST DUP3 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB89 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x820 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6AE SWAP1 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x728 SWAP1 PUSH2 0x1C19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x787 SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B3 SWAP1 PUSH2 0x1953 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x800 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x800 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x81C PUSH2 0x815 PUSH2 0xA33 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDF0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x831 PUSH2 0x82B PUSH2 0xA33 JUMP JUMPDEST DUP4 PUSH2 0xAF4 JUMP JUMPDEST PUSH2 0x870 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x867 SWAP1 PUSH2 0x1B1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x87C DUP5 DUP5 DUP5 DUP5 PUSH2 0xF5D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x88D DUP3 PUSH2 0x9E8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x897 PUSH2 0xFB9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8E2 JUMP JUMPDEST DUP1 PUSH2 0x8C1 DUP5 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8D2 SWAP3 SWAP2 SWAP1 PUSH2 0x1C75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9F1 DUP2 PUSH2 0x1131 JUMP JUMPDEST PUSH2 0xA30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA27 SWAP1 PUSH2 0x1B87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAAE DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB00 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB42 JUMPI POP PUSH2 0xB41 DUP2 DUP6 PUSH2 0x8EA JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB80 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB68 DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBA9 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF6 SWAP1 PUSH2 0x1D0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC66 SWAP1 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7A DUP4 DUP4 DUP4 PUSH2 0x119D JUMP JUMPDEST PUSH2 0xC85 PUSH1 0x0 DUP3 PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD2C SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xDEB DUP4 DUP4 DUP4 PUSH2 0x11A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE56 SWAP1 PUSH2 0x1EC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF50 SWAP2 SWAP1 PUSH2 0x1415 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xF68 DUP5 DUP5 DUP5 PUSH2 0xB89 JUMP JUMPDEST PUSH2 0xF74 DUP5 DUP5 DUP5 DUP5 PUSH2 0x11A7 JUMP JUMPDEST PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x1018 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x112C JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x104A JUMPI DUP1 DUP1 PUSH2 0x1033 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST SWAP2 POP PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1066 JUMPI PUSH2 0x1065 PUSH2 0x1736 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1098 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1125 JUMPI PUSH1 0x1 DUP3 PUSH2 0x10B1 SWAP2 SWAP1 PUSH2 0x1DEC JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x10C0 SWAP2 SWAP1 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x30 PUSH2 0x10CC SWAP2 SWAP1 PUSH2 0x1E20 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x10E2 JUMPI PUSH2 0x10E1 PUSH2 0x204E JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x111E SWAP2 SWAP1 PUSH2 0x1FEC JUMP JUMPDEST SWAP5 POP PUSH2 0x109C JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C8 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x133E JUMP JUMPDEST ISZERO PUSH2 0x1331 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11F1 PUSH2 0xA33 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1213 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x20D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x122D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x125E JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x125B SWAP2 SWAP1 PUSH2 0x2133 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12E1 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x128E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1293 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x12D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D0 SWAP1 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1336 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13AA DUP2 PUSH2 0x1375 JUMP JUMPDEST DUP2 EQ PUSH2 0x13B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x13C7 DUP2 PUSH2 0x13A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E3 JUMPI PUSH2 0x13E2 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13F1 DUP5 DUP3 DUP6 ADD PUSH2 0x13B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x140F DUP2 PUSH2 0x13FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x142A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1406 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x146A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x144F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1479 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x149B DUP3 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x14A5 DUP2 DUP6 PUSH2 0x143B JUMP JUMPDEST SWAP4 POP PUSH2 0x14B5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST PUSH2 0x14BE DUP2 PUSH2 0x147F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14E3 DUP2 DUP5 PUSH2 0x1490 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14FE DUP2 PUSH2 0x14EB JUMP JUMPDEST DUP2 EQ PUSH2 0x1509 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x151B DUP2 PUSH2 0x14F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1537 JUMPI PUSH2 0x1536 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1545 DUP5 DUP3 DUP6 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1579 DUP3 PUSH2 0x154E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1589 DUP2 PUSH2 0x156E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1580 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15B3 DUP2 PUSH2 0x156E JUMP JUMPDEST DUP2 EQ PUSH2 0x15BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15D0 DUP2 PUSH2 0x15AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15ED JUMPI PUSH2 0x15EC PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15FB DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x160C DUP6 DUP3 DUP7 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x162F JUMPI PUSH2 0x162E PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x163D DUP7 DUP3 DUP8 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x164E DUP7 DUP3 DUP8 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x165F DUP7 DUP3 DUP8 ADD PUSH2 0x150C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x167F JUMPI PUSH2 0x167E PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x168D DUP5 DUP3 DUP6 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x169F DUP2 PUSH2 0x14EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16C9 DUP2 PUSH2 0x13FA JUMP JUMPDEST DUP2 EQ PUSH2 0x16D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16E6 DUP2 PUSH2 0x16C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1703 JUMPI PUSH2 0x1702 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1711 DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1722 DUP6 DUP3 DUP7 ADD PUSH2 0x16D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x176E DUP3 PUSH2 0x147F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x178D JUMPI PUSH2 0x178C PUSH2 0x1736 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17A0 PUSH2 0x1361 JUMP JUMPDEST SWAP1 POP PUSH2 0x17AC DUP3 DUP3 PUSH2 0x1765 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17CC JUMPI PUSH2 0x17CB PUSH2 0x1736 JUMP JUMPDEST JUMPDEST PUSH2 0x17D5 DUP3 PUSH2 0x147F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1804 PUSH2 0x17FF DUP5 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0x1796 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1820 JUMPI PUSH2 0x181F PUSH2 0x1731 JUMP JUMPDEST JUMPDEST PUSH2 0x182B DUP5 DUP3 DUP6 PUSH2 0x17E2 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1848 JUMPI PUSH2 0x1847 PUSH2 0x172C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1858 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x187B JUMPI PUSH2 0x187A PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1889 DUP8 DUP3 DUP9 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x189A DUP8 DUP3 DUP9 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x18AB DUP8 DUP3 DUP9 ADD PUSH2 0x150C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18CC JUMPI PUSH2 0x18CB PUSH2 0x1370 JUMP JUMPDEST JUMPDEST PUSH2 0x18D8 DUP8 DUP3 DUP9 ADD PUSH2 0x1833 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18FB JUMPI PUSH2 0x18FA PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1909 DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x191A DUP6 DUP3 DUP7 ADD PUSH2 0x15C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x196B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x197F JUMPI PUSH2 0x197E PUSH2 0x1924 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19E1 PUSH1 0x21 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x19EC DUP3 PUSH2 0x1985 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A10 DUP2 PUSH2 0x19D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A73 PUSH1 0x3E DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A7E DUP3 PUSH2 0x1A17 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AA2 DUP2 PUSH2 0x1A66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B05 PUSH1 0x2E DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B10 DUP3 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B34 DUP2 PUSH2 0x1AF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B71 PUSH1 0x18 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1B7C DUP3 PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BA0 DUP2 PUSH2 0x1B64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C03 PUSH1 0x29 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1C0E DUP3 PUSH2 0x1BA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C32 DUP2 PUSH2 0x1BF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4F DUP3 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x1C59 DUP2 DUP6 PUSH2 0x1C39 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C69 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C81 DUP3 DUP6 PUSH2 0x1C44 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C8D DUP3 DUP5 PUSH2 0x1C44 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CF5 PUSH1 0x25 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D00 DUP3 PUSH2 0x1C99 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D24 DUP2 PUSH2 0x1CE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D87 PUSH1 0x24 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1D92 DUP3 PUSH2 0x1D2B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DB6 DUP2 PUSH2 0x1D7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DF7 DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1E02 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1E15 JUMPI PUSH2 0x1E14 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E2B DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1E36 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1E6B JUMPI PUSH2 0x1E6A PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAC PUSH1 0x19 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB7 DUP3 PUSH2 0x1E76 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EDB DUP2 PUSH2 0x1E9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F3E PUSH1 0x32 DUP4 PUSH2 0x143B JUMP JUMPDEST SWAP2 POP PUSH2 0x1F49 DUP3 PUSH2 0x1EE2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F6D DUP2 PUSH2 0x1F31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F7F DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x1FB2 JUMPI PUSH2 0x1FB1 PUSH2 0x1DBD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FF7 DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2002 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2012 JUMPI PUSH2 0x2011 PUSH2 0x1FBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2028 DUP3 PUSH2 0x14EB JUMP JUMPDEST SWAP2 POP PUSH2 0x2033 DUP4 PUSH2 0x14EB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2043 JUMPI PUSH2 0x2042 PUSH2 0x1FBD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A4 DUP3 PUSH2 0x207D JUMP JUMPDEST PUSH2 0x20AE DUP2 DUP6 PUSH2 0x2088 JUMP JUMPDEST SWAP4 POP PUSH2 0x20BE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x144C JUMP JUMPDEST PUSH2 0x20C7 DUP2 PUSH2 0x147F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x20E7 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x20F4 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x2101 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1696 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2113 DUP2 DUP5 PUSH2 0x2099 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x212D DUP2 PUSH2 0x13A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2149 JUMPI PUSH2 0x2148 PUSH2 0x136B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2157 DUP5 DUP3 DUP6 ADD PUSH2 0x211E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E 0xD4 SLT DUP16 PUSH6 0xEB8B255EAC00 TIMESTAMP 0xDE BLOCKHASH SWAP15 PUSH31 0xE609866E4CBDA6165C02F1F921184E5E64736F6C6343000809003300000000 ","sourceMap":"628:13718:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2470:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3467:407;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:327;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5005:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2632:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5250:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2800:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2470:98::-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;3604:11;;:2;:11;;;;3596:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3701:5;3685:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3710:37;3727:5;3734:12;:10;:12::i;:::-;3710:16;:37::i;:::-;3685:62;3664:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3537:337;3467:407;;:::o;4612:327::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;:::-;4612:327;;;:::o;5005:179::-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;:::-;5005:179;;;:::o;2190:218::-;2262:7;2281:13;2297:7;:16;2305:7;2297:16;;;;;;;;;;;;;;;;;;;;;2281:32;;2348:1;2331:19;;:5;:19;;;;2323:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2396:5;2389:12;;;2190:218;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2632:102::-;2688:13;2720:7;2713:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2632:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5250:315::-;5418:41;5437:12;:10;:12::i;:::-;5451:7;5418:18;:41::i;:::-;5410:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;2800:276::-;2873:13;2898:23;2913:7;2898:14;:23::i;:::-;2932:21;2956:10;:8;:10::i;:::-;2932:34;;3007:1;2989:7;2983:21;:25;:86;;;;;;;;;;;;;;;;;3035:7;3044:18;:7;:16;:18::i;:::-;3018:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2983:86;2976:93;;;2800:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:11:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;11657:133:3:-;11738:16;11746:7;11738;:16::i;:::-;11730:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;11657:133;:::o;640:96:9:-;693:7;719:10;712:17;;640:96;:::o;10959:171:3:-;11060:2;11033:15;:24;11049:7;11033:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11115:7;11111:2;11077:46;;11086:23;11101:7;11086:14;:23::i;:::-;11077:46;;;;;;;;;;;;10959:171;;:::o;7317:261::-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;7483:16;;:7;:16;;;:52;;;;7503:32;7520:5;7527:7;7503:16;:32::i;:::-;7483:52;:87;;;;7563:7;7539:31;;:20;7551:7;7539:11;:20::i;:::-;:31;;;7483:87;7475:96;;;7317:261;;;;:::o;10242:605::-;10396:4;10369:31;;:23;10384:7;10369:14;:23::i;:::-;:31;;;10361:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10474:1;10460:16;;:2;:16;;;;10452:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10528:39;10549:4;10555:2;10559:7;10528:20;:39::i;:::-;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;10688:1;10669:9;:15;10679:4;10669:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10716:1;10699:9;:13;10709:2;10699:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10746:2;10727:7;:16;10735:7;10727:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10783:7;10779:2;10764:27;;10773:4;10764:27;;;;;;;;;;;;10802:38;10822:4;10828:2;10832:7;10802:19;:38::i;:::-;10242:605;;;:::o;11266:307::-;11416:8;11407:17;;:5;:17;;;;11399:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;11502:8;11464:18;:25;11483:5;11464:25;;;;;;;;;;;;;;;:35;11490:8;11464:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;11547:8;11525:41;;11540:5;11525:41;;;11557:8;11525:41;;;;;;:::i;:::-;;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6426:305;;;;:::o;3318:92::-;3369:13;3394:9;;;;;;;;;;;;;;3318:92;:::o;392:703:10:-;448:13;674:1;665:5;:10;661:51;;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;7034:125:3:-;7099:4;7150:1;7122:30;;:7;:16;7130:7;7122:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7115:37;;7034:125;;;:::o;13729:122::-;;;;:::o;14223:121::-;;;;:::o;12342:831::-;12491:4;12511:15;:2;:13;;;:15::i;:::-;12507:660;;;12562:2;12546:36;;;12583:12;:10;:12::i;:::-;12597:4;12603:7;12612:4;12546:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12801:1;12784:6;:13;:18;12780:321;;;12826:60;;;;;;;;;;:::i;:::-;;;;;;;;12780:321;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;12677:41;;;12667:51;;;:6;:51;;;;12660:58;;;;;12507:660;13152:4;13145:11;;12342:831;;;;;;;:::o;1175:320:8:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:619::-;5015:6;5023;5031;5080:2;5068:9;5059:7;5055:23;5051:32;5048:119;;;5086:79;;:::i;:::-;5048:119;5206:1;5231:53;5276:7;5267:6;5256:9;5252:22;5231:53;:::i;:::-;5221:63;;5177:117;5333:2;5359:53;5404:7;5395:6;5384:9;5380:22;5359:53;:::i;:::-;5349:63;;5304:118;5461:2;5487:53;5532:7;5523:6;5512:9;5508:22;5487:53;:::i;:::-;5477:63;;5432:118;4938:619;;;;;:::o;5563:329::-;5622:6;5671:2;5659:9;5650:7;5646:23;5642:32;5639:119;;;5677:79;;:::i;:::-;5639:119;5797:1;5822:53;5867:7;5858:6;5847:9;5843:22;5822:53;:::i;:::-;5812:63;;5768:117;5563:329;;;;:::o;5898:118::-;5985:24;6003:5;5985:24;:::i;:::-;5980:3;5973:37;5898:118;;:::o;6022:222::-;6115:4;6153:2;6142:9;6138:18;6130:26;;6166:71;6234:1;6223:9;6219:17;6210:6;6166:71;:::i;:::-;6022:222;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:220::-;11166:34;11162:1;11154:6;11150:14;11143:58;11235:3;11230:2;11222:6;11218:15;11211:28;11026:220;:::o;11252:366::-;11394:3;11415:67;11479:2;11474:3;11415:67;:::i;:::-;11408:74;;11491:93;11580:3;11491:93;:::i;:::-;11609:2;11604:3;11600:12;11593:19;;11252:366;;;:::o;11624:419::-;11790:4;11828:2;11817:9;11813:18;11805:26;;11877:9;11871:4;11867:20;11863:1;11852:9;11848:17;11841:47;11905:131;12031:4;11905:131;:::i;:::-;11897:139;;11624:419;;;:::o;12049:249::-;12189:34;12185:1;12177:6;12173:14;12166:58;12258:32;12253:2;12245:6;12241:15;12234:57;12049:249;:::o;12304:366::-;12446:3;12467:67;12531:2;12526:3;12467:67;:::i;:::-;12460:74;;12543:93;12632:3;12543:93;:::i;:::-;12661:2;12656:3;12652:12;12645:19;;12304:366;;;:::o;12676:419::-;12842:4;12880:2;12869:9;12865:18;12857:26;;12929:9;12923:4;12919:20;12915:1;12904:9;12900:17;12893:47;12957:131;13083:4;12957:131;:::i;:::-;12949:139;;12676:419;;;:::o;13101:233::-;13241:34;13237:1;13229:6;13225:14;13218:58;13310:16;13305:2;13297:6;13293:15;13286:41;13101:233;:::o;13340:366::-;13482:3;13503:67;13567:2;13562:3;13503:67;:::i;:::-;13496:74;;13579:93;13668:3;13579:93;:::i;:::-;13697:2;13692:3;13688:12;13681:19;;13340:366;;;:::o;13712:419::-;13878:4;13916:2;13905:9;13901:18;13893:26;;13965:9;13959:4;13955:20;13951:1;13940:9;13936:17;13929:47;13993:131;14119:4;13993:131;:::i;:::-;13985:139;;13712:419;;;:::o;14137:174::-;14277:26;14273:1;14265:6;14261:14;14254:50;14137:174;:::o;14317:366::-;14459:3;14480:67;14544:2;14539:3;14480:67;:::i;:::-;14473:74;;14556:93;14645:3;14556:93;:::i;:::-;14674:2;14669:3;14665:12;14658:19;;14317:366;;;:::o;14689:419::-;14855:4;14893:2;14882:9;14878:18;14870:26;;14942:9;14936:4;14932:20;14928:1;14917:9;14913:17;14906:47;14970:131;15096:4;14970:131;:::i;:::-;14962:139;;14689:419;;;:::o;15114:228::-;15254:34;15250:1;15242:6;15238:14;15231:58;15323:11;15318:2;15310:6;15306:15;15299:36;15114:228;:::o;15348:366::-;15490:3;15511:67;15575:2;15570:3;15511:67;:::i;:::-;15504:74;;15587:93;15676:3;15587:93;:::i;:::-;15705:2;15700:3;15696:12;15689:19;;15348:366;;;:::o;15720:419::-;15886:4;15924:2;15913:9;15909:18;15901:26;;15973:9;15967:4;15963:20;15959:1;15948:9;15944:17;15937:47;16001:131;16127:4;16001:131;:::i;:::-;15993:139;;15720:419;;;:::o;16145:148::-;16247:11;16284:3;16269:18;;16145:148;;;;:::o;16299:377::-;16405:3;16433:39;16466:5;16433:39;:::i;:::-;16488:89;16570:6;16565:3;16488:89;:::i;:::-;16481:96;;16586:52;16631:6;16626:3;16619:4;16612:5;16608:16;16586:52;:::i;:::-;16663:6;16658:3;16654:16;16647:23;;16409:267;16299:377;;;;:::o;16682:435::-;16862:3;16884:95;16975:3;16966:6;16884:95;:::i;:::-;16877:102;;16996:95;17087:3;17078:6;16996:95;:::i;:::-;16989:102;;17108:3;17101:10;;16682:435;;;;;:::o;17123:224::-;17263:34;17259:1;17251:6;17247:14;17240:58;17332:7;17327:2;17319:6;17315:15;17308:32;17123:224;:::o;17353:366::-;17495:3;17516:67;17580:2;17575:3;17516:67;:::i;:::-;17509:74;;17592:93;17681:3;17592:93;:::i;:::-;17710:2;17705:3;17701:12;17694:19;;17353:366;;;:::o;17725:419::-;17891:4;17929:2;17918:9;17914:18;17906:26;;17978:9;17972:4;17968:20;17964:1;17953:9;17949:17;17942:47;18006:131;18132:4;18006:131;:::i;:::-;17998:139;;17725:419;;;:::o;18150:223::-;18290:34;18286:1;18278:6;18274:14;18267:58;18359:6;18354:2;18346:6;18342:15;18335:31;18150:223;:::o;18379:366::-;18521:3;18542:67;18606:2;18601:3;18542:67;:::i;:::-;18535:74;;18618:93;18707:3;18618:93;:::i;:::-;18736:2;18731:3;18727:12;18720:19;;18379:366;;;:::o;18751:419::-;18917:4;18955:2;18944:9;18940:18;18932:26;;19004:9;18998:4;18994:20;18990:1;18979:9;18975:17;18968:47;19032:131;19158:4;19032:131;:::i;:::-;19024:139;;18751:419;;;:::o;19176:180::-;19224:77;19221:1;19214:88;19321:4;19318:1;19311:15;19345:4;19342:1;19335:15;19362:191;19402:4;19422:20;19440:1;19422:20;:::i;:::-;19417:25;;19456:20;19474:1;19456:20;:::i;:::-;19451:25;;19495:1;19492;19489:8;19486:34;;;19500:18;;:::i;:::-;19486:34;19545:1;19542;19538:9;19530:17;;19362:191;;;;:::o;19559:305::-;19599:3;19618:20;19636:1;19618:20;:::i;:::-;19613:25;;19652:20;19670:1;19652:20;:::i;:::-;19647:25;;19806:1;19738:66;19734:74;19731:1;19728:81;19725:107;;;19812:18;;:::i;:::-;19725:107;19856:1;19853;19849:9;19842:16;;19559:305;;;;:::o;19870:175::-;20010:27;20006:1;19998:6;19994:14;19987:51;19870:175;:::o;20051:366::-;20193:3;20214:67;20278:2;20273:3;20214:67;:::i;:::-;20207:74;;20290:93;20379:3;20290:93;:::i;:::-;20408:2;20403:3;20399:12;20392:19;;20051:366;;;:::o;20423:419::-;20589:4;20627:2;20616:9;20612:18;20604:26;;20676:9;20670:4;20666:20;20662:1;20651:9;20647:17;20640:47;20704:131;20830:4;20704:131;:::i;:::-;20696:139;;20423:419;;;:::o;20848:237::-;20988:34;20984:1;20976:6;20972:14;20965:58;21057:20;21052:2;21044:6;21040:15;21033:45;20848:237;:::o;21091:366::-;21233:3;21254:67;21318:2;21313:3;21254:67;:::i;:::-;21247:74;;21330:93;21419:3;21330:93;:::i;:::-;21448:2;21443:3;21439:12;21432:19;;21091:366;;;:::o;21463:419::-;21629:4;21667:2;21656:9;21652:18;21644:26;;21716:9;21710:4;21706:20;21702:1;21691:9;21687:17;21680:47;21744:131;21870:4;21744:131;:::i;:::-;21736:139;;21463:419;;;:::o;21888:233::-;21927:3;21950:24;21968:5;21950:24;:::i;:::-;21941:33;;21996:66;21989:5;21986:77;21983:103;;;22066:18;;:::i;:::-;21983:103;22113:1;22106:5;22102:13;22095:20;;21888:233;;;:::o;22127:180::-;22175:77;22172:1;22165:88;22272:4;22269:1;22262:15;22296:4;22293:1;22286:15;22313:185;22353:1;22370:20;22388:1;22370:20;:::i;:::-;22365:25;;22404:20;22422:1;22404:20;:::i;:::-;22399:25;;22443:1;22433:35;;22448:18;;:::i;:::-;22433:35;22490:1;22487;22483:9;22478:14;;22313:185;;;;:::o;22504:176::-;22536:1;22553:20;22571:1;22553:20;:::i;:::-;22548:25;;22587:20;22605:1;22587:20;:::i;:::-;22582:25;;22626:1;22616:35;;22631:18;;:::i;:::-;22616:35;22672:1;22669;22665:9;22660:14;;22504:176;;;;:::o;22686:180::-;22734:77;22731:1;22724:88;22831:4;22828:1;22821:15;22855:4;22852:1;22845:15;22872:98;22923:6;22957:5;22951:12;22941:22;;22872:98;;;:::o;22976:168::-;23059:11;23093:6;23088:3;23081:19;23133:4;23128:3;23124:14;23109:29;;22976:168;;;;:::o;23150:360::-;23236:3;23264:38;23296:5;23264:38;:::i;:::-;23318:70;23381:6;23376:3;23318:70;:::i;:::-;23311:77;;23397:52;23442:6;23437:3;23430:4;23423:5;23419:16;23397:52;:::i;:::-;23474:29;23496:6;23474:29;:::i;:::-;23469:3;23465:39;23458:46;;23240:270;23150:360;;;;:::o;23516:640::-;23711:4;23749:3;23738:9;23734:19;23726:27;;23763:71;23831:1;23820:9;23816:17;23807:6;23763:71;:::i;:::-;23844:72;23912:2;23901:9;23897:18;23888:6;23844:72;:::i;:::-;23926;23994:2;23983:9;23979:18;23970:6;23926:72;:::i;:::-;24045:9;24039:4;24035:20;24030:2;24019:9;24015:18;24008:48;24073:76;24144:4;24135:6;24073:76;:::i;:::-;24065:84;;23516:640;;;;;;;:::o;24162:141::-;24218:5;24249:6;24243:13;24234:22;;24265:32;24291:5;24265:32;:::i;:::-;24162:141;;;;:::o;24309:349::-;24378:6;24427:2;24415:9;24406:7;24402:23;24398:32;24395:119;;;24433:79;;:::i;:::-;24395:119;24553:1;24578:63;24633:7;24624:6;24613:9;24609:22;24578:63;:::i;:::-;24568:73;;24524:127;24309:349;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1719600","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2924","getApproved(uint256)":"5234","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"2982","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"774","symbol()":"infinite","tokenURI(uint256)":"3424","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"2269","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_requireMinted(uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":292,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":294,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":298,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":302,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":306,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":312,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC721 token with storage based token URI management.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":292,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":294,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":298,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":302,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":306,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":312,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1280,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004008c2120df1d8a05a66d978bee00676de89aecfcb50953de5356e50af930ab64736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV STOP DUP13 0x21 KECCAK256 0xDF SAR DUP11 SDIV 0xA6 PUSH14 0x978BEE00676DE89AECFCB50953DE MSTORE8 JUMP 0xE5 EXP 0xF9 ADDRESS 0xAB PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"194:8111:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004008c2120df1d8a05a66d978bee00676de89aecfcb50953de5356e50af930ab64736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV STOP DUP13 0x21 KECCAK256 0xDF SAR DUP11 SDIV 0xA6 PUSH14 0x978BEE00676DE89AECFCB50953DE MSTORE8 JUMP 0xE5 EXP 0xF9 ADDRESS 0xAB PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"194:8111:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122062a234370ae5b1daffdba7480ca0e12eccc1a3e007a95658b726f32fb3dcbbd864736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0xA23437 EXP 0xE5 0xB1 0xDA SELFDESTRUCT 0xDB 0xA7 BASEFEE 0xC LOG0 0xE1 0x2E 0xCC 0xC1 LOG3 0xE0 SMOD 0xA9 JUMP PC 0xB7 0x26 RETURN 0x2F 0xB3 0xDC 0xBB 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"161:2235:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122062a234370ae5b1daffdba7480ca0e12eccc1a3e007a95658b726f32fb3dcbbd864736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0xA23437 EXP 0xE5 0xB1 0xDA SELFDESTRUCT 0xDB 0xA7 BASEFEE 0xC LOG0 0xE1 0x2E 0xCC 0xC1 LOG3 0xE0 SMOD 0xA9 JUMP PC 0xB7 0x26 RETURN 0x2F 0xB3 0xDC 0xBB 0xD8 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"161:2235:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/RandomipfsNft.sol":{"RandomIpfsNft":{"abi":[{"inputs":[{"internalType":"address","name":"vrfCoordinatorV2","type":"address"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"bytes32","name":"gasLane","type":"bytes32"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"string[]","name":"dogTokenUris","type":"string[]"},{"internalType":"uint256","name":"mintFee","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[],"name":"RandomIpfsNft__NeedMoreETHSent","type":"error"},{"inputs":[],"name":"RandomIpfsNft__RangeOutOfBounds","type":"error"},{"inputs":[],"name":"RandomIpfsNft__TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"enum RandomIpfsNft.Breed","name":"dogBreed","type":"uint8"},{"indexed":false,"internalType":"address","name":"minter","type":"address"}],"name":"NftMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"address","name":"requester","type":"address"}],"name":"NftRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"moddedRng","type":"uint256"}],"name":"getBreedFromModdedRng","outputs":[{"internalType":"enum RandomIpfsNft.Breed","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getChanceArray","outputs":[{"internalType":"uint256[3]","name":"","type":"uint256[3]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getDogTokenUris","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMintFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestNft","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_requestIdToSender","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"s_tokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_177":{"entryPoint":null,"id":177,"parameterSlots":0,"returnSlots":0},"@_21":{"entryPoint":null,"id":21,"parameterSlots":1,"returnSlots":0},"@_2112":{"entryPoint":null,"id":2112,"parameterSlots":6,"returnSlots":0},"@_329":{"entryPoint":null,"id":329,"parameterSlots":2,"returnSlots":0},"@_msgSender_1726":{"entryPoint":457,"id":1726,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_265":{"entryPoint":465,"id":265,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":1811,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1685,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1150,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory":{"entryPoint":1960,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":1278,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1760,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":2047,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":1343,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":1219,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32t_array$_t_string_memory_ptr_$dyn_memory_ptrt_uint256_fromMemory":{"entryPoint":2070,"id":null,"parameterSlots":2,"returnSlots":6},"allocate_memory":{"entryPoint":1489,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1052,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr":{"entryPoint":1520,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1577,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":1104,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1242,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1072,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2011,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":1301,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":1173,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1631,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2304,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1435,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":2257,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1388,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1366,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":1567,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1572,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1067,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1062,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1371,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":1124,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":1252,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2021,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":1317,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":1193,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8435:14","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:14","statements":[{"nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:14"},"nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:14"},"nodeType":"YulFunctionCall","src":"187:12:14"},"nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nodeType":"YulBlock","src":"379:81:14","statements":[{"nodeType":"YulAssignment","src":"389:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:14"},"nodeType":"YulFunctionCall","src":"400:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:14","type":""}],"src":"334:126:14"},{"body":{"nodeType":"YulBlock","src":"511:51:14","statements":[{"nodeType":"YulAssignment","src":"521:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:14"},"nodeType":"YulFunctionCall","src":"532:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:14","type":""}],"src":"466:96:14"},{"body":{"nodeType":"YulBlock","src":"611:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:14"},"nodeType":"YulFunctionCall","src":"670:12:14"},"nodeType":"YulExpressionStatement","src":"670:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:14"},"nodeType":"YulFunctionCall","src":"641:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:14"},"nodeType":"YulFunctionCall","src":"631:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:14"},"nodeType":"YulFunctionCall","src":"624:43:14"},"nodeType":"YulIf","src":"621:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:14","type":""}],"src":"568:122:14"},{"body":{"nodeType":"YulBlock","src":"759:80:14","statements":[{"nodeType":"YulAssignment","src":"769:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:14"},"nodeType":"YulFunctionCall","src":"778:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:14"},"nodeType":"YulFunctionCall","src":"800:33:14"},"nodeType":"YulExpressionStatement","src":"800:33:14"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:14","type":""}],"src":"696:143:14"},{"body":{"nodeType":"YulBlock","src":"889:57:14","statements":[{"nodeType":"YulAssignment","src":"899:41:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"914:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"921:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"910:3:14"},"nodeType":"YulFunctionCall","src":"910:30:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"899:7:14"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"871:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"881:7:14","type":""}],"src":"845:101:14"},{"body":{"nodeType":"YulBlock","src":"994:78:14","statements":[{"body":{"nodeType":"YulBlock","src":"1050:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1059:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1062:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1052:6:14"},"nodeType":"YulFunctionCall","src":"1052:12:14"},"nodeType":"YulExpressionStatement","src":"1052:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1017:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1041:5:14"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"1024:16:14"},"nodeType":"YulFunctionCall","src":"1024:23:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1014:2:14"},"nodeType":"YulFunctionCall","src":"1014:34:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1007:6:14"},"nodeType":"YulFunctionCall","src":"1007:42:14"},"nodeType":"YulIf","src":"1004:62:14"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"987:5:14","type":""}],"src":"952:120:14"},{"body":{"nodeType":"YulBlock","src":"1140:79:14","statements":[{"nodeType":"YulAssignment","src":"1150:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1165:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1159:5:14"},"nodeType":"YulFunctionCall","src":"1159:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1150:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1207:5:14"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"1181:25:14"},"nodeType":"YulFunctionCall","src":"1181:32:14"},"nodeType":"YulExpressionStatement","src":"1181:32:14"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1118:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1126:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1134:5:14","type":""}],"src":"1078:141:14"},{"body":{"nodeType":"YulBlock","src":"1270:32:14","statements":[{"nodeType":"YulAssignment","src":"1280:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"1291:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1280:7:14"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1252:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1262:7:14","type":""}],"src":"1225:77:14"},{"body":{"nodeType":"YulBlock","src":"1351:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"1408:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1417:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1420:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1410:6:14"},"nodeType":"YulFunctionCall","src":"1410:12:14"},"nodeType":"YulExpressionStatement","src":"1410:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1374:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1399:5:14"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1381:17:14"},"nodeType":"YulFunctionCall","src":"1381:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1371:2:14"},"nodeType":"YulFunctionCall","src":"1371:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1364:6:14"},"nodeType":"YulFunctionCall","src":"1364:43:14"},"nodeType":"YulIf","src":"1361:63:14"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1344:5:14","type":""}],"src":"1308:122:14"},{"body":{"nodeType":"YulBlock","src":"1499:80:14","statements":[{"nodeType":"YulAssignment","src":"1509:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1524:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1518:5:14"},"nodeType":"YulFunctionCall","src":"1518:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1509:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1567:5:14"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1540:26:14"},"nodeType":"YulFunctionCall","src":"1540:33:14"},"nodeType":"YulExpressionStatement","src":"1540:33:14"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1477:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1485:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1493:5:14","type":""}],"src":"1436:143:14"},{"body":{"nodeType":"YulBlock","src":"1629:49:14","statements":[{"nodeType":"YulAssignment","src":"1639:33:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1654:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"1661:10:14","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1650:3:14"},"nodeType":"YulFunctionCall","src":"1650:22:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1639:7:14"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1611:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1621:7:14","type":""}],"src":"1585:93:14"},{"body":{"nodeType":"YulBlock","src":"1726:78:14","statements":[{"body":{"nodeType":"YulBlock","src":"1782:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1791:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1794:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1784:6:14"},"nodeType":"YulFunctionCall","src":"1784:12:14"},"nodeType":"YulExpressionStatement","src":"1784:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1749:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:14"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"1756:16:14"},"nodeType":"YulFunctionCall","src":"1756:23:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1746:2:14"},"nodeType":"YulFunctionCall","src":"1746:34:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1739:6:14"},"nodeType":"YulFunctionCall","src":"1739:42:14"},"nodeType":"YulIf","src":"1736:62:14"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1719:5:14","type":""}],"src":"1684:120:14"},{"body":{"nodeType":"YulBlock","src":"1872:79:14","statements":[{"nodeType":"YulAssignment","src":"1882:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1897:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1891:5:14"},"nodeType":"YulFunctionCall","src":"1891:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1882:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1939:5:14"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"1913:25:14"},"nodeType":"YulFunctionCall","src":"1913:32:14"},"nodeType":"YulExpressionStatement","src":"1913:32:14"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1850:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"1858:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1866:5:14","type":""}],"src":"1810:141:14"},{"body":{"nodeType":"YulBlock","src":"2046:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2063:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2066:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2056:6:14"},"nodeType":"YulFunctionCall","src":"2056:12:14"},"nodeType":"YulExpressionStatement","src":"2056:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1957:117:14"},{"body":{"nodeType":"YulBlock","src":"2128:54:14","statements":[{"nodeType":"YulAssignment","src":"2138:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2156:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2163:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2152:3:14"},"nodeType":"YulFunctionCall","src":"2152:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2172:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2168:3:14"},"nodeType":"YulFunctionCall","src":"2168:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2148:3:14"},"nodeType":"YulFunctionCall","src":"2148:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2138:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2111:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2121:6:14","type":""}],"src":"2080:102:14"},{"body":{"nodeType":"YulBlock","src":"2216:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2226:6:14"},"nodeType":"YulFunctionCall","src":"2226:88:14"},"nodeType":"YulExpressionStatement","src":"2226:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2330:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2333:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2323:6:14"},"nodeType":"YulFunctionCall","src":"2323:15:14"},"nodeType":"YulExpressionStatement","src":"2323:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2354:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2357:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2347:6:14"},"nodeType":"YulFunctionCall","src":"2347:15:14"},"nodeType":"YulExpressionStatement","src":"2347:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2188:180:14"},{"body":{"nodeType":"YulBlock","src":"2417:238:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2427:58:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2449:6:14"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2479:4:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2457:21:14"},"nodeType":"YulFunctionCall","src":"2457:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2445:3:14"},"nodeType":"YulFunctionCall","src":"2445:40:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2431:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2596:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2598:16:14"},"nodeType":"YulFunctionCall","src":"2598:18:14"},"nodeType":"YulExpressionStatement","src":"2598:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2539:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"2551:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2536:2:14"},"nodeType":"YulFunctionCall","src":"2536:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2575:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2587:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2572:2:14"},"nodeType":"YulFunctionCall","src":"2572:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2533:2:14"},"nodeType":"YulFunctionCall","src":"2533:62:14"},"nodeType":"YulIf","src":"2530:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2634:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2638:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2627:6:14"},"nodeType":"YulFunctionCall","src":"2627:22:14"},"nodeType":"YulExpressionStatement","src":"2627:22:14"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2403:6:14","type":""},{"name":"size","nodeType":"YulTypedName","src":"2411:4:14","type":""}],"src":"2374:281:14"},{"body":{"nodeType":"YulBlock","src":"2702:88:14","statements":[{"nodeType":"YulAssignment","src":"2712:30:14","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2722:18:14"},"nodeType":"YulFunctionCall","src":"2722:20:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2712:6:14"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2771:6:14"},{"name":"size","nodeType":"YulIdentifier","src":"2779:4:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2751:19:14"},"nodeType":"YulFunctionCall","src":"2751:33:14"},"nodeType":"YulExpressionStatement","src":"2751:33:14"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2686:4:14","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2695:6:14","type":""}],"src":"2661:129:14"},{"body":{"nodeType":"YulBlock","src":"2888:229:14","statements":[{"body":{"nodeType":"YulBlock","src":"2993:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2995:16:14"},"nodeType":"YulFunctionCall","src":"2995:18:14"},"nodeType":"YulExpressionStatement","src":"2995:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2965:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"2973:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2962:2:14"},"nodeType":"YulFunctionCall","src":"2962:30:14"},"nodeType":"YulIf","src":"2959:56:14"},{"nodeType":"YulAssignment","src":"3025:25:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3037:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3045:4:14","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3033:3:14"},"nodeType":"YulFunctionCall","src":"3033:17:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3025:4:14"}]},{"nodeType":"YulAssignment","src":"3087:23:14","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3099:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"3105:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3095:3:14"},"nodeType":"YulFunctionCall","src":"3095:15:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3087:4:14"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2872:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2883:4:14","type":""}],"src":"2796:321:14"},{"body":{"nodeType":"YulBlock","src":"3212:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3229:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3232:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3222:6:14"},"nodeType":"YulFunctionCall","src":"3222:12:14"},"nodeType":"YulExpressionStatement","src":"3222:12:14"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"3123:117:14"},{"body":{"nodeType":"YulBlock","src":"3335:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3352:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3355:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3345:6:14"},"nodeType":"YulFunctionCall","src":"3345:12:14"},"nodeType":"YulExpressionStatement","src":"3345:12:14"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3246:117:14"},{"body":{"nodeType":"YulBlock","src":"3436:241:14","statements":[{"body":{"nodeType":"YulBlock","src":"3541:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3543:16:14"},"nodeType":"YulFunctionCall","src":"3543:18:14"},"nodeType":"YulExpressionStatement","src":"3543:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3513:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"3521:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:14"},"nodeType":"YulFunctionCall","src":"3510:30:14"},"nodeType":"YulIf","src":"3507:56:14"},{"nodeType":"YulAssignment","src":"3573:37:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3603:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3581:21:14"},"nodeType":"YulFunctionCall","src":"3581:29:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3573:4:14"}]},{"nodeType":"YulAssignment","src":"3647:23:14","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3659:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"3665:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3655:3:14"},"nodeType":"YulFunctionCall","src":"3655:15:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3647:4:14"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3420:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3431:4:14","type":""}],"src":"3369:308:14"},{"body":{"nodeType":"YulBlock","src":"3732:258:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3742:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3751:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3746:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"3811:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3836:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"3841:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3832:3:14"},"nodeType":"YulFunctionCall","src":"3832:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3855:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"3860:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3851:3:14"},"nodeType":"YulFunctionCall","src":"3851:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3845:5:14"},"nodeType":"YulFunctionCall","src":"3845:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3825:6:14"},"nodeType":"YulFunctionCall","src":"3825:39:14"},"nodeType":"YulExpressionStatement","src":"3825:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3772:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"3775:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3769:2:14"},"nodeType":"YulFunctionCall","src":"3769:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3783:19:14","statements":[{"nodeType":"YulAssignment","src":"3785:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3794:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"3797:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3790:3:14"},"nodeType":"YulFunctionCall","src":"3790:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3785:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"3765:3:14","statements":[]},"src":"3761:113:14"},{"body":{"nodeType":"YulBlock","src":"3908:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3958:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"3963:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3954:3:14"},"nodeType":"YulFunctionCall","src":"3954:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"3972:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3947:6:14"},"nodeType":"YulFunctionCall","src":"3947:27:14"},"nodeType":"YulExpressionStatement","src":"3947:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3889:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"3892:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3886:2:14"},"nodeType":"YulFunctionCall","src":"3886:13:14"},"nodeType":"YulIf","src":"3883:101:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3714:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3719:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"3724:6:14","type":""}],"src":"3683:307:14"},{"body":{"nodeType":"YulBlock","src":"4091:326:14","statements":[{"nodeType":"YulAssignment","src":"4101:75:14","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4168:6:14"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4126:41:14"},"nodeType":"YulFunctionCall","src":"4126:49:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4110:15:14"},"nodeType":"YulFunctionCall","src":"4110:66:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4101:5:14"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4192:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"4199:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4185:6:14"},"nodeType":"YulFunctionCall","src":"4185:21:14"},"nodeType":"YulExpressionStatement","src":"4185:21:14"},{"nodeType":"YulVariableDeclaration","src":"4215:27:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4230:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"4237:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4226:3:14"},"nodeType":"YulFunctionCall","src":"4226:16:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4219:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4280:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4282:77:14"},"nodeType":"YulFunctionCall","src":"4282:79:14"},"nodeType":"YulExpressionStatement","src":"4282:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4261:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"4266:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4257:3:14"},"nodeType":"YulFunctionCall","src":"4257:16:14"},{"name":"end","nodeType":"YulIdentifier","src":"4275:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4254:2:14"},"nodeType":"YulFunctionCall","src":"4254:25:14"},"nodeType":"YulIf","src":"4251:112:14"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4394:3:14"},{"name":"dst","nodeType":"YulIdentifier","src":"4399:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"4404:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4372:21:14"},"nodeType":"YulFunctionCall","src":"4372:39:14"},"nodeType":"YulExpressionStatement","src":"4372:39:14"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4064:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"4069:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"4077:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4085:5:14","type":""}],"src":"3996:421:14"},{"body":{"nodeType":"YulBlock","src":"4510:282:14","statements":[{"body":{"nodeType":"YulBlock","src":"4559:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4561:77:14"},"nodeType":"YulFunctionCall","src":"4561:79:14"},"nodeType":"YulExpressionStatement","src":"4561:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4538:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4546:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4534:3:14"},"nodeType":"YulFunctionCall","src":"4534:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"4553:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4530:3:14"},"nodeType":"YulFunctionCall","src":"4530:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4523:6:14"},"nodeType":"YulFunctionCall","src":"4523:35:14"},"nodeType":"YulIf","src":"4520:122:14"},{"nodeType":"YulVariableDeclaration","src":"4651:27:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4671:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4665:5:14"},"nodeType":"YulFunctionCall","src":"4665:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4655:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4687:99:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4759:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"4767:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:14"},"nodeType":"YulFunctionCall","src":"4755:17:14"},{"name":"length","nodeType":"YulIdentifier","src":"4774:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"4782:3:14"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4696:58:14"},"nodeType":"YulFunctionCall","src":"4696:90:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4687:5:14"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4488:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"4496:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4504:5:14","type":""}],"src":"4437:355:14"},{"body":{"nodeType":"YulBlock","src":"4937:837:14","statements":[{"nodeType":"YulAssignment","src":"4947:100:14","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5039:6:14"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4972:66:14"},"nodeType":"YulFunctionCall","src":"4972:74:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4956:15:14"},"nodeType":"YulFunctionCall","src":"4956:91:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4947:5:14"}]},{"nodeType":"YulVariableDeclaration","src":"5056:16:14","value":{"name":"array","nodeType":"YulIdentifier","src":"5067:5:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"5060:3:14","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5089:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"5096:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5082:6:14"},"nodeType":"YulFunctionCall","src":"5082:21:14"},"nodeType":"YulExpressionStatement","src":"5082:21:14"},{"nodeType":"YulAssignment","src":"5112:23:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"5123:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"5130:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5119:3:14"},"nodeType":"YulFunctionCall","src":"5119:16:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5112:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"5145:44:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5163:6:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5175:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5183:4:14","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5171:3:14"},"nodeType":"YulFunctionCall","src":"5171:17:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5159:3:14"},"nodeType":"YulFunctionCall","src":"5159:30:14"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5149:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"5217:103:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"5231:77:14"},"nodeType":"YulFunctionCall","src":"5231:79:14"},"nodeType":"YulExpressionStatement","src":"5231:79:14"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5204:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"5212:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5201:2:14"},"nodeType":"YulFunctionCall","src":"5201:15:14"},"nodeType":"YulIf","src":"5198:122:14"},{"body":{"nodeType":"YulBlock","src":"5405:363:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5420:29:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5445:3:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5439:5:14"},"nodeType":"YulFunctionCall","src":"5439:10:14"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"5424:11:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"5501:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5503:77:14"},"nodeType":"YulFunctionCall","src":"5503:79:14"},"nodeType":"YulExpressionStatement","src":"5503:79:14"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"5468:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"5481:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5465:2:14"},"nodeType":"YulFunctionCall","src":"5465:35:14"},"nodeType":"YulIf","src":"5462:122:14"},{"nodeType":"YulVariableDeclaration","src":"5597:42:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5619:6:14"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"5627:11:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5615:3:14"},"nodeType":"YulFunctionCall","src":"5615:24:14"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"5601:10:14","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5660:3:14"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"5707:10:14"},{"name":"end","nodeType":"YulIdentifier","src":"5719:3:14"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"5665:41:14"},"nodeType":"YulFunctionCall","src":"5665:58:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5653:6:14"},"nodeType":"YulFunctionCall","src":"5653:71:14"},"nodeType":"YulExpressionStatement","src":"5653:71:14"},{"nodeType":"YulAssignment","src":"5737:21:14","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5748:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"5753:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5744:3:14"},"nodeType":"YulFunctionCall","src":"5744:14:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5737:3:14"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5358:3:14"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5363:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5355:2:14"},"nodeType":"YulFunctionCall","src":"5355:15:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5371:25:14","statements":[{"nodeType":"YulAssignment","src":"5373:21:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5384:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"5389:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:14"},"nodeType":"YulFunctionCall","src":"5380:14:14"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5373:3:14"}]}]},"pre":{"nodeType":"YulBlock","src":"5333:21:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5335:17:14","value":{"name":"offset","nodeType":"YulIdentifier","src":"5346:6:14"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5339:3:14","type":""}]}]},"src":"5329:439:14"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4907:6:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"4915:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"4923:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4931:5:14","type":""}],"src":"4814:960:14"},{"body":{"nodeType":"YulBlock","src":"5894:307:14","statements":[{"body":{"nodeType":"YulBlock","src":"5943:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5945:77:14"},"nodeType":"YulFunctionCall","src":"5945:79:14"},"nodeType":"YulExpressionStatement","src":"5945:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5922:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"5930:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5918:3:14"},"nodeType":"YulFunctionCall","src":"5918:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"5937:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5914:3:14"},"nodeType":"YulFunctionCall","src":"5914:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5907:6:14"},"nodeType":"YulFunctionCall","src":"5907:35:14"},"nodeType":"YulIf","src":"5904:122:14"},{"nodeType":"YulVariableDeclaration","src":"6035:27:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6055:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6049:5:14"},"nodeType":"YulFunctionCall","src":"6049:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6039:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6071:124:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6168:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6176:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6164:3:14"},"nodeType":"YulFunctionCall","src":"6164:17:14"},{"name":"length","nodeType":"YulIdentifier","src":"6183:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"6191:3:14"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"6080:83:14"},"nodeType":"YulFunctionCall","src":"6080:115:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6071:5:14"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5872:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"5880:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5888:5:14","type":""}],"src":"5796:405:14"},{"body":{"nodeType":"YulBlock","src":"6252:32:14","statements":[{"nodeType":"YulAssignment","src":"6262:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"6273:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6262:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6234:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6244:7:14","type":""}],"src":"6207:77:14"},{"body":{"nodeType":"YulBlock","src":"6333:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"6390:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6399:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6402:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6392:6:14"},"nodeType":"YulFunctionCall","src":"6392:12:14"},"nodeType":"YulExpressionStatement","src":"6392:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6356:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6381:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6363:17:14"},"nodeType":"YulFunctionCall","src":"6363:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6353:2:14"},"nodeType":"YulFunctionCall","src":"6353:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6346:6:14"},"nodeType":"YulFunctionCall","src":"6346:43:14"},"nodeType":"YulIf","src":"6343:63:14"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6326:5:14","type":""}],"src":"6290:122:14"},{"body":{"nodeType":"YulBlock","src":"6481:80:14","statements":[{"nodeType":"YulAssignment","src":"6491:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6506:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6500:5:14"},"nodeType":"YulFunctionCall","src":"6500:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6491:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6549:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6522:26:14"},"nodeType":"YulFunctionCall","src":"6522:33:14"},"nodeType":"YulExpressionStatement","src":"6522:33:14"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6459:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"6467:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6475:5:14","type":""}],"src":"6418:143:14"},{"body":{"nodeType":"YulBlock","src":"6762:1158:14","statements":[{"body":{"nodeType":"YulBlock","src":"6809:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6811:77:14"},"nodeType":"YulFunctionCall","src":"6811:79:14"},"nodeType":"YulExpressionStatement","src":"6811:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6783:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"6792:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6779:3:14"},"nodeType":"YulFunctionCall","src":"6779:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"6804:3:14","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6775:3:14"},"nodeType":"YulFunctionCall","src":"6775:33:14"},"nodeType":"YulIf","src":"6772:120:14"},{"nodeType":"YulBlock","src":"6902:128:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6917:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"6931:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6921:6:14","type":""}]},{"nodeType":"YulAssignment","src":"6946:74:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6992:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"7003:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6988:3:14"},"nodeType":"YulFunctionCall","src":"6988:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7012:7:14"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"6956:31:14"},"nodeType":"YulFunctionCall","src":"6956:64:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6946:6:14"}]}]},{"nodeType":"YulBlock","src":"7040:128:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7055:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7069:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7059:6:14","type":""}]},{"nodeType":"YulAssignment","src":"7085:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7130:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"7141:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7126:3:14"},"nodeType":"YulFunctionCall","src":"7126:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7150:7:14"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"7095:30:14"},"nodeType":"YulFunctionCall","src":"7095:63:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7085:6:14"}]}]},{"nodeType":"YulBlock","src":"7178:129:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7193:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7207:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7197:6:14","type":""}]},{"nodeType":"YulAssignment","src":"7223:74:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7269:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"7280:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7265:3:14"},"nodeType":"YulFunctionCall","src":"7265:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7289:7:14"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"7233:31:14"},"nodeType":"YulFunctionCall","src":"7233:64:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7223:6:14"}]}]},{"nodeType":"YulBlock","src":"7317:128:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7332:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7346:2:14","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7336:6:14","type":""}]},{"nodeType":"YulAssignment","src":"7362:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7407:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"7418:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7403:3:14"},"nodeType":"YulFunctionCall","src":"7403:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7427:7:14"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"7372:30:14"},"nodeType":"YulFunctionCall","src":"7372:63:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7362:6:14"}]}]},{"nodeType":"YulBlock","src":"7455:318:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7470:40:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7494:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7505:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7490:3:14"},"nodeType":"YulFunctionCall","src":"7490:19:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7484:5:14"},"nodeType":"YulFunctionCall","src":"7484:26:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7474:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"7557:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7559:77:14"},"nodeType":"YulFunctionCall","src":"7559:79:14"},"nodeType":"YulExpressionStatement","src":"7559:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7529:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7537:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7526:2:14"},"nodeType":"YulFunctionCall","src":"7526:30:14"},"nodeType":"YulIf","src":"7523:117:14"},{"nodeType":"YulAssignment","src":"7654:109:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7735:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"7746:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7731:3:14"},"nodeType":"YulFunctionCall","src":"7731:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7755:7:14"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"7664:66:14"},"nodeType":"YulFunctionCall","src":"7664:99:14"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7654:6:14"}]}]},{"nodeType":"YulBlock","src":"7783:130:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7798:17:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7812:3:14","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7802:6:14","type":""}]},{"nodeType":"YulAssignment","src":"7829:74:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7875:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"7886:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7871:3:14"},"nodeType":"YulFunctionCall","src":"7871:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7895:7:14"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"7839:31:14"},"nodeType":"YulFunctionCall","src":"7839:64:14"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7829:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32t_array$_t_string_memory_ptr_$dyn_memory_ptrt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6692:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6703:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6715:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6723:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6731:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6739:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6747:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6755:6:14","type":""}],"src":"6567:1353:14"},{"body":{"nodeType":"YulBlock","src":"7954:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7971:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7974:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7964:6:14"},"nodeType":"YulFunctionCall","src":"7964:88:14"},"nodeType":"YulExpressionStatement","src":"7964:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8068:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8071:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8061:6:14"},"nodeType":"YulFunctionCall","src":"8061:15:14"},"nodeType":"YulExpressionStatement","src":"8061:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8092:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8095:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8085:6:14"},"nodeType":"YulFunctionCall","src":"8085:15:14"},"nodeType":"YulExpressionStatement","src":"8085:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7926:180:14"},{"body":{"nodeType":"YulBlock","src":"8163:269:14","statements":[{"nodeType":"YulAssignment","src":"8173:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8187:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"8193:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8183:3:14"},"nodeType":"YulFunctionCall","src":"8183:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8173:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"8204:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8234:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"8240:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8230:3:14"},"nodeType":"YulFunctionCall","src":"8230:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8208:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"8281:51:14","statements":[{"nodeType":"YulAssignment","src":"8295:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8309:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8317:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8305:3:14"},"nodeType":"YulFunctionCall","src":"8305:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8295:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8261:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8254:6:14"},"nodeType":"YulFunctionCall","src":"8254:26:14"},"nodeType":"YulIf","src":"8251:81:14"},{"body":{"nodeType":"YulBlock","src":"8384:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"8398:16:14"},"nodeType":"YulFunctionCall","src":"8398:18:14"},"nodeType":"YulExpressionStatement","src":"8398:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8348:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8371:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8379:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8368:2:14"},"nodeType":"YulFunctionCall","src":"8368:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8345:2:14"},"nodeType":"YulFunctionCall","src":"8345:38:14"},"nodeType":"YulIf","src":"8342:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8147:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8156:6:14","type":""}],"src":"8112:320:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    // string[]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[]\n    function abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32t_array$_t_string_memory_ptr_$dyn_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x431B CODESIZE SUB DUP1 PUSH3 0x431B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x816 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52616E646F6D2049504653204E46540000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52494E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP8 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xF2 SWAP3 SWAP2 SWAP1 PUSH3 0x297 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10B SWAP3 SWAP2 SWAP1 PUSH3 0x297 JUMP JUMPDEST POP POP POP PUSH3 0x12E PUSH3 0x122 PUSH3 0x1C9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1D1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP3 PUSH4 0xFFFFFFFF AND PUSH2 0x100 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH1 0xA SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1B3 SWAP3 SWAP2 SWAP1 PUSH3 0x328 JUMP JUMPDEST POP DUP1 PUSH2 0x120 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP PUSH3 0x936 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x2A5 SWAP1 PUSH3 0x900 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x2C9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x315 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x2E4 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x315 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x315 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x314 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2F7 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x324 SWAP2 SWAP1 PUSH3 0x38F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x37C JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x37B JUMPI DUP3 MLOAD DUP3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x36A SWAP3 SWAP2 SWAP1 PUSH3 0x297 JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x349 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x38B SWAP2 SWAP1 PUSH3 0x3AE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3AA JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x390 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3D2 JUMPI PUSH1 0x0 DUP2 DUP2 PUSH3 0x3C8 SWAP2 SWAP1 PUSH3 0x3D6 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH3 0x3AF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH3 0x3E4 SWAP1 PUSH3 0x900 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH3 0x3F8 JUMPI POP PUSH3 0x419 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH3 0x418 SWAP2 SWAP1 PUSH3 0x38F JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x45D DUP3 PUSH3 0x430 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x46F DUP2 PUSH3 0x450 JUMP JUMPDEST DUP2 EQ PUSH3 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x48F DUP2 PUSH3 0x464 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4B4 DUP2 PUSH3 0x495 JUMP JUMPDEST DUP2 EQ PUSH3 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x4D4 DUP2 PUSH3 0x4A9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4EF DUP2 PUSH3 0x4DA JUMP JUMPDEST DUP2 EQ PUSH3 0x4FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x50F DUP2 PUSH3 0x4E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x530 DUP2 PUSH3 0x515 JUMP JUMPDEST DUP2 EQ PUSH3 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x550 DUP2 PUSH3 0x525 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x5A6 DUP3 PUSH3 0x55B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x5C8 JUMPI PUSH3 0x5C7 PUSH3 0x56C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5DD PUSH3 0x41C JUMP JUMPDEST SWAP1 POP PUSH3 0x5EB DUP3 DUP3 PUSH3 0x59B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x60E JUMPI PUSH3 0x60D PUSH3 0x56C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x647 JUMPI PUSH3 0x646 PUSH3 0x56C JUMP JUMPDEST JUMPDEST PUSH3 0x652 DUP3 PUSH3 0x55B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x67F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x662 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x68F JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6AC PUSH3 0x6A6 DUP5 PUSH3 0x629 JUMP JUMPDEST PUSH3 0x5D1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x6CB JUMPI PUSH3 0x6CA PUSH3 0x624 JUMP JUMPDEST JUMPDEST PUSH3 0x6D8 DUP5 DUP3 DUP6 PUSH3 0x65F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x6F8 JUMPI PUSH3 0x6F7 PUSH3 0x556 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x70A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x695 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x72A PUSH3 0x724 DUP5 PUSH3 0x5F0 JUMP JUMPDEST PUSH3 0x5D1 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x750 JUMPI PUSH3 0x74F PUSH3 0x61F JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x79E JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x779 JUMPI PUSH3 0x778 PUSH3 0x556 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH3 0x788 DUP10 DUP3 PUSH3 0x6E0 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x752 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7C0 JUMPI PUSH3 0x7BF PUSH3 0x556 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x7D2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x713 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7F0 DUP2 PUSH3 0x7DB JUMP JUMPDEST DUP2 EQ PUSH3 0x7FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x810 DUP2 PUSH3 0x7E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x836 JUMPI PUSH3 0x835 PUSH3 0x426 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x846 DUP10 DUP3 DUP11 ADD PUSH3 0x47E JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x859 DUP10 DUP3 DUP11 ADD PUSH3 0x4C3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x86C DUP10 DUP3 DUP11 ADD PUSH3 0x4FE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x87F DUP10 DUP3 DUP11 ADD PUSH3 0x53F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x8A3 JUMPI PUSH3 0x8A2 PUSH3 0x42B JUMP JUMPDEST JUMPDEST PUSH3 0x8B1 DUP10 DUP3 DUP11 ADD PUSH3 0x7A8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x8C4 DUP10 DUP3 DUP11 ADD PUSH3 0x7FF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x919 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x930 JUMPI PUSH3 0x92F PUSH3 0x8D1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x3987 PUSH3 0x994 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xD76 ADD MSTORE PUSH2 0xF85 ADD MSTORE PUSH1 0x0 PUSH2 0x105F ADD MSTORE PUSH1 0x0 PUSH2 0x101B ADD MSTORE PUSH1 0x0 PUSH2 0x103C ADD MSTORE PUSH1 0x0 PUSH2 0xFDF ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x91D ADD MSTORE PUSH2 0x971 ADD MSTORE PUSH2 0x3987 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA36F573B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61A JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0xA36F573B EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0xA51CCCF3 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0xAA152491 EQ PUSH2 0x559 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x7A5CAAB3 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4B6 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x5DACF5F4 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x3B6 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x3AF25975 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x30E JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xB21A83B EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x273E JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x915 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x294C JUMP JUMPDEST PUSH2 0x9DB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x323 PUSH2 0xAEB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x294C JUMP JUMPDEST PUSH2 0xB9F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x363 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x2A4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x433 PUSH2 0xD5E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x475 PUSH2 0xD9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A0 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0xE56 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x506 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x543 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x2B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x561 PUSH2 0xF81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x1181 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x604 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x641 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x138A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x70E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x71E JUMPI POP PUSH2 0x71D DUP3 PUSH2 0x140E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x734 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x760 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x782 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x790 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C2 DUP3 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x808 DUP3 PUSH2 0xBEA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x870 SWAP1 PUSH2 0x2DDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x898 PUSH2 0x14C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x8C7 JUMPI POP PUSH2 0x8C6 DUP2 PUSH2 0x8C1 PUSH2 0x14C3 JUMP JUMPDEST PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST PUSH2 0x906 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x2E6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x910 DUP4 DUP4 PUSH2 0x14CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9CD JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D7 DUP3 DUP3 PUSH2 0x1584 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9EC PUSH2 0x9E6 PUSH2 0x14C3 JUMP JUMPDEST DUP3 PUSH2 0x1724 JUMP JUMPDEST PUSH2 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA22 SWAP1 PUSH2 0x2F28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA36 DUP4 DUP4 DUP4 PUSH2 0x17B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA51 JUMPI PUSH2 0xA50 PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xA66 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA92 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xADF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAB4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xADF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAC2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF3 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xB1E SWAP1 PUSH2 0x2FA8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB9B JUMPI PUSH1 0x40 MLOAD PUSH32 0xCA7E25B700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBBA DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1181 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBC7 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8A SWAP1 PUSH2 0x3009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0E SWAP1 PUSH2 0x309B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD66 PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0xD70 PUSH1 0x0 PUSH2 0x1A9E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xDD3 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDFF SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE68 PUSH2 0xE61 PUSH2 0x14C3 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1B64 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0xEB0 PUSH2 0xBBF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xF49 JUMPI DUP3 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0xEEF JUMPI POP DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xEDC JUMPI PUSH2 0xEDB PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xEEC SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST DUP6 LT JUMPDEST ISZERO PUSH2 0xF11 JUMPI DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xF07 JUMPI PUSH2 0xF06 PUSH2 0x2AFE JUMP JUMPDEST JUMPDEST SWAP4 POP POP POP POP PUSH2 0xF7C JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xF24 JUMPI PUSH2 0xF23 PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xF34 SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0xF41 SWAP1 PUSH2 0x3140 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEB5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x12806C9D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0xFDD JUMPI PUSH1 0x40 MLOAD PUSH32 0xB90F491000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3201 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10F2 SWAP2 SWAP1 PUSH2 0x3269 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xF873236E6CC0ECC5BE1A9A35C95EE5B8D1AC4CC7BFEF0CC5060391D6CC98E26B CALLER PUSH1 0x40 MLOAD PUSH2 0x1176 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x1192 PUSH2 0x118C PUSH2 0x14C3 JUMP JUMPDEST DUP4 PUSH2 0x1724 JUMP JUMPDEST PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C8 SWAP1 PUSH2 0x2F28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11DD DUP5 DUP5 DUP5 DUP5 PUSH2 0x1CD1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11EE DUP3 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x120E SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x123A SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1287 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x125C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1287 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x126A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1298 PUSH2 0x1D2D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x12AE JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x12E3 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12CB SWAP3 SWAP2 SWAP1 PUSH2 0x32D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x12F1 JUMP JUMPDEST PUSH2 0x12EC DUP5 PUSH2 0x1D44 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1392 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1402 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F9 SWAP1 PUSH2 0x3368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x140B DUP2 PUSH2 0x1A9E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1481 DUP2 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0x14C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B7 SWAP1 PUSH2 0x3009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x153E DUP4 PUSH2 0xBEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x15DB JUMPI PUSH2 0x15DA PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x15ED SWAP2 SWAP1 PUSH2 0x33B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15FA DUP3 PUSH2 0xE9F JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1610 SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1621 DUP5 DUP5 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x16E3 DUP4 PUSH1 0xA DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x2AFE JUMP JUMPDEST JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x164B JUMPI PUSH2 0x164A PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x1660 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x168C SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x1E36 JUMP JUMPDEST PUSH32 0x8A269F26B688E110E9CBD887D163DAB35CAE678FA353A0292DE532C0CAC1ECDC DUP2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1714 SWAP3 SWAP2 SWAP1 PUSH2 0x33E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1730 DUP4 PUSH2 0xBEA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1772 JUMPI POP PUSH2 0x1771 DUP2 DUP6 PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x17B0 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1798 DUP5 PUSH2 0x7B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D9 DUP3 PUSH2 0xBEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x182F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1826 SWAP1 PUSH2 0x3483 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x189F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1896 SWAP1 PUSH2 0x3515 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18AA DUP4 DUP4 DUP4 PUSH2 0x1EAA JUMP JUMPDEST PUSH2 0x18B5 PUSH1 0x0 DUP3 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1905 SWAP2 SWAP1 PUSH2 0x3535 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x195C SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1A1B DUP4 DUP4 DUP4 PUSH2 0x1EAF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A28 PUSH2 0x14C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A46 PUSH2 0xD9A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A93 SWAP1 PUSH2 0x35B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BCA SWAP1 PUSH2 0x3621 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CC4 SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1CDC DUP5 DUP5 DUP5 PUSH2 0x17B9 JUMP JUMPDEST PUSH2 0x1CE8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1EB4 JUMP JUMPDEST PUSH2 0x1D27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1E SWAP1 PUSH2 0x36B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D4F DUP3 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D59 PUSH2 0x1D2D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1D79 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1DA4 JUMP JUMPDEST DUP1 PUSH2 0x1D83 DUP5 PUSH2 0x204B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D94 SWAP3 SWAP2 SWAP1 PUSH2 0x32D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E32 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x21AC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1E3F DUP3 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0x1E7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E75 SWAP1 PUSH2 0x3745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1EA5 SWAP3 SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED5 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2207 JUMP JUMPDEST ISZERO PUSH2 0x203E JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1EFE PUSH2 0x14C3 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F20 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1F6B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F68 SWAP2 SWAP1 PUSH2 0x381B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1FEE JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F9B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1FE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FDD SWAP1 PUSH2 0x36B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x2043 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x2093 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x21A7 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x20C5 JUMPI DUP1 DUP1 PUSH2 0x20AE SWAP1 PUSH2 0x3140 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x20BE SWAP2 SWAP1 PUSH2 0x3848 JUMP JUMPDEST SWAP2 POP PUSH2 0x209B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E1 JUMPI PUSH2 0x20E0 PUSH2 0x27AD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2113 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x21A0 JUMPI PUSH1 0x1 DUP3 PUSH2 0x212C SWAP2 SWAP1 PUSH2 0x3535 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x213B SWAP2 SWAP1 PUSH2 0x33B7 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x2147 SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x215D JUMPI PUSH2 0x215C PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x2199 SWAP2 SWAP1 PUSH2 0x3848 JUMP JUMPDEST SWAP5 POP PUSH2 0x2117 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B6 DUP4 DUP4 PUSH2 0x222A JUMP JUMPDEST PUSH2 0x21C3 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1EB4 JUMP JUMPDEST PUSH2 0x2202 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21F9 SWAP1 PUSH2 0x36B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x229A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2291 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22A3 DUP2 PUSH2 0x1DAC JUMP JUMPDEST ISZERO PUSH2 0x22E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22DA SWAP1 PUSH2 0x3931 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22EF PUSH1 0x0 DUP4 DUP4 PUSH2 0x1EAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x233F SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2400 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1EAF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2432 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2454 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x249B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x246D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x249B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x249B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x249A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x247F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x24A8 SWAP2 SWAP1 PUSH2 0x24AC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x24C5 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x24AD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2512 DUP2 PUSH2 0x24DD JUMP JUMPDEST DUP2 EQ PUSH2 0x251D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x252F DUP2 PUSH2 0x2509 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x254B JUMPI PUSH2 0x254A PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2559 DUP5 DUP3 DUP6 ADD PUSH2 0x2520 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2577 DUP2 PUSH2 0x2562 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2592 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x256E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x25D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x25B7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x25E1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2603 DUP3 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x260D DUP2 DUP6 PUSH2 0x25A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x261D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x25B4 JUMP JUMPDEST PUSH2 0x2626 DUP2 PUSH2 0x25E7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x264B DUP2 DUP5 PUSH2 0x25F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2666 DUP2 PUSH2 0x2653 JUMP JUMPDEST DUP2 EQ PUSH2 0x2671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2683 DUP2 PUSH2 0x265D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x269F JUMPI PUSH2 0x269E PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26AD DUP5 DUP3 DUP6 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E1 DUP3 PUSH2 0x26B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F1 DUP2 PUSH2 0x26D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x270C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x271B DUP2 PUSH2 0x26D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2738 DUP2 PUSH2 0x2712 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2755 JUMPI PUSH2 0x2754 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2763 DUP6 DUP3 DUP7 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2774 DUP6 DUP3 DUP7 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2787 DUP2 PUSH2 0x2653 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x277E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x27E5 DUP3 PUSH2 0x25E7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2804 JUMPI PUSH2 0x2803 PUSH2 0x27AD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2817 PUSH2 0x24C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2823 DUP3 DUP3 PUSH2 0x27DC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2843 JUMPI PUSH2 0x2842 PUSH2 0x27AD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x286C PUSH2 0x2867 DUP5 PUSH2 0x2828 JUMP JUMPDEST PUSH2 0x280D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x288F JUMPI PUSH2 0x288E PUSH2 0x2854 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x28B8 JUMPI DUP1 PUSH2 0x28A4 DUP9 DUP3 PUSH2 0x2674 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2891 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28D7 JUMPI PUSH2 0x28D6 PUSH2 0x27A8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x28E7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2859 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2907 JUMPI PUSH2 0x2906 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2915 DUP6 DUP3 DUP7 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2936 JUMPI PUSH2 0x2935 PUSH2 0x24D8 JUMP JUMPDEST JUMPDEST PUSH2 0x2942 DUP6 DUP3 DUP7 ADD PUSH2 0x28C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2965 JUMPI PUSH2 0x2964 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2973 DUP7 DUP3 DUP8 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2984 DUP7 DUP3 DUP8 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2995 DUP7 DUP3 DUP8 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29C8 DUP2 PUSH2 0x2653 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29DA DUP4 DUP4 PUSH2 0x29BF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29FC DUP2 PUSH2 0x299F JUMP JUMPDEST PUSH2 0x2A06 DUP2 DUP5 PUSH2 0x29AA JUMP JUMPDEST SWAP3 POP PUSH2 0x2A11 DUP3 PUSH2 0x29B5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A42 JUMPI DUP2 MLOAD PUSH2 0x2A29 DUP8 DUP3 PUSH2 0x29CE JUMP JUMPDEST SWAP7 POP PUSH2 0x2A34 DUP4 PUSH2 0x29E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2A15 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A5F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A7B JUMPI PUSH2 0x2A7A PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A89 DUP5 DUP3 DUP6 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A9B DUP2 PUSH2 0x2562 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AB8 DUP2 PUSH2 0x2A92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AD5 JUMPI PUSH2 0x2AD4 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AE3 DUP6 DUP3 DUP7 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AF4 DUP6 DUP3 DUP7 ADD PUSH2 0x2AA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2B3E JUMPI PUSH2 0x2B3D PUSH2 0x2AFE JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2B4F DUP3 PUSH2 0x2B2D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5F DUP3 PUSH2 0x2B41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B6F DUP2 PUSH2 0x2B54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B8A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BB0 JUMPI PUSH2 0x2BAF PUSH2 0x27AD JUMP JUMPDEST JUMPDEST PUSH2 0x2BB9 DUP3 PUSH2 0x25E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE8 PUSH2 0x2BE3 DUP5 PUSH2 0x2B95 JUMP JUMPDEST PUSH2 0x280D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2C04 JUMPI PUSH2 0x2C03 PUSH2 0x2B90 JUMP JUMPDEST JUMPDEST PUSH2 0x2C0F DUP5 DUP3 DUP6 PUSH2 0x2BC6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C2C JUMPI PUSH2 0x2C2B PUSH2 0x27A8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C3C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2BD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2C5F JUMPI PUSH2 0x2C5E PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C6D DUP8 DUP3 DUP9 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2C7E DUP8 DUP3 DUP9 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2C8F DUP8 DUP3 DUP9 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CB0 JUMPI PUSH2 0x2CAF PUSH2 0x24D8 JUMP JUMPDEST JUMPDEST PUSH2 0x2CBC DUP8 DUP3 DUP9 ADD PUSH2 0x2C17 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CDF JUMPI PUSH2 0x2CDE PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CED DUP6 DUP3 DUP7 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CFE DUP6 DUP3 DUP7 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2D4F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2D63 JUMPI PUSH2 0x2D62 PUSH2 0x2D08 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC5 PUSH1 0x21 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DD0 DUP3 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DF4 DUP2 PUSH2 0x2DB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E57 PUSH1 0x3E DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E62 DUP3 PUSH2 0x2DFB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E86 DUP2 PUSH2 0x2E4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EA2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26E8 JUMP JUMPDEST PUSH2 0x2EAF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F12 PUSH1 0x2E DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F1D DUP3 PUSH2 0x2EB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F41 DUP2 PUSH2 0x2F05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F92 PUSH1 0x0 DUP4 PUSH2 0x2F77 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F9D DUP3 PUSH2 0x2F82 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FB3 DUP3 PUSH2 0x2F85 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FF3 PUSH1 0x18 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FFE DUP3 PUSH2 0x2FBD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3022 DUP2 PUSH2 0x2FE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3085 PUSH1 0x29 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3090 DUP3 PUSH2 0x3029 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30B4 DUP2 PUSH2 0x3078 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30F5 DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH2 0x3100 DUP4 PUSH2 0x2653 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3135 JUMPI PUSH2 0x3134 PUSH2 0x30BB JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x314B DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x317E JUMPI PUSH2 0x317D PUSH2 0x30BB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x319C DUP2 PUSH2 0x3189 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31BF DUP2 PUSH2 0x31A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31DC DUP2 PUSH2 0x31C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31FB DUP2 PUSH2 0x31E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3216 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3193 JUMP JUMPDEST PUSH2 0x3223 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x31B6 JUMP JUMPDEST PUSH2 0x3230 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x323D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x31F2 JUMP JUMPDEST PUSH2 0x324A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x31F2 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3263 DUP2 PUSH2 0x265D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x327F JUMPI PUSH2 0x327E PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x328D DUP5 DUP3 DUP6 ADD PUSH2 0x3254 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32AC DUP3 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x32B6 DUP2 DUP6 PUSH2 0x3296 JUMP JUMPDEST SWAP4 POP PUSH2 0x32C6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x25B4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32DE DUP3 DUP6 PUSH2 0x32A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x32EA DUP3 DUP5 PUSH2 0x32A1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3352 PUSH1 0x26 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x335D DUP3 PUSH2 0x32F6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3381 DUP2 PUSH2 0x3345 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33C2 DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH2 0x33CD DUP4 PUSH2 0x2653 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x33DD JUMPI PUSH2 0x33DC PUSH2 0x3388 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x33FD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2B66 JUMP JUMPDEST PUSH2 0x340A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346D PUSH1 0x25 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3478 DUP3 PUSH2 0x3411 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x349C DUP2 PUSH2 0x3460 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34FF PUSH1 0x24 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x350A DUP3 PUSH2 0x34A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x352E DUP2 PUSH2 0x34F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3540 DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH2 0x354B DUP4 PUSH2 0x2653 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x355E JUMPI PUSH2 0x355D PUSH2 0x30BB JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x359F PUSH1 0x20 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x35AA DUP3 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35CE DUP2 PUSH2 0x3592 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360B PUSH1 0x19 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3616 DUP3 PUSH2 0x35D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x363A DUP2 PUSH2 0x35FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x369D PUSH1 0x32 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x36A8 DUP3 PUSH2 0x3641 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36CC DUP2 PUSH2 0x3690 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x372F PUSH1 0x2E DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x373A DUP3 PUSH2 0x36D3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x375E DUP2 PUSH2 0x3722 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x378C DUP3 PUSH2 0x3765 JUMP JUMPDEST PUSH2 0x3796 DUP2 DUP6 PUSH2 0x3770 JUMP JUMPDEST SWAP4 POP PUSH2 0x37A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x25B4 JUMP JUMPDEST PUSH2 0x37AF DUP2 PUSH2 0x25E7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x37CF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x26E8 JUMP JUMPDEST PUSH2 0x37DC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x26E8 JUMP JUMPDEST PUSH2 0x37E9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x277E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x37FB DUP2 DUP5 PUSH2 0x3781 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3815 DUP2 PUSH2 0x2509 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3831 JUMPI PUSH2 0x3830 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x383F DUP5 DUP3 DUP6 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3853 DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH2 0x385E DUP4 PUSH2 0x2653 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x386E JUMPI PUSH2 0x386D PUSH2 0x3388 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38AF PUSH1 0x20 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x38BA DUP3 PUSH2 0x3879 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38DE DUP2 PUSH2 0x38A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391B PUSH1 0x1C DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3926 DUP3 PUSH2 0x38E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x394A DUP2 PUSH2 0x390E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF ISZERO 0xB3 DUP8 SELFBALANCE PUSH17 0x71C2F2BF550A351F5A04FFB2C8188BDDCA 0xCB SWAP13 ADD DIV 0xC8 PUSH23 0xC61DF464736F6C63430008090033000000000000000000 ","sourceMap":"455:4023:13:-:0;;;1722:486;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1891:16:13;5616:15:0;5599:32;;;;;;;;;;5556:80;1464:5:3;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;936:32:2;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1997:16:13::2;1952:62;;;;;;;;::::0;::::2;2043:14;2024:33;;;;;;;;::::0;::::2;2079:7;2067:19;;;;::::0;::::2;2117:16;2096:37;;;;;;;;::::0;::::2;2160:12;2143:14;:29;;;;;;;;;;;;:::i;:::-;;2194:7;2182:19;;;;::::0;::::2;1722:486:::0;;;;;;455:4023;;640:96:9;693:7;719:10;712:17;;640:96;:::o;2433:187:2:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;455:4023:13:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:101::-;881:7;921:18;914:5;910:30;899:41;;845:101;;;:::o;952:120::-;1024:23;1041:5;1024:23;:::i;:::-;1017:5;1014:34;1004:62;;1062:1;1059;1052:12;1004:62;952:120;:::o;1078:141::-;1134:5;1165:6;1159:13;1150:22;;1181:32;1207:5;1181:32;:::i;:::-;1078:141;;;;:::o;1225:77::-;1262:7;1291:5;1280:16;;1225:77;;;:::o;1308:122::-;1381:24;1399:5;1381:24;:::i;:::-;1374:5;1371:35;1361:63;;1420:1;1417;1410:12;1361:63;1308:122;:::o;1436:143::-;1493:5;1524:6;1518:13;1509:22;;1540:33;1567:5;1540:33;:::i;:::-;1436:143;;;;:::o;1585:93::-;1621:7;1661:10;1654:5;1650:22;1639:33;;1585:93;;;:::o;1684:120::-;1756:23;1773:5;1756:23;:::i;:::-;1749:5;1746:34;1736:62;;1794:1;1791;1784:12;1736:62;1684:120;:::o;1810:141::-;1866:5;1897:6;1891:13;1882:22;;1913:32;1939:5;1913:32;:::i;:::-;1810:141;;;;:::o;1957:117::-;2066:1;2063;2056:12;2080:102;2121:6;2172:2;2168:7;2163:2;2156:5;2152:14;2148:28;2138:38;;2080:102;;;:::o;2188:180::-;2236:77;2233:1;2226:88;2333:4;2330:1;2323:15;2357:4;2354:1;2347:15;2374:281;2457:27;2479:4;2457:27;:::i;:::-;2449:6;2445:40;2587:6;2575:10;2572:22;2551:18;2539:10;2536:34;2533:62;2530:88;;;2598:18;;:::i;:::-;2530:88;2638:10;2634:2;2627:22;2417:238;2374:281;;:::o;2661:129::-;2695:6;2722:20;;:::i;:::-;2712:30;;2751:33;2779:4;2771:6;2751:33;:::i;:::-;2661:129;;;:::o;2796:321::-;2883:4;2973:18;2965:6;2962:30;2959:56;;;2995:18;;:::i;:::-;2959:56;3045:4;3037:6;3033:17;3025:25;;3105:4;3099;3095:15;3087:23;;2796:321;;;:::o;3123:117::-;3232:1;3229;3222:12;3246:117;3355:1;3352;3345:12;3369:308;3431:4;3521:18;3513:6;3510:30;3507:56;;;3543:18;;:::i;:::-;3507:56;3581:29;3603:6;3581:29;:::i;:::-;3573:37;;3665:4;3659;3655:15;3647:23;;3369:308;;;:::o;3683:307::-;3751:1;3761:113;3775:6;3772:1;3769:13;3761:113;;;3860:1;3855:3;3851:11;3845:18;3841:1;3836:3;3832:11;3825:39;3797:2;3794:1;3790:10;3785:15;;3761:113;;;3892:6;3889:1;3886:13;3883:101;;;3972:1;3963:6;3958:3;3954:16;3947:27;3883:101;3732:258;3683:307;;;:::o;3996:421::-;4085:5;4110:66;4126:49;4168:6;4126:49;:::i;:::-;4110:66;:::i;:::-;4101:75;;4199:6;4192:5;4185:21;4237:4;4230:5;4226:16;4275:3;4266:6;4261:3;4257:16;4254:25;4251:112;;;4282:79;;:::i;:::-;4251:112;4372:39;4404:6;4399:3;4394;4372:39;:::i;:::-;4091:326;3996:421;;;;;:::o;4437:355::-;4504:5;4553:3;4546:4;4538:6;4534:17;4530:27;4520:122;;4561:79;;:::i;:::-;4520:122;4671:6;4665:13;4696:90;4782:3;4774:6;4767:4;4759:6;4755:17;4696:90;:::i;:::-;4687:99;;4510:282;4437:355;;;;:::o;4814:960::-;4931:5;4956:91;4972:74;5039:6;4972:74;:::i;:::-;4956:91;:::i;:::-;4947:100;;5067:5;5096:6;5089:5;5082:21;5130:4;5123:5;5119:16;5112:23;;5183:4;5175:6;5171:17;5163:6;5159:30;5212:3;5204:6;5201:15;5198:122;;;5231:79;;:::i;:::-;5198:122;5346:6;5329:439;5363:6;5358:3;5355:15;5329:439;;;5445:3;5439:10;5481:18;5468:11;5465:35;5462:122;;;5503:79;;:::i;:::-;5462:122;5627:11;5619:6;5615:24;5665:58;5719:3;5707:10;5665:58;:::i;:::-;5660:3;5653:71;5753:4;5748:3;5744:14;5737:21;;5405:363;;5389:4;5384:3;5380:14;5373:21;;5329:439;;;5333:21;4937:837;;4814:960;;;;;:::o;5796:405::-;5888:5;5937:3;5930:4;5922:6;5918:17;5914:27;5904:122;;5945:79;;:::i;:::-;5904:122;6055:6;6049:13;6080:115;6191:3;6183:6;6176:4;6168:6;6164:17;6080:115;:::i;:::-;6071:124;;5894:307;5796:405;;;;:::o;6207:77::-;6244:7;6273:5;6262:16;;6207:77;;;:::o;6290:122::-;6363:24;6381:5;6363:24;:::i;:::-;6356:5;6353:35;6343:63;;6402:1;6399;6392:12;6343:63;6290:122;:::o;6418:143::-;6475:5;6506:6;6500:13;6491:22;;6522:33;6549:5;6522:33;:::i;:::-;6418:143;;;;:::o;6567:1353::-;6715:6;6723;6731;6739;6747;6755;6804:3;6792:9;6783:7;6779:23;6775:33;6772:120;;;6811:79;;:::i;:::-;6772:120;6931:1;6956:64;7012:7;7003:6;6992:9;6988:22;6956:64;:::i;:::-;6946:74;;6902:128;7069:2;7095:63;7150:7;7141:6;7130:9;7126:22;7095:63;:::i;:::-;7085:73;;7040:128;7207:2;7233:64;7289:7;7280:6;7269:9;7265:22;7233:64;:::i;:::-;7223:74;;7178:129;7346:2;7372:63;7427:7;7418:6;7407:9;7403:22;7372:63;:::i;:::-;7362:73;;7317:128;7505:3;7494:9;7490:19;7484:26;7537:18;7529:6;7526:30;7523:117;;;7559:79;;:::i;:::-;7523:117;7664:99;7755:7;7746:6;7735:9;7731:22;7664:99;:::i;:::-;7654:109;;7455:318;7812:3;7839:64;7895:7;7886:6;7875:9;7871:22;7839:64;:::i;:::-;7829:74;;7783:130;6567:1353;;;;;;;;:::o;7926:180::-;7974:77;7971:1;7964:88;8071:4;8068:1;8061:15;8095:4;8092:1;8085:15;8112:320;8156:6;8193:1;8187:4;8183:12;8173:22;;8240:1;8234:4;8230:12;8261:18;8251:81;;8317:4;8309:6;8305:17;8295:27;;8251:81;8379:2;8371:6;8368:14;8348:18;8345:38;8342:84;;;8398:18;;:::i;:::-;8342:84;8163:269;8112:320;;;:::o;455:4023:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1132":{"entryPoint":7855,"id":1132,"parameterSlots":3,"returnSlots":0},"@_approve_1002":{"entryPoint":5323,"id":1002,"parameterSlots":2,"returnSlots":0},"@_baseURI_480":{"entryPoint":7469,"id":480,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_1121":{"entryPoint":7850,"id":1121,"parameterSlots":3,"returnSlots":0},"@_checkOnERC721Received_1110":{"entryPoint":7860,"id":1110,"parameterSlots":4,"returnSlots":1},"@_checkOwner_208":{"entryPoint":6688,"id":208,"parameterSlots":0,"returnSlots":0},"@_exists_699":{"entryPoint":7596,"id":699,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_733":{"entryPoint":5924,"id":733,"parameterSlots":2,"returnSlots":1},"@_mint_843":{"entryPoint":8746,"id":843,"parameterSlots":2,"returnSlots":0},"@_msgSender_1726":{"entryPoint":5315,"id":1726,"parameterSlots":0,"returnSlots":1},"@_requireMinted_1048":{"entryPoint":5240,"id":1048,"parameterSlots":1,"returnSlots":0},"@_safeMint_748":{"entryPoint":7704,"id":748,"parameterSlots":2,"returnSlots":0},"@_safeMint_777":{"entryPoint":8620,"id":777,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_681":{"entryPoint":7377,"id":681,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_1034":{"entryPoint":7012,"id":1034,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_1361":{"entryPoint":7734,"id":1361,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_265":{"entryPoint":6814,"id":265,"parameterSlots":1,"returnSlots":0},"@_transfer_978":{"entryPoint":6073,"id":978,"parameterSlots":3,"returnSlots":0},"@approve_523":{"entryPoint":2045,"id":523,"parameterSlots":2,"returnSlots":0},"@balanceOf_384":{"entryPoint":3238,"id":384,"parameterSlots":1,"returnSlots":1},"@fulfillRandomWords_2210":{"entryPoint":5508,"id":2210,"parameterSlots":2,"returnSlots":0},"@getApproved_541":{"entryPoint":1975,"id":541,"parameterSlots":1,"returnSlots":1},"@getBreedFromModdedRng_2305":{"entryPoint":3743,"id":2305,"parameterSlots":1,"returnSlots":1},"@getChanceArray_2318":{"entryPoint":3007,"id":2318,"parameterSlots":0,"returnSlots":1},"@getDogTokenUris_2338":{"entryPoint":2619,"id":2338,"parameterSlots":1,"returnSlots":1},"@getMintFee_2326":{"entryPoint":3442,"id":2326,"parameterSlots":0,"returnSlots":1},"@getTokenCounter_2346":{"entryPoint":3228,"id":2346,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_576":{"entryPoint":4854,"id":576,"parameterSlots":2,"returnSlots":1},"@isContract_1437":{"entryPoint":8711,"id":1437,"parameterSlots":1,"returnSlots":1},"@name_422":{"entryPoint":1829,"id":422,"parameterSlots":0,"returnSlots":1},"@ownerOf_412":{"entryPoint":3050,"id":412,"parameterSlots":1,"returnSlots":1},"@owner_194":{"entryPoint":3482,"id":194,"parameterSlots":0,"returnSlots":1},"@rawFulfillRandomWords_56":{"entryPoint":2331,"id":56,"parameterSlots":2,"returnSlots":0},"@renounceOwnership_222":{"entryPoint":3422,"id":222,"parameterSlots":0,"returnSlots":0},"@requestNft_2151":{"entryPoint":3969,"id":2151,"parameterSlots":0,"returnSlots":1},"@s_requestIdToSender_2039":{"entryPoint":3692,"id":2039,"parameterSlots":0,"returnSlots":0},"@s_tokenCounter_2041":{"entryPoint":2325,"id":2041,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_622":{"entryPoint":2975,"id":622,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_652":{"entryPoint":4481,"id":652,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_558":{"entryPoint":3670,"id":558,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1985":{"entryPoint":5134,"id":1985,"parameterSlots":1,"returnSlots":1},"@supportsInterface_360":{"entryPoint":1603,"id":360,"parameterSlots":1,"returnSlots":1},"@symbol_432":{"entryPoint":3524,"id":432,"parameterSlots":0,"returnSlots":1},"@toString_1824":{"entryPoint":8267,"id":1824,"parameterSlots":1,"returnSlots":1},"@tokenURI_1339":{"entryPoint":4579,"id":1339,"parameterSlots":1,"returnSlots":1},"@tokenURI_471":{"entryPoint":7492,"id":471,"parameterSlots":1,"returnSlots":1},"@transferFrom_603":{"entryPoint":2523,"id":603,"parameterSlots":3,"returnSlots":0},"@transferOwnership_245":{"entryPoint":5002,"id":245,"parameterSlots":1,"returnSlots":0},"@withdraw_2244":{"entryPoint":2795,"id":2244,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10329,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":11221,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":10025,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10434,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":10921,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":9504,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":14342,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":11287,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":9844,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":12884,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":10853,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":11464,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":10572,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":11333,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":10942,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10046,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":9525,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":14363,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":9865,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":12905,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10480,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":10702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9960,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":10739,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":9582,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":12691,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":14209,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_Breed_$2020_to_t_uint8_fromStack":{"entryPoint":11110,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":9720,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12961,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":13968,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":13125,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":13408,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":14606,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":13554,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":13822,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":12408,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack":{"entryPoint":14114,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack":{"entryPoint":11850,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":14498,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":13714,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":12262,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":11704,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12165,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack":{"entryPoint":12037,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":12755,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":10687,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":10110,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":12786,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":12726,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":13010,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12200,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":9975,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":11917,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":14266,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed":{"entryPoint":10826,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":9597,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":12801,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_enum$_Breed_$2020__to_t_uint8__fromStack_reversed":{"entryPoint":11125,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_Breed_$2020_t_address__to_t_uint8_t_address__fromStack_reversed":{"entryPoint":13288,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9777,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14003,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13160,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13443,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14641,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13589,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13857,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12443,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14149,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11885,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14533,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13749,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12297,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11739,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12072,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":10125,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":10253,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":9417,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10280,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":11157,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":10677,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":10655,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":14181,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":9624,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":10726,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":10666,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":14192,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12151,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":9635,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12950,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":12522,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":14408,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":13621,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":9942,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9570,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":12681,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":9437,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Breed_$2020":{"entryPoint":11073,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":12741,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":9910,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":9811,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":12770,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":12706,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_Breed_$2020_to_t_uint8":{"entryPoint":11092,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":11206,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":9652,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":11575,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":10204,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":12608,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":13239,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":12475,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":13192,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":11006,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":11528,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":12104,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10157,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":10152,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":10324,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":11152,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":9432,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":9427,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":9703,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":13889,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":13046,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":13329,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":14565,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":13475,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":13781,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":12329,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4":{"entryPoint":14035,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304":{"entryPoint":11771,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":14457,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":13673,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":12221,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":11625,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":12162,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b":{"entryPoint":11958,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_Breed_$2020":{"entryPoint":11053,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":10002,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":10898,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":9481,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":9821,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:38526:14","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:14","statements":[{"nodeType":"YulAssignment","src":"57:19:14","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:14","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:14"},"nodeType":"YulFunctionCall","src":"67:9:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:14"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:14","type":""}],"src":"7:75:14"},{"body":{"nodeType":"YulBlock","src":"177:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:14"},"nodeType":"YulFunctionCall","src":"187:12:14"},"nodeType":"YulExpressionStatement","src":"187:12:14"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:14"},{"body":{"nodeType":"YulBlock","src":"300:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:14"},{"body":{"nodeType":"YulBlock","src":"378:105:14","statements":[{"nodeType":"YulAssignment","src":"388:89:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:14","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:14"},"nodeType":"YulFunctionCall","src":"399:78:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:14"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:14","type":""}],"src":"334:149:14"},{"body":{"nodeType":"YulBlock","src":"531:78:14","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:14"},"nodeType":"YulFunctionCall","src":"589:12:14"},"nodeType":"YulExpressionStatement","src":"589:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:14"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:14"},"nodeType":"YulFunctionCall","src":"561:23:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:14"},"nodeType":"YulFunctionCall","src":"551:34:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:14"},"nodeType":"YulFunctionCall","src":"544:42:14"},"nodeType":"YulIf","src":"541:62:14"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:14","type":""}],"src":"489:120:14"},{"body":{"nodeType":"YulBlock","src":"666:86:14","statements":[{"nodeType":"YulAssignment","src":"676:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:14"},"nodeType":"YulFunctionCall","src":"685:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:14"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:14"},"nodeType":"YulFunctionCall","src":"714:32:14"},"nodeType":"YulExpressionStatement","src":"714:32:14"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:14","type":""}],"src":"615:137:14"},{"body":{"nodeType":"YulBlock","src":"823:262:14","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:14"},"nodeType":"YulFunctionCall","src":"871:79:14"},"nodeType":"YulExpressionStatement","src":"871:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:14"},"nodeType":"YulFunctionCall","src":"840:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:14"},"nodeType":"YulFunctionCall","src":"836:32:14"},"nodeType":"YulIf","src":"833:119:14"},{"nodeType":"YulBlock","src":"962:116:14","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:14","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:14"},"nodeType":"YulFunctionCall","src":"1036:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:14"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:14"},"nodeType":"YulFunctionCall","src":"1016:52:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:14","type":""}],"src":"758:327:14"},{"body":{"nodeType":"YulBlock","src":"1133:48:14","statements":[{"nodeType":"YulAssignment","src":"1143:32:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:14"},"nodeType":"YulFunctionCall","src":"1161:13:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:14"},"nodeType":"YulFunctionCall","src":"1154:21:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:14"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:14","type":""}],"src":"1091:90:14"},{"body":{"nodeType":"YulBlock","src":"1246:50:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:14"},"nodeType":"YulFunctionCall","src":"1268:21:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:14"},"nodeType":"YulFunctionCall","src":"1256:34:14"},"nodeType":"YulExpressionStatement","src":"1256:34:14"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:14","type":""}],"src":"1187:109:14"},{"body":{"nodeType":"YulBlock","src":"1394:118:14","statements":[{"nodeType":"YulAssignment","src":"1404:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:14"},"nodeType":"YulFunctionCall","src":"1412:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:14"},"nodeType":"YulFunctionCall","src":"1487:17:14"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:14"},"nodeType":"YulFunctionCall","src":"1440:65:14"},"nodeType":"YulExpressionStatement","src":"1440:65:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:14","type":""}],"src":"1302:210:14"},{"body":{"nodeType":"YulBlock","src":"1577:40:14","statements":[{"nodeType":"YulAssignment","src":"1588:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:14"},"nodeType":"YulFunctionCall","src":"1598:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:14"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:14","type":""}],"src":"1518:99:14"},{"body":{"nodeType":"YulBlock","src":"1719:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:14"},"nodeType":"YulFunctionCall","src":"1729:19:14"},"nodeType":"YulExpressionStatement","src":"1729:19:14"},{"nodeType":"YulAssignment","src":"1757:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:14"},"nodeType":"YulFunctionCall","src":"1772:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:14","type":""}],"src":"1623:169:14"},{"body":{"nodeType":"YulBlock","src":"1847:258:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:14"},"nodeType":"YulFunctionCall","src":"1947:11:14"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:14"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:14"},"nodeType":"YulFunctionCall","src":"1966:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:14"},"nodeType":"YulFunctionCall","src":"1960:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:14"},"nodeType":"YulFunctionCall","src":"1940:39:14"},"nodeType":"YulExpressionStatement","src":"1940:39:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:14"},"nodeType":"YulFunctionCall","src":"1884:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:14","statements":[{"nodeType":"YulAssignment","src":"1900:15:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:14"},"nodeType":"YulFunctionCall","src":"1905:10:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:14","statements":[]},"src":"1876:113:14"},{"body":{"nodeType":"YulBlock","src":"2023:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:14"},"nodeType":"YulFunctionCall","src":"2069:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:14"},"nodeType":"YulFunctionCall","src":"2062:27:14"},"nodeType":"YulExpressionStatement","src":"2062:27:14"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:14"},"nodeType":"YulFunctionCall","src":"2001:13:14"},"nodeType":"YulIf","src":"1998:101:14"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:14","type":""}],"src":"1798:307:14"},{"body":{"nodeType":"YulBlock","src":"2159:54:14","statements":[{"nodeType":"YulAssignment","src":"2169:38:14","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:14","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:14"},"nodeType":"YulFunctionCall","src":"2183:14:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:14","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:14"},"nodeType":"YulFunctionCall","src":"2199:7:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:14"},"nodeType":"YulFunctionCall","src":"2179:28:14"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:14"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:14","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:14","type":""}],"src":"2111:102:14"},{"body":{"nodeType":"YulBlock","src":"2311:272:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:14"},"nodeType":"YulFunctionCall","src":"2335:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:14","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:14"},"nodeType":"YulFunctionCall","src":"2390:71:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:14"},"nodeType":"YulFunctionCall","src":"2492:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:14"},"nodeType":"YulFunctionCall","src":"2470:52:14"},"nodeType":"YulExpressionStatement","src":"2470:52:14"},{"nodeType":"YulAssignment","src":"2531:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:14"},"nodeType":"YulFunctionCall","src":"2547:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:14"},"nodeType":"YulFunctionCall","src":"2538:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:14","type":""}],"src":"2219:364:14"},{"body":{"nodeType":"YulBlock","src":"2707:195:14","statements":[{"nodeType":"YulAssignment","src":"2717:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:14"},"nodeType":"YulFunctionCall","src":"2725:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:14"},"nodeType":"YulFunctionCall","src":"2760:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:14"},"nodeType":"YulFunctionCall","src":"2779:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:14"},"nodeType":"YulFunctionCall","src":"2753:47:14"},"nodeType":"YulExpressionStatement","src":"2753:47:14"},{"nodeType":"YulAssignment","src":"2809:86:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:14"},"nodeType":"YulFunctionCall","src":"2817:78:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:14"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:14","type":""}],"src":"2589:313:14"},{"body":{"nodeType":"YulBlock","src":"2953:32:14","statements":[{"nodeType":"YulAssignment","src":"2963:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:14"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:14","type":""}],"src":"2908:77:14"},{"body":{"nodeType":"YulBlock","src":"3034:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:14"},"nodeType":"YulFunctionCall","src":"3093:12:14"},"nodeType":"YulExpressionStatement","src":"3093:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:14"},"nodeType":"YulFunctionCall","src":"3064:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:14"},"nodeType":"YulFunctionCall","src":"3054:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:14"},"nodeType":"YulFunctionCall","src":"3047:43:14"},"nodeType":"YulIf","src":"3044:63:14"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:14","type":""}],"src":"2991:122:14"},{"body":{"nodeType":"YulBlock","src":"3171:87:14","statements":[{"nodeType":"YulAssignment","src":"3181:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:14"},"nodeType":"YulFunctionCall","src":"3190:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:14"},"nodeType":"YulFunctionCall","src":"3219:33:14"},"nodeType":"YulExpressionStatement","src":"3219:33:14"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:14","type":""}],"src":"3119:139:14"},{"body":{"nodeType":"YulBlock","src":"3330:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:14"},"nodeType":"YulFunctionCall","src":"3378:79:14"},"nodeType":"YulExpressionStatement","src":"3378:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:14"},"nodeType":"YulFunctionCall","src":"3347:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:14"},"nodeType":"YulFunctionCall","src":"3343:32:14"},"nodeType":"YulIf","src":"3340:119:14"},{"nodeType":"YulBlock","src":"3469:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:14","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:14"},"nodeType":"YulFunctionCall","src":"3544:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:14"},"nodeType":"YulFunctionCall","src":"3523:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:14","type":""}],"src":"3264:329:14"},{"body":{"nodeType":"YulBlock","src":"3644:81:14","statements":[{"nodeType":"YulAssignment","src":"3654:65:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:14"},"nodeType":"YulFunctionCall","src":"3665:54:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:14"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:14","type":""}],"src":"3599:126:14"},{"body":{"nodeType":"YulBlock","src":"3776:51:14","statements":[{"nodeType":"YulAssignment","src":"3786:35:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:14"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:14"},"nodeType":"YulFunctionCall","src":"3797:24:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:14"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:14","type":""}],"src":"3731:96:14"},{"body":{"nodeType":"YulBlock","src":"3898:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:14"},"nodeType":"YulFunctionCall","src":"3920:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:14"},"nodeType":"YulFunctionCall","src":"3908:37:14"},"nodeType":"YulExpressionStatement","src":"3908:37:14"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:14","type":""}],"src":"3833:118:14"},{"body":{"nodeType":"YulBlock","src":"4055:124:14","statements":[{"nodeType":"YulAssignment","src":"4065:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:14"},"nodeType":"YulFunctionCall","src":"4073:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:14"},"nodeType":"YulFunctionCall","src":"4154:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:14"},"nodeType":"YulFunctionCall","src":"4101:71:14"},"nodeType":"YulExpressionStatement","src":"4101:71:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:14","type":""}],"src":"3957:222:14"},{"body":{"nodeType":"YulBlock","src":"4228:79:14","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:14"},"nodeType":"YulFunctionCall","src":"4287:12:14"},"nodeType":"YulExpressionStatement","src":"4287:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:14"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:14"},"nodeType":"YulFunctionCall","src":"4258:24:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:14"},"nodeType":"YulFunctionCall","src":"4248:35:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:14"},"nodeType":"YulFunctionCall","src":"4241:43:14"},"nodeType":"YulIf","src":"4238:63:14"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:14","type":""}],"src":"4185:122:14"},{"body":{"nodeType":"YulBlock","src":"4365:87:14","statements":[{"nodeType":"YulAssignment","src":"4375:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:14"},"nodeType":"YulFunctionCall","src":"4384:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:14"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:14"},"nodeType":"YulFunctionCall","src":"4413:33:14"},"nodeType":"YulExpressionStatement","src":"4413:33:14"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:14","type":""}],"src":"4313:139:14"},{"body":{"nodeType":"YulBlock","src":"4541:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:14"},"nodeType":"YulFunctionCall","src":"4589:79:14"},"nodeType":"YulExpressionStatement","src":"4589:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:14"},"nodeType":"YulFunctionCall","src":"4558:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:14"},"nodeType":"YulFunctionCall","src":"4554:32:14"},"nodeType":"YulIf","src":"4551:119:14"},{"nodeType":"YulBlock","src":"4680:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:14"},"nodeType":"YulFunctionCall","src":"4755:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:14"},"nodeType":"YulFunctionCall","src":"4734:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:14"}]}]},{"nodeType":"YulBlock","src":"4807:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:14","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:14"},"nodeType":"YulFunctionCall","src":"4883:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:14"},"nodeType":"YulFunctionCall","src":"4862:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:14","type":""}],"src":"4458:474:14"},{"body":{"nodeType":"YulBlock","src":"5003:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5020:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5043:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5025:17:14"},"nodeType":"YulFunctionCall","src":"5025:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5013:6:14"},"nodeType":"YulFunctionCall","src":"5013:37:14"},"nodeType":"YulExpressionStatement","src":"5013:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4991:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4998:3:14","type":""}],"src":"4938:118:14"},{"body":{"nodeType":"YulBlock","src":"5160:124:14","statements":[{"nodeType":"YulAssignment","src":"5170:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5182:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5193:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5178:3:14"},"nodeType":"YulFunctionCall","src":"5178:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5170:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5250:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5263:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5274:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5259:3:14"},"nodeType":"YulFunctionCall","src":"5259:17:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5206:43:14"},"nodeType":"YulFunctionCall","src":"5206:71:14"},"nodeType":"YulExpressionStatement","src":"5206:71:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5132:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5144:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5155:4:14","type":""}],"src":"5062:222:14"},{"body":{"nodeType":"YulBlock","src":"5379:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5396:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5399:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5389:6:14"},"nodeType":"YulFunctionCall","src":"5389:12:14"},"nodeType":"YulExpressionStatement","src":"5389:12:14"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5290:117:14"},{"body":{"nodeType":"YulBlock","src":"5441:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5458:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5461:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5451:6:14"},"nodeType":"YulFunctionCall","src":"5451:88:14"},"nodeType":"YulExpressionStatement","src":"5451:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5555:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5558:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5548:6:14"},"nodeType":"YulFunctionCall","src":"5548:15:14"},"nodeType":"YulExpressionStatement","src":"5548:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5579:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5582:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5572:6:14"},"nodeType":"YulFunctionCall","src":"5572:15:14"},"nodeType":"YulExpressionStatement","src":"5572:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5413:180:14"},{"body":{"nodeType":"YulBlock","src":"5642:238:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5652:58:14","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5674:6:14"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5704:4:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5682:21:14"},"nodeType":"YulFunctionCall","src":"5682:27:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5670:3:14"},"nodeType":"YulFunctionCall","src":"5670:40:14"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5656:10:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"5821:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5823:16:14"},"nodeType":"YulFunctionCall","src":"5823:18:14"},"nodeType":"YulExpressionStatement","src":"5823:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5764:10:14"},{"kind":"number","nodeType":"YulLiteral","src":"5776:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5761:2:14"},"nodeType":"YulFunctionCall","src":"5761:34:14"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5800:10:14"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5812:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5797:2:14"},"nodeType":"YulFunctionCall","src":"5797:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5758:2:14"},"nodeType":"YulFunctionCall","src":"5758:62:14"},"nodeType":"YulIf","src":"5755:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5859:2:14","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5863:10:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5852:6:14"},"nodeType":"YulFunctionCall","src":"5852:22:14"},"nodeType":"YulExpressionStatement","src":"5852:22:14"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5628:6:14","type":""},{"name":"size","nodeType":"YulTypedName","src":"5636:4:14","type":""}],"src":"5599:281:14"},{"body":{"nodeType":"YulBlock","src":"5927:88:14","statements":[{"nodeType":"YulAssignment","src":"5937:30:14","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5947:18:14"},"nodeType":"YulFunctionCall","src":"5947:20:14"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5937:6:14"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5996:6:14"},{"name":"size","nodeType":"YulIdentifier","src":"6004:4:14"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5976:19:14"},"nodeType":"YulFunctionCall","src":"5976:33:14"},"nodeType":"YulExpressionStatement","src":"5976:33:14"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5911:4:14","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5920:6:14","type":""}],"src":"5886:129:14"},{"body":{"nodeType":"YulBlock","src":"6103:229:14","statements":[{"body":{"nodeType":"YulBlock","src":"6208:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6210:16:14"},"nodeType":"YulFunctionCall","src":"6210:18:14"},"nodeType":"YulExpressionStatement","src":"6210:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6180:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6188:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6177:2:14"},"nodeType":"YulFunctionCall","src":"6177:30:14"},"nodeType":"YulIf","src":"6174:56:14"},{"nodeType":"YulAssignment","src":"6240:25:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6252:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6260:4:14","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6248:3:14"},"nodeType":"YulFunctionCall","src":"6248:17:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6240:4:14"}]},{"nodeType":"YulAssignment","src":"6302:23:14","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6314:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"6320:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6310:3:14"},"nodeType":"YulFunctionCall","src":"6310:15:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6302:4:14"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6087:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6098:4:14","type":""}],"src":"6021:311:14"},{"body":{"nodeType":"YulBlock","src":"6427:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6444:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6447:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6437:6:14"},"nodeType":"YulFunctionCall","src":"6437:12:14"},"nodeType":"YulExpressionStatement","src":"6437:12:14"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"6338:117:14"},{"body":{"nodeType":"YulBlock","src":"6580:608:14","statements":[{"nodeType":"YulAssignment","src":"6590:90:14","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6672:6:14"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6615:56:14"},"nodeType":"YulFunctionCall","src":"6615:64:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6599:15:14"},"nodeType":"YulFunctionCall","src":"6599:81:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6590:5:14"}]},{"nodeType":"YulVariableDeclaration","src":"6689:16:14","value":{"name":"array","nodeType":"YulIdentifier","src":"6700:5:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6693:3:14","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6722:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"6729:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6715:6:14"},"nodeType":"YulFunctionCall","src":"6715:21:14"},"nodeType":"YulExpressionStatement","src":"6715:21:14"},{"nodeType":"YulAssignment","src":"6745:23:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6756:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"6763:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6752:3:14"},"nodeType":"YulFunctionCall","src":"6752:16:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6745:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"6778:44:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6796:6:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6808:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"6816:4:14","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6804:3:14"},"nodeType":"YulFunctionCall","src":"6804:17:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6792:3:14"},"nodeType":"YulFunctionCall","src":"6792:30:14"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6782:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"6850:103:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6864:77:14"},"nodeType":"YulFunctionCall","src":"6864:79:14"},"nodeType":"YulExpressionStatement","src":"6864:79:14"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6837:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"6845:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6834:2:14"},"nodeType":"YulFunctionCall","src":"6834:15:14"},"nodeType":"YulIf","src":"6831:122:14"},{"body":{"nodeType":"YulBlock","src":"7038:144:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7053:21:14","value":{"name":"src","nodeType":"YulIdentifier","src":"7071:3:14"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"7057:10:14","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7095:3:14"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"7121:10:14"},{"name":"end","nodeType":"YulIdentifier","src":"7133:3:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7100:20:14"},"nodeType":"YulFunctionCall","src":"7100:37:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7088:6:14"},"nodeType":"YulFunctionCall","src":"7088:50:14"},"nodeType":"YulExpressionStatement","src":"7088:50:14"},{"nodeType":"YulAssignment","src":"7151:21:14","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7162:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7167:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7158:3:14"},"nodeType":"YulFunctionCall","src":"7158:14:14"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7151:3:14"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6991:3:14"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6996:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6988:2:14"},"nodeType":"YulFunctionCall","src":"6988:15:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7004:25:14","statements":[{"nodeType":"YulAssignment","src":"7006:21:14","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7017:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"7022:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7013:3:14"},"nodeType":"YulFunctionCall","src":"7013:14:14"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7006:3:14"}]}]},"pre":{"nodeType":"YulBlock","src":"6966:21:14","statements":[{"nodeType":"YulVariableDeclaration","src":"6968:17:14","value":{"name":"offset","nodeType":"YulIdentifier","src":"6979:6:14"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6972:3:14","type":""}]}]},"src":"6962:220:14"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6550:6:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"6558:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"6566:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6574:5:14","type":""}],"src":"6478:710:14"},{"body":{"nodeType":"YulBlock","src":"7288:293:14","statements":[{"body":{"nodeType":"YulBlock","src":"7337:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7339:77:14"},"nodeType":"YulFunctionCall","src":"7339:79:14"},"nodeType":"YulExpressionStatement","src":"7339:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7316:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7324:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7312:3:14"},"nodeType":"YulFunctionCall","src":"7312:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"7331:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7308:3:14"},"nodeType":"YulFunctionCall","src":"7308:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7301:6:14"},"nodeType":"YulFunctionCall","src":"7301:35:14"},"nodeType":"YulIf","src":"7298:122:14"},{"nodeType":"YulVariableDeclaration","src":"7429:34:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7456:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7443:12:14"},"nodeType":"YulFunctionCall","src":"7443:20:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7433:6:14","type":""}]},{"nodeType":"YulAssignment","src":"7472:103:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7548:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"7556:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7544:3:14"},"nodeType":"YulFunctionCall","src":"7544:17:14"},{"name":"length","nodeType":"YulIdentifier","src":"7563:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"7571:3:14"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7481:62:14"},"nodeType":"YulFunctionCall","src":"7481:94:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7472:5:14"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7266:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"7274:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7282:5:14","type":""}],"src":"7211:370:14"},{"body":{"nodeType":"YulBlock","src":"7695:576:14","statements":[{"body":{"nodeType":"YulBlock","src":"7741:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7743:77:14"},"nodeType":"YulFunctionCall","src":"7743:79:14"},"nodeType":"YulExpressionStatement","src":"7743:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7716:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"7725:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7712:3:14"},"nodeType":"YulFunctionCall","src":"7712:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"7737:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7708:3:14"},"nodeType":"YulFunctionCall","src":"7708:32:14"},"nodeType":"YulIf","src":"7705:119:14"},{"nodeType":"YulBlock","src":"7834:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7849:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"7863:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7853:6:14","type":""}]},{"nodeType":"YulAssignment","src":"7878:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7913:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"7924:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7909:3:14"},"nodeType":"YulFunctionCall","src":"7909:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7933:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7888:20:14"},"nodeType":"YulFunctionCall","src":"7888:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7878:6:14"}]}]},{"nodeType":"YulBlock","src":"7961:303:14","statements":[{"nodeType":"YulVariableDeclaration","src":"7976:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8007:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8018:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8003:3:14"},"nodeType":"YulFunctionCall","src":"8003:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7990:12:14"},"nodeType":"YulFunctionCall","src":"7990:32:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7980:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"8069:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8071:77:14"},"nodeType":"YulFunctionCall","src":"8071:79:14"},"nodeType":"YulExpressionStatement","src":"8071:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8041:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"8049:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8038:2:14"},"nodeType":"YulFunctionCall","src":"8038:30:14"},"nodeType":"YulIf","src":"8035:117:14"},{"nodeType":"YulAssignment","src":"8166:88:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8226:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"8237:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8222:3:14"},"nodeType":"YulFunctionCall","src":"8222:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8246:7:14"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8176:45:14"},"nodeType":"YulFunctionCall","src":"8176:78:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8166:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7657:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7668:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7680:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7688:6:14","type":""}],"src":"7587:684:14"},{"body":{"nodeType":"YulBlock","src":"8377:519:14","statements":[{"body":{"nodeType":"YulBlock","src":"8423:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8425:77:14"},"nodeType":"YulFunctionCall","src":"8425:79:14"},"nodeType":"YulExpressionStatement","src":"8425:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8398:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"8407:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8394:3:14"},"nodeType":"YulFunctionCall","src":"8394:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"8419:2:14","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8390:3:14"},"nodeType":"YulFunctionCall","src":"8390:32:14"},"nodeType":"YulIf","src":"8387:119:14"},{"nodeType":"YulBlock","src":"8516:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8531:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"8545:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8535:6:14","type":""}]},{"nodeType":"YulAssignment","src":"8560:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8595:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"8606:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8591:3:14"},"nodeType":"YulFunctionCall","src":"8591:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8615:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8570:20:14"},"nodeType":"YulFunctionCall","src":"8570:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8560:6:14"}]}]},{"nodeType":"YulBlock","src":"8643:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8658:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"8672:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8662:6:14","type":""}]},{"nodeType":"YulAssignment","src":"8688:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8723:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"8734:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8719:3:14"},"nodeType":"YulFunctionCall","src":"8719:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8743:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8698:20:14"},"nodeType":"YulFunctionCall","src":"8698:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8688:6:14"}]}]},{"nodeType":"YulBlock","src":"8771:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"8786:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"8800:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8790:6:14","type":""}]},{"nodeType":"YulAssignment","src":"8816:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8851:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"8862:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8847:3:14"},"nodeType":"YulFunctionCall","src":"8847:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8871:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8826:20:14"},"nodeType":"YulFunctionCall","src":"8826:53:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8816:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8331:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8342:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8354:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8362:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8370:6:14","type":""}],"src":"8277:619:14"},{"body":{"nodeType":"YulBlock","src":"8974:32:14","statements":[{"nodeType":"YulAssignment","src":"8985:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"8995:4:14","type":"","value":"0x03"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8985:6:14"}]}]},"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8957:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8967:6:14","type":""}],"src":"8902:104:14"},{"body":{"nodeType":"YulBlock","src":"9121:34:14","statements":[{"nodeType":"YulAssignment","src":"9131:18:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"9146:3:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"9131:11:14"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9093:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"9098:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"9109:11:14","type":""}],"src":"9012:143:14"},{"body":{"nodeType":"YulBlock","src":"9231:28:14","statements":[{"nodeType":"YulAssignment","src":"9241:11:14","value":{"name":"ptr","nodeType":"YulIdentifier","src":"9249:3:14"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9241:4:14"}]}]},"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9218:3:14","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"9226:4:14","type":""}],"src":"9161:98:14"},{"body":{"nodeType":"YulBlock","src":"9320:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9337:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9360:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9342:17:14"},"nodeType":"YulFunctionCall","src":"9342:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9330:6:14"},"nodeType":"YulFunctionCall","src":"9330:37:14"},"nodeType":"YulExpressionStatement","src":"9330:37:14"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9308:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9315:3:14","type":""}],"src":"9265:108:14"},{"body":{"nodeType":"YulBlock","src":"9459:99:14","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9503:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"9511:3:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9469:33:14"},"nodeType":"YulFunctionCall","src":"9469:46:14"},"nodeType":"YulExpressionStatement","src":"9469:46:14"},{"nodeType":"YulAssignment","src":"9524:28:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9542:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9547:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9538:3:14"},"nodeType":"YulFunctionCall","src":"9538:14:14"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"9524:10:14"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"9432:6:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9440:3:14","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"9448:10:14","type":""}],"src":"9379:179:14"},{"body":{"nodeType":"YulBlock","src":"9637:38:14","statements":[{"nodeType":"YulAssignment","src":"9647:22:14","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9659:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9664:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9655:3:14"},"nodeType":"YulFunctionCall","src":"9655:14:14"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"9647:4:14"}]}]},"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9624:3:14","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"9632:4:14","type":""}],"src":"9564:111:14"},{"body":{"nodeType":"YulBlock","src":"9825:582:14","statements":[{"nodeType":"YulVariableDeclaration","src":"9835:66:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9895:5:14"}],"functionName":{"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"9849:45:14"},"nodeType":"YulFunctionCall","src":"9849:52:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9839:6:14","type":""}]},{"nodeType":"YulAssignment","src":"9910:91:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9989:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"9994:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9917:71:14"},"nodeType":"YulFunctionCall","src":"9917:84:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9910:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"10010:69:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10073:5:14"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"10025:47:14"},"nodeType":"YulFunctionCall","src":"10025:54:14"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"10014:7:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10088:21:14","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"10102:7:14"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"10092:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"10178:222:14","statements":[{"nodeType":"YulVariableDeclaration","src":"10192:34:14","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10219:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10213:5:14"},"nodeType":"YulFunctionCall","src":"10213:13:14"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"10196:13:14","type":""}]},{"nodeType":"YulAssignment","src":"10239:70:14","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"10290:13:14"},{"name":"pos","nodeType":"YulIdentifier","src":"10305:3:14"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"10246:43:14"},"nodeType":"YulFunctionCall","src":"10246:63:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10239:3:14"}]},{"nodeType":"YulAssignment","src":"10322:68:14","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10383:6:14"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"10332:50:14"},"nodeType":"YulFunctionCall","src":"10332:58:14"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10322:6:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10140:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"10143:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10137:2:14"},"nodeType":"YulFunctionCall","src":"10137:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10151:18:14","statements":[{"nodeType":"YulAssignment","src":"10153:14:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10162:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"10165:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10158:3:14"},"nodeType":"YulFunctionCall","src":"10158:9:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10153:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"10122:14:14","statements":[{"nodeType":"YulVariableDeclaration","src":"10124:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"10133:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10128:1:14","type":""}]}]},"src":"10118:282:14"}]},"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9812:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9819:3:14","type":""}],"src":"9713:694:14"},{"body":{"nodeType":"YulBlock","src":"10557:170:14","statements":[{"nodeType":"YulAssignment","src":"10567:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10579:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10590:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10575:3:14"},"nodeType":"YulFunctionCall","src":"10575:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10567:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10693:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10706:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"10717:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10702:3:14"},"nodeType":"YulFunctionCall","src":"10702:17:14"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10603:89:14"},"nodeType":"YulFunctionCall","src":"10603:117:14"},"nodeType":"YulExpressionStatement","src":"10603:117:14"}]},"name":"abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10529:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10541:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10552:4:14","type":""}],"src":"10413:314:14"},{"body":{"nodeType":"YulBlock","src":"10799:263:14","statements":[{"body":{"nodeType":"YulBlock","src":"10845:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10847:77:14"},"nodeType":"YulFunctionCall","src":"10847:79:14"},"nodeType":"YulExpressionStatement","src":"10847:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10820:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"10829:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10816:3:14"},"nodeType":"YulFunctionCall","src":"10816:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"10841:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10812:3:14"},"nodeType":"YulFunctionCall","src":"10812:32:14"},"nodeType":"YulIf","src":"10809:119:14"},{"nodeType":"YulBlock","src":"10938:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"10953:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"10967:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10957:6:14","type":""}]},{"nodeType":"YulAssignment","src":"10982:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11017:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"11028:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11013:3:14"},"nodeType":"YulFunctionCall","src":"11013:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11037:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10992:20:14"},"nodeType":"YulFunctionCall","src":"10992:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10982:6:14"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10769:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10780:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10792:6:14","type":""}],"src":"10733:329:14"},{"body":{"nodeType":"YulBlock","src":"11108:76:14","statements":[{"body":{"nodeType":"YulBlock","src":"11162:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11171:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11174:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11164:6:14"},"nodeType":"YulFunctionCall","src":"11164:12:14"},"nodeType":"YulExpressionStatement","src":"11164:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11131:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11153:5:14"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"11138:14:14"},"nodeType":"YulFunctionCall","src":"11138:21:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11128:2:14"},"nodeType":"YulFunctionCall","src":"11128:32:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11121:6:14"},"nodeType":"YulFunctionCall","src":"11121:40:14"},"nodeType":"YulIf","src":"11118:60:14"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11101:5:14","type":""}],"src":"11068:116:14"},{"body":{"nodeType":"YulBlock","src":"11239:84:14","statements":[{"nodeType":"YulAssignment","src":"11249:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11271:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11258:12:14"},"nodeType":"YulFunctionCall","src":"11258:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11249:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11311:5:14"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"11287:23:14"},"nodeType":"YulFunctionCall","src":"11287:30:14"},"nodeType":"YulExpressionStatement","src":"11287:30:14"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11217:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"11225:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11233:5:14","type":""}],"src":"11190:133:14"},{"body":{"nodeType":"YulBlock","src":"11409:388:14","statements":[{"body":{"nodeType":"YulBlock","src":"11455:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11457:77:14"},"nodeType":"YulFunctionCall","src":"11457:79:14"},"nodeType":"YulExpressionStatement","src":"11457:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11430:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"11439:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11426:3:14"},"nodeType":"YulFunctionCall","src":"11426:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"11451:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11422:3:14"},"nodeType":"YulFunctionCall","src":"11422:32:14"},"nodeType":"YulIf","src":"11419:119:14"},{"nodeType":"YulBlock","src":"11548:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"11563:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"11577:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11567:6:14","type":""}]},{"nodeType":"YulAssignment","src":"11592:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11627:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"11638:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11623:3:14"},"nodeType":"YulFunctionCall","src":"11623:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11647:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11602:20:14"},"nodeType":"YulFunctionCall","src":"11602:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11592:6:14"}]}]},{"nodeType":"YulBlock","src":"11675:115:14","statements":[{"nodeType":"YulVariableDeclaration","src":"11690:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"11704:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11694:6:14","type":""}]},{"nodeType":"YulAssignment","src":"11720:60:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11752:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"11763:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11748:3:14"},"nodeType":"YulFunctionCall","src":"11748:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11772:7:14"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"11730:17:14"},"nodeType":"YulFunctionCall","src":"11730:50:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11720:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11371:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11382:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11394:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11402:6:14","type":""}],"src":"11329:468:14"},{"body":{"nodeType":"YulBlock","src":"11831:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11848:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11851:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11841:6:14"},"nodeType":"YulFunctionCall","src":"11841:88:14"},"nodeType":"YulExpressionStatement","src":"11841:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11945:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11948:4:14","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11938:6:14"},"nodeType":"YulFunctionCall","src":"11938:15:14"},"nodeType":"YulExpressionStatement","src":"11938:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11969:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11972:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11962:6:14"},"nodeType":"YulFunctionCall","src":"11962:15:14"},"nodeType":"YulExpressionStatement","src":"11962:15:14"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"11803:180:14"},{"body":{"nodeType":"YulBlock","src":"12042:62:14","statements":[{"body":{"nodeType":"YulBlock","src":"12076:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"12078:16:14"},"nodeType":"YulFunctionCall","src":"12078:18:14"},"nodeType":"YulExpressionStatement","src":"12078:18:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12065:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"12072:1:14","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12062:2:14"},"nodeType":"YulFunctionCall","src":"12062:12:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12055:6:14"},"nodeType":"YulFunctionCall","src":"12055:20:14"},"nodeType":"YulIf","src":"12052:46:14"}]},"name":"validator_assert_t_enum$_Breed_$2020","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12035:5:14","type":""}],"src":"11989:115:14"},{"body":{"nodeType":"YulBlock","src":"12165:76:14","statements":[{"nodeType":"YulAssignment","src":"12175:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"12186:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12175:7:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12229:5:14"}],"functionName":{"name":"validator_assert_t_enum$_Breed_$2020","nodeType":"YulIdentifier","src":"12192:36:14"},"nodeType":"YulFunctionCall","src":"12192:43:14"},"nodeType":"YulExpressionStatement","src":"12192:43:14"}]},"name":"cleanup_t_enum$_Breed_$2020","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12147:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12157:7:14","type":""}],"src":"12110:131:14"},{"body":{"nodeType":"YulBlock","src":"12315:63:14","statements":[{"nodeType":"YulAssignment","src":"12325:47:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12366:5:14"}],"functionName":{"name":"cleanup_t_enum$_Breed_$2020","nodeType":"YulIdentifier","src":"12338:27:14"},"nodeType":"YulFunctionCall","src":"12338:34:14"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12325:9:14"}]}]},"name":"convert_t_enum$_Breed_$2020_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12295:5:14","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12305:9:14","type":""}],"src":"12247:131:14"},{"body":{"nodeType":"YulBlock","src":"12457:74:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12474:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12518:5:14"}],"functionName":{"name":"convert_t_enum$_Breed_$2020_to_t_uint8","nodeType":"YulIdentifier","src":"12479:38:14"},"nodeType":"YulFunctionCall","src":"12479:45:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12467:6:14"},"nodeType":"YulFunctionCall","src":"12467:58:14"},"nodeType":"YulExpressionStatement","src":"12467:58:14"}]},"name":"abi_encode_t_enum$_Breed_$2020_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12445:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12452:3:14","type":""}],"src":"12384:147:14"},{"body":{"nodeType":"YulBlock","src":"12643:132:14","statements":[{"nodeType":"YulAssignment","src":"12653:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12665:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12676:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12661:3:14"},"nodeType":"YulFunctionCall","src":"12661:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12653:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12741:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12754:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"12765:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12750:3:14"},"nodeType":"YulFunctionCall","src":"12750:17:14"}],"functionName":{"name":"abi_encode_t_enum$_Breed_$2020_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"12689:51:14"},"nodeType":"YulFunctionCall","src":"12689:79:14"},"nodeType":"YulExpressionStatement","src":"12689:79:14"}]},"name":"abi_encode_tuple_t_enum$_Breed_$2020__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12615:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12627:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12638:4:14","type":""}],"src":"12537:238:14"},{"body":{"nodeType":"YulBlock","src":"12870:28:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12887:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12890:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12880:6:14"},"nodeType":"YulFunctionCall","src":"12880:12:14"},"nodeType":"YulExpressionStatement","src":"12880:12:14"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"12781:117:14"},{"body":{"nodeType":"YulBlock","src":"12970:241:14","statements":[{"body":{"nodeType":"YulBlock","src":"13075:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13077:16:14"},"nodeType":"YulFunctionCall","src":"13077:18:14"},"nodeType":"YulExpressionStatement","src":"13077:18:14"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13047:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"13055:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13044:2:14"},"nodeType":"YulFunctionCall","src":"13044:30:14"},"nodeType":"YulIf","src":"13041:56:14"},{"nodeType":"YulAssignment","src":"13107:37:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13137:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13115:21:14"},"nodeType":"YulFunctionCall","src":"13115:29:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13107:4:14"}]},{"nodeType":"YulAssignment","src":"13181:23:14","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"13193:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"13199:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13189:3:14"},"nodeType":"YulFunctionCall","src":"13189:15:14"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13181:4:14"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"12954:6:14","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"12965:4:14","type":""}],"src":"12904:307:14"},{"body":{"nodeType":"YulBlock","src":"13268:103:14","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13291:3:14"},{"name":"src","nodeType":"YulIdentifier","src":"13296:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"13301:6:14"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"13278:12:14"},"nodeType":"YulFunctionCall","src":"13278:30:14"},"nodeType":"YulExpressionStatement","src":"13278:30:14"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13349:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"13354:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13345:3:14"},"nodeType":"YulFunctionCall","src":"13345:16:14"},{"kind":"number","nodeType":"YulLiteral","src":"13363:1:14","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13338:6:14"},"nodeType":"YulFunctionCall","src":"13338:27:14"},"nodeType":"YulExpressionStatement","src":"13338:27:14"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13250:3:14","type":""},{"name":"dst","nodeType":"YulTypedName","src":"13255:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"13260:6:14","type":""}],"src":"13217:154:14"},{"body":{"nodeType":"YulBlock","src":"13460:327:14","statements":[{"nodeType":"YulAssignment","src":"13470:74:14","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13536:6:14"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13495:40:14"},"nodeType":"YulFunctionCall","src":"13495:48:14"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"13479:15:14"},"nodeType":"YulFunctionCall","src":"13479:65:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13470:5:14"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13560:5:14"},{"name":"length","nodeType":"YulIdentifier","src":"13567:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13553:6:14"},"nodeType":"YulFunctionCall","src":"13553:21:14"},"nodeType":"YulExpressionStatement","src":"13553:21:14"},{"nodeType":"YulVariableDeclaration","src":"13583:27:14","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13598:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"13605:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13594:3:14"},"nodeType":"YulFunctionCall","src":"13594:16:14"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"13587:3:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"13648:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"13650:77:14"},"nodeType":"YulFunctionCall","src":"13650:79:14"},"nodeType":"YulExpressionStatement","src":"13650:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13629:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"13634:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13625:3:14"},"nodeType":"YulFunctionCall","src":"13625:16:14"},{"name":"end","nodeType":"YulIdentifier","src":"13643:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13622:2:14"},"nodeType":"YulFunctionCall","src":"13622:25:14"},"nodeType":"YulIf","src":"13619:112:14"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13764:3:14"},{"name":"dst","nodeType":"YulIdentifier","src":"13769:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"13774:6:14"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"13740:23:14"},"nodeType":"YulFunctionCall","src":"13740:41:14"},"nodeType":"YulExpressionStatement","src":"13740:41:14"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13433:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"13438:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"13446:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13454:5:14","type":""}],"src":"13377:410:14"},{"body":{"nodeType":"YulBlock","src":"13867:277:14","statements":[{"body":{"nodeType":"YulBlock","src":"13916:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"13918:77:14"},"nodeType":"YulFunctionCall","src":"13918:79:14"},"nodeType":"YulExpressionStatement","src":"13918:79:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13895:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"13903:4:14","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13891:3:14"},"nodeType":"YulFunctionCall","src":"13891:17:14"},{"name":"end","nodeType":"YulIdentifier","src":"13910:3:14"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13887:3:14"},"nodeType":"YulFunctionCall","src":"13887:27:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13880:6:14"},"nodeType":"YulFunctionCall","src":"13880:35:14"},"nodeType":"YulIf","src":"13877:122:14"},{"nodeType":"YulVariableDeclaration","src":"14008:34:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14035:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14022:12:14"},"nodeType":"YulFunctionCall","src":"14022:20:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14012:6:14","type":""}]},{"nodeType":"YulAssignment","src":"14051:87:14","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14111:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"14119:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14107:3:14"},"nodeType":"YulFunctionCall","src":"14107:17:14"},{"name":"length","nodeType":"YulIdentifier","src":"14126:6:14"},{"name":"end","nodeType":"YulIdentifier","src":"14134:3:14"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14060:46:14"},"nodeType":"YulFunctionCall","src":"14060:78:14"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"14051:5:14"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13845:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"13853:3:14","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13861:5:14","type":""}],"src":"13806:338:14"},{"body":{"nodeType":"YulBlock","src":"14276:817:14","statements":[{"body":{"nodeType":"YulBlock","src":"14323:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14325:77:14"},"nodeType":"YulFunctionCall","src":"14325:79:14"},"nodeType":"YulExpressionStatement","src":"14325:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14297:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"14306:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14293:3:14"},"nodeType":"YulFunctionCall","src":"14293:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"14318:3:14","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14289:3:14"},"nodeType":"YulFunctionCall","src":"14289:33:14"},"nodeType":"YulIf","src":"14286:120:14"},{"nodeType":"YulBlock","src":"14416:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"14431:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"14445:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14435:6:14","type":""}]},{"nodeType":"YulAssignment","src":"14460:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14495:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"14506:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14491:3:14"},"nodeType":"YulFunctionCall","src":"14491:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14515:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14470:20:14"},"nodeType":"YulFunctionCall","src":"14470:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14460:6:14"}]}]},{"nodeType":"YulBlock","src":"14543:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"14558:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"14572:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14562:6:14","type":""}]},{"nodeType":"YulAssignment","src":"14588:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14623:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"14634:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14619:3:14"},"nodeType":"YulFunctionCall","src":"14619:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14643:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14598:20:14"},"nodeType":"YulFunctionCall","src":"14598:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14588:6:14"}]}]},{"nodeType":"YulBlock","src":"14671:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"14686:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"14700:2:14","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14690:6:14","type":""}]},{"nodeType":"YulAssignment","src":"14716:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14751:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"14762:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14747:3:14"},"nodeType":"YulFunctionCall","src":"14747:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14771:7:14"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14726:20:14"},"nodeType":"YulFunctionCall","src":"14726:53:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14716:6:14"}]}]},{"nodeType":"YulBlock","src":"14799:287:14","statements":[{"nodeType":"YulVariableDeclaration","src":"14814:46:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14845:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"14856:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14841:3:14"},"nodeType":"YulFunctionCall","src":"14841:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14828:12:14"},"nodeType":"YulFunctionCall","src":"14828:32:14"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14818:6:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"14907:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14909:77:14"},"nodeType":"YulFunctionCall","src":"14909:79:14"},"nodeType":"YulExpressionStatement","src":"14909:79:14"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14879:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"14887:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14876:2:14"},"nodeType":"YulFunctionCall","src":"14876:30:14"},"nodeType":"YulIf","src":"14873:117:14"},{"nodeType":"YulAssignment","src":"15004:72:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15048:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"15059:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15044:3:14"},"nodeType":"YulFunctionCall","src":"15044:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15068:7:14"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"15014:29:14"},"nodeType":"YulFunctionCall","src":"15014:62:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"15004:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14222:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14233:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14245:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14253:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14261:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14269:6:14","type":""}],"src":"14150:943:14"},{"body":{"nodeType":"YulBlock","src":"15182:391:14","statements":[{"body":{"nodeType":"YulBlock","src":"15228:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15230:77:14"},"nodeType":"YulFunctionCall","src":"15230:79:14"},"nodeType":"YulExpressionStatement","src":"15230:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15203:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"15212:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15199:3:14"},"nodeType":"YulFunctionCall","src":"15199:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"15224:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15195:3:14"},"nodeType":"YulFunctionCall","src":"15195:32:14"},"nodeType":"YulIf","src":"15192:119:14"},{"nodeType":"YulBlock","src":"15321:117:14","statements":[{"nodeType":"YulVariableDeclaration","src":"15336:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"15350:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15340:6:14","type":""}]},{"nodeType":"YulAssignment","src":"15365:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15400:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"15411:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15396:3:14"},"nodeType":"YulFunctionCall","src":"15396:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15420:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15375:20:14"},"nodeType":"YulFunctionCall","src":"15375:53:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15365:6:14"}]}]},{"nodeType":"YulBlock","src":"15448:118:14","statements":[{"nodeType":"YulVariableDeclaration","src":"15463:16:14","value":{"kind":"number","nodeType":"YulLiteral","src":"15477:2:14","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15467:6:14","type":""}]},{"nodeType":"YulAssignment","src":"15493:63:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15528:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"15539:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15524:3:14"},"nodeType":"YulFunctionCall","src":"15524:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15548:7:14"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15503:20:14"},"nodeType":"YulFunctionCall","src":"15503:53:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15493:6:14"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15144:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15155:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15167:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15175:6:14","type":""}],"src":"15099:474:14"},{"body":{"nodeType":"YulBlock","src":"15607:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15624:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15627:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15617:6:14"},"nodeType":"YulFunctionCall","src":"15617:88:14"},"nodeType":"YulExpressionStatement","src":"15617:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15721:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15724:4:14","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15714:6:14"},"nodeType":"YulFunctionCall","src":"15714:15:14"},"nodeType":"YulExpressionStatement","src":"15714:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15745:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15748:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15738:6:14"},"nodeType":"YulFunctionCall","src":"15738:15:14"},"nodeType":"YulExpressionStatement","src":"15738:15:14"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"15579:180:14"},{"body":{"nodeType":"YulBlock","src":"15816:269:14","statements":[{"nodeType":"YulAssignment","src":"15826:22:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15840:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"15846:1:14","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15836:3:14"},"nodeType":"YulFunctionCall","src":"15836:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15826:6:14"}]},{"nodeType":"YulVariableDeclaration","src":"15857:38:14","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15887:4:14"},{"kind":"number","nodeType":"YulLiteral","src":"15893:1:14","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15883:3:14"},"nodeType":"YulFunctionCall","src":"15883:12:14"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"15861:18:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"15934:51:14","statements":[{"nodeType":"YulAssignment","src":"15948:27:14","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15962:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"15970:4:14","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15958:3:14"},"nodeType":"YulFunctionCall","src":"15958:17:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15948:6:14"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15914:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15907:6:14"},"nodeType":"YulFunctionCall","src":"15907:26:14"},"nodeType":"YulIf","src":"15904:81:14"},{"body":{"nodeType":"YulBlock","src":"16037:42:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"16051:16:14"},"nodeType":"YulFunctionCall","src":"16051:18:14"},"nodeType":"YulExpressionStatement","src":"16051:18:14"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16001:18:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16024:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"16032:2:14","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16021:2:14"},"nodeType":"YulFunctionCall","src":"16021:14:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15998:2:14"},"nodeType":"YulFunctionCall","src":"15998:38:14"},"nodeType":"YulIf","src":"15995:84:14"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15800:4:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15809:6:14","type":""}],"src":"15765:320:14"},{"body":{"nodeType":"YulBlock","src":"16197:114:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16219:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"16227:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16215:3:14"},"nodeType":"YulFunctionCall","src":"16215:14:14"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"16231:34:14","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16208:6:14"},"nodeType":"YulFunctionCall","src":"16208:58:14"},"nodeType":"YulExpressionStatement","src":"16208:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16287:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"16295:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16283:3:14"},"nodeType":"YulFunctionCall","src":"16283:15:14"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"16300:3:14","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16276:6:14"},"nodeType":"YulFunctionCall","src":"16276:28:14"},"nodeType":"YulExpressionStatement","src":"16276:28:14"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16189:6:14","type":""}],"src":"16091:220:14"},{"body":{"nodeType":"YulBlock","src":"16463:220:14","statements":[{"nodeType":"YulAssignment","src":"16473:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16539:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"16544:2:14","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16480:58:14"},"nodeType":"YulFunctionCall","src":"16480:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16473:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16645:3:14"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"16556:88:14"},"nodeType":"YulFunctionCall","src":"16556:93:14"},"nodeType":"YulExpressionStatement","src":"16556:93:14"},{"nodeType":"YulAssignment","src":"16658:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16669:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"16674:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16665:3:14"},"nodeType":"YulFunctionCall","src":"16665:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16658:3:14"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16451:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16459:3:14","type":""}],"src":"16317:366:14"},{"body":{"nodeType":"YulBlock","src":"16860:248:14","statements":[{"nodeType":"YulAssignment","src":"16870:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16882:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16893:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16878:3:14"},"nodeType":"YulFunctionCall","src":"16878:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16870:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16917:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"16928:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16913:3:14"},"nodeType":"YulFunctionCall","src":"16913:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16936:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"16942:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16932:3:14"},"nodeType":"YulFunctionCall","src":"16932:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16906:6:14"},"nodeType":"YulFunctionCall","src":"16906:47:14"},"nodeType":"YulExpressionStatement","src":"16906:47:14"},{"nodeType":"YulAssignment","src":"16962:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17096:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16970:124:14"},"nodeType":"YulFunctionCall","src":"16970:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16962:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16840:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16855:4:14","type":""}],"src":"16689:419:14"},{"body":{"nodeType":"YulBlock","src":"17220:143:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17242:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"17250:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17238:3:14"},"nodeType":"YulFunctionCall","src":"17238:14:14"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"17254:34:14","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17231:6:14"},"nodeType":"YulFunctionCall","src":"17231:58:14"},"nodeType":"YulExpressionStatement","src":"17231:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17310:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"17318:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17306:3:14"},"nodeType":"YulFunctionCall","src":"17306:15:14"},{"hexValue":"6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"17323:32:14","type":"","value":"ken owner nor approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17299:6:14"},"nodeType":"YulFunctionCall","src":"17299:57:14"},"nodeType":"YulExpressionStatement","src":"17299:57:14"}]},"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17212:6:14","type":""}],"src":"17114:249:14"},{"body":{"nodeType":"YulBlock","src":"17515:220:14","statements":[{"nodeType":"YulAssignment","src":"17525:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17591:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"17596:2:14","type":"","value":"62"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17532:58:14"},"nodeType":"YulFunctionCall","src":"17532:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17525:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17697:3:14"}],"functionName":{"name":"store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304","nodeType":"YulIdentifier","src":"17608:88:14"},"nodeType":"YulFunctionCall","src":"17608:93:14"},"nodeType":"YulExpressionStatement","src":"17608:93:14"},{"nodeType":"YulAssignment","src":"17710:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17721:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"17726:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17717:3:14"},"nodeType":"YulFunctionCall","src":"17717:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17710:3:14"}]}]},"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17503:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17511:3:14","type":""}],"src":"17369:366:14"},{"body":{"nodeType":"YulBlock","src":"17912:248:14","statements":[{"nodeType":"YulAssignment","src":"17922:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17934:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17945:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17930:3:14"},"nodeType":"YulFunctionCall","src":"17930:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17922:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17969:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"17980:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17965:3:14"},"nodeType":"YulFunctionCall","src":"17965:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17988:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"17994:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17984:3:14"},"nodeType":"YulFunctionCall","src":"17984:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17958:6:14"},"nodeType":"YulFunctionCall","src":"17958:47:14"},"nodeType":"YulExpressionStatement","src":"17958:47:14"},{"nodeType":"YulAssignment","src":"18014:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18148:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18022:124:14"},"nodeType":"YulFunctionCall","src":"18022:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18014:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17892:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17907:4:14","type":""}],"src":"17741:419:14"},{"body":{"nodeType":"YulBlock","src":"18292:206:14","statements":[{"nodeType":"YulAssignment","src":"18302:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18314:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18325:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18310:3:14"},"nodeType":"YulFunctionCall","src":"18310:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18302:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18382:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18395:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18406:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18391:3:14"},"nodeType":"YulFunctionCall","src":"18391:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18338:43:14"},"nodeType":"YulFunctionCall","src":"18338:71:14"},"nodeType":"YulExpressionStatement","src":"18338:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18463:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18476:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"18487:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18472:3:14"},"nodeType":"YulFunctionCall","src":"18472:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18419:43:14"},"nodeType":"YulFunctionCall","src":"18419:72:14"},"nodeType":"YulExpressionStatement","src":"18419:72:14"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18256:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18268:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18276:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18287:4:14","type":""}],"src":"18166:332:14"},{"body":{"nodeType":"YulBlock","src":"18610:127:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18632:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"18640:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18628:3:14"},"nodeType":"YulFunctionCall","src":"18628:14:14"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"18644:34:14","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18621:6:14"},"nodeType":"YulFunctionCall","src":"18621:58:14"},"nodeType":"YulExpressionStatement","src":"18621:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18700:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"18708:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18696:3:14"},"nodeType":"YulFunctionCall","src":"18696:15:14"},{"hexValue":"72206e6f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"18713:16:14","type":"","value":"r nor approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18689:6:14"},"nodeType":"YulFunctionCall","src":"18689:41:14"},"nodeType":"YulExpressionStatement","src":"18689:41:14"}]},"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18602:6:14","type":""}],"src":"18504:233:14"},{"body":{"nodeType":"YulBlock","src":"18889:220:14","statements":[{"nodeType":"YulAssignment","src":"18899:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18965:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"18970:2:14","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18906:58:14"},"nodeType":"YulFunctionCall","src":"18906:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18899:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19071:3:14"}],"functionName":{"name":"store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b","nodeType":"YulIdentifier","src":"18982:88:14"},"nodeType":"YulFunctionCall","src":"18982:93:14"},"nodeType":"YulExpressionStatement","src":"18982:93:14"},{"nodeType":"YulAssignment","src":"19084:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19095:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"19100:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19091:3:14"},"nodeType":"YulFunctionCall","src":"19091:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19084:3:14"}]}]},"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18877:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18885:3:14","type":""}],"src":"18743:366:14"},{"body":{"nodeType":"YulBlock","src":"19286:248:14","statements":[{"nodeType":"YulAssignment","src":"19296:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19308:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19319:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19304:3:14"},"nodeType":"YulFunctionCall","src":"19304:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19296:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19343:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"19354:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19339:3:14"},"nodeType":"YulFunctionCall","src":"19339:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19362:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"19368:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19358:3:14"},"nodeType":"YulFunctionCall","src":"19358:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19332:6:14"},"nodeType":"YulFunctionCall","src":"19332:47:14"},"nodeType":"YulExpressionStatement","src":"19332:47:14"},{"nodeType":"YulAssignment","src":"19388:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19522:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19396:124:14"},"nodeType":"YulFunctionCall","src":"19396:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19388:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19266:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19281:4:14","type":""}],"src":"19115:419:14"},{"body":{"nodeType":"YulBlock","src":"19568:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19585:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19588:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19578:6:14"},"nodeType":"YulFunctionCall","src":"19578:88:14"},"nodeType":"YulExpressionStatement","src":"19578:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19682:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19685:4:14","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19675:6:14"},"nodeType":"YulFunctionCall","src":"19675:15:14"},"nodeType":"YulExpressionStatement","src":"19675:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19706:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19709:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19699:6:14"},"nodeType":"YulFunctionCall","src":"19699:15:14"},"nodeType":"YulExpressionStatement","src":"19699:15:14"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"19540:180:14"},{"body":{"nodeType":"YulBlock","src":"19839:34:14","statements":[{"nodeType":"YulAssignment","src":"19849:18:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"19864:3:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"19849:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19811:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"19816:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"19827:11:14","type":""}],"src":"19726:147:14"},{"body":{"nodeType":"YulBlock","src":"19985:8:14","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19977:6:14","type":""}],"src":"19879:114:14"},{"body":{"nodeType":"YulBlock","src":"20162:235:14","statements":[{"nodeType":"YulAssignment","src":"20172:90:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20255:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"20260:1:14","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20179:75:14"},"nodeType":"YulFunctionCall","src":"20179:83:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20172:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20360:3:14"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"20271:88:14"},"nodeType":"YulFunctionCall","src":"20271:93:14"},"nodeType":"YulExpressionStatement","src":"20271:93:14"},{"nodeType":"YulAssignment","src":"20373:18:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20384:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"20389:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20380:3:14"},"nodeType":"YulFunctionCall","src":"20380:11:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20373:3:14"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20150:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20158:3:14","type":""}],"src":"19999:398:14"},{"body":{"nodeType":"YulBlock","src":"20591:191:14","statements":[{"nodeType":"YulAssignment","src":"20602:154:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20752:3:14"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20609:141:14"},"nodeType":"YulFunctionCall","src":"20609:147:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20602:3:14"}]},{"nodeType":"YulAssignment","src":"20766:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"20773:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20766:3:14"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20578:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20587:3:14","type":""}],"src":"20403:379:14"},{"body":{"nodeType":"YulBlock","src":"20894:68:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20916:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"20924:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20912:3:14"},"nodeType":"YulFunctionCall","src":"20912:14:14"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"20928:26:14","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20905:6:14"},"nodeType":"YulFunctionCall","src":"20905:50:14"},"nodeType":"YulExpressionStatement","src":"20905:50:14"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20886:6:14","type":""}],"src":"20788:174:14"},{"body":{"nodeType":"YulBlock","src":"21114:220:14","statements":[{"nodeType":"YulAssignment","src":"21124:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21190:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"21195:2:14","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21131:58:14"},"nodeType":"YulFunctionCall","src":"21131:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21124:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21296:3:14"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"21207:88:14"},"nodeType":"YulFunctionCall","src":"21207:93:14"},"nodeType":"YulExpressionStatement","src":"21207:93:14"},{"nodeType":"YulAssignment","src":"21309:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21320:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"21325:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21316:3:14"},"nodeType":"YulFunctionCall","src":"21316:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21309:3:14"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21102:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21110:3:14","type":""}],"src":"20968:366:14"},{"body":{"nodeType":"YulBlock","src":"21511:248:14","statements":[{"nodeType":"YulAssignment","src":"21521:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21533:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21544:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21529:3:14"},"nodeType":"YulFunctionCall","src":"21529:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21521:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21568:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"21579:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21564:3:14"},"nodeType":"YulFunctionCall","src":"21564:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21587:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"21593:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21583:3:14"},"nodeType":"YulFunctionCall","src":"21583:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21557:6:14"},"nodeType":"YulFunctionCall","src":"21557:47:14"},"nodeType":"YulExpressionStatement","src":"21557:47:14"},{"nodeType":"YulAssignment","src":"21613:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21747:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21621:124:14"},"nodeType":"YulFunctionCall","src":"21621:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21613:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21491:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21506:4:14","type":""}],"src":"21340:419:14"},{"body":{"nodeType":"YulBlock","src":"21871:122:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21893:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"21901:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21889:3:14"},"nodeType":"YulFunctionCall","src":"21889:14:14"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"21905:34:14","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21882:6:14"},"nodeType":"YulFunctionCall","src":"21882:58:14"},"nodeType":"YulExpressionStatement","src":"21882:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21961:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"21969:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21957:3:14"},"nodeType":"YulFunctionCall","src":"21957:15:14"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"21974:11:14","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21950:6:14"},"nodeType":"YulFunctionCall","src":"21950:36:14"},"nodeType":"YulExpressionStatement","src":"21950:36:14"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21863:6:14","type":""}],"src":"21765:228:14"},{"body":{"nodeType":"YulBlock","src":"22145:220:14","statements":[{"nodeType":"YulAssignment","src":"22155:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22221:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"22226:2:14","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22162:58:14"},"nodeType":"YulFunctionCall","src":"22162:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22155:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22327:3:14"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"22238:88:14"},"nodeType":"YulFunctionCall","src":"22238:93:14"},"nodeType":"YulExpressionStatement","src":"22238:93:14"},{"nodeType":"YulAssignment","src":"22340:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22351:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"22356:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22347:3:14"},"nodeType":"YulFunctionCall","src":"22347:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22340:3:14"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22133:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22141:3:14","type":""}],"src":"21999:366:14"},{"body":{"nodeType":"YulBlock","src":"22542:248:14","statements":[{"nodeType":"YulAssignment","src":"22552:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22564:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"22575:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22560:3:14"},"nodeType":"YulFunctionCall","src":"22560:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22552:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22599:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"22610:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22595:3:14"},"nodeType":"YulFunctionCall","src":"22595:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22618:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"22624:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22614:3:14"},"nodeType":"YulFunctionCall","src":"22614:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22588:6:14"},"nodeType":"YulFunctionCall","src":"22588:47:14"},"nodeType":"YulExpressionStatement","src":"22588:47:14"},{"nodeType":"YulAssignment","src":"22644:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22778:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22652:124:14"},"nodeType":"YulFunctionCall","src":"22652:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22644:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22522:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22537:4:14","type":""}],"src":"22371:419:14"},{"body":{"nodeType":"YulBlock","src":"22824:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22841:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22844:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22834:6:14"},"nodeType":"YulFunctionCall","src":"22834:88:14"},"nodeType":"YulExpressionStatement","src":"22834:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22938:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22941:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22931:6:14"},"nodeType":"YulFunctionCall","src":"22931:15:14"},"nodeType":"YulExpressionStatement","src":"22931:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22962:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22965:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22955:6:14"},"nodeType":"YulFunctionCall","src":"22955:15:14"},"nodeType":"YulExpressionStatement","src":"22955:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"22796:180:14"},{"body":{"nodeType":"YulBlock","src":"23026:261:14","statements":[{"nodeType":"YulAssignment","src":"23036:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23059:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23041:17:14"},"nodeType":"YulFunctionCall","src":"23041:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23036:1:14"}]},{"nodeType":"YulAssignment","src":"23070:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23093:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23075:17:14"},"nodeType":"YulFunctionCall","src":"23075:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23070:1:14"}]},{"body":{"nodeType":"YulBlock","src":"23233:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23235:16:14"},"nodeType":"YulFunctionCall","src":"23235:18:14"},"nodeType":"YulExpressionStatement","src":"23235:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23154:1:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23161:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"23229:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23157:3:14"},"nodeType":"YulFunctionCall","src":"23157:74:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23151:2:14"},"nodeType":"YulFunctionCall","src":"23151:81:14"},"nodeType":"YulIf","src":"23148:107:14"},{"nodeType":"YulAssignment","src":"23265:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23276:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"23279:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23272:3:14"},"nodeType":"YulFunctionCall","src":"23272:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"23265:3:14"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23013:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"23016:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"23022:3:14","type":""}],"src":"22982:305:14"},{"body":{"nodeType":"YulBlock","src":"23336:190:14","statements":[{"nodeType":"YulAssignment","src":"23346:33:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23373:5:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23355:17:14"},"nodeType":"YulFunctionCall","src":"23355:24:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23346:5:14"}]},{"body":{"nodeType":"YulBlock","src":"23469:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23471:16:14"},"nodeType":"YulFunctionCall","src":"23471:18:14"},"nodeType":"YulExpressionStatement","src":"23471:18:14"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23394:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"23401:66:14","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23391:2:14"},"nodeType":"YulFunctionCall","src":"23391:77:14"},"nodeType":"YulIf","src":"23388:103:14"},{"nodeType":"YulAssignment","src":"23500:20:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23511:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"23518:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23507:3:14"},"nodeType":"YulFunctionCall","src":"23507:13:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23500:3:14"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23322:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"23332:3:14","type":""}],"src":"23293:233:14"},{"body":{"nodeType":"YulBlock","src":"23577:32:14","statements":[{"nodeType":"YulAssignment","src":"23587:16:14","value":{"name":"value","nodeType":"YulIdentifier","src":"23598:5:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"23587:7:14"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23559:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"23569:7:14","type":""}],"src":"23532:77:14"},{"body":{"nodeType":"YulBlock","src":"23680:53:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23697:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23720:5:14"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"23702:17:14"},"nodeType":"YulFunctionCall","src":"23702:24:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23690:6:14"},"nodeType":"YulFunctionCall","src":"23690:37:14"},"nodeType":"YulExpressionStatement","src":"23690:37:14"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23668:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23675:3:14","type":""}],"src":"23615:118:14"},{"body":{"nodeType":"YulBlock","src":"23783:57:14","statements":[{"nodeType":"YulAssignment","src":"23793:41:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23808:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"23815:18:14","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23804:3:14"},"nodeType":"YulFunctionCall","src":"23804:30:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"23793:7:14"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23765:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"23775:7:14","type":""}],"src":"23739:101:14"},{"body":{"nodeType":"YulBlock","src":"23909:52:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23926:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23948:5:14"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"23931:16:14"},"nodeType":"YulFunctionCall","src":"23931:23:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23919:6:14"},"nodeType":"YulFunctionCall","src":"23919:36:14"},"nodeType":"YulExpressionStatement","src":"23919:36:14"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23897:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23904:3:14","type":""}],"src":"23846:115:14"},{"body":{"nodeType":"YulBlock","src":"24011:45:14","statements":[{"nodeType":"YulAssignment","src":"24021:29:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24036:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"24043:6:14","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24032:3:14"},"nodeType":"YulFunctionCall","src":"24032:18:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24021:7:14"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23993:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24003:7:14","type":""}],"src":"23967:89:14"},{"body":{"nodeType":"YulBlock","src":"24125:52:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24142:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24164:5:14"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"24147:16:14"},"nodeType":"YulFunctionCall","src":"24147:23:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24135:6:14"},"nodeType":"YulFunctionCall","src":"24135:36:14"},"nodeType":"YulExpressionStatement","src":"24135:36:14"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24113:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24120:3:14","type":""}],"src":"24062:115:14"},{"body":{"nodeType":"YulBlock","src":"24227:49:14","statements":[{"nodeType":"YulAssignment","src":"24237:33:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24252:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"24259:10:14","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24248:3:14"},"nodeType":"YulFunctionCall","src":"24248:22:14"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24237:7:14"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24209:5:14","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24219:7:14","type":""}],"src":"24183:93:14"},{"body":{"nodeType":"YulBlock","src":"24345:52:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24362:3:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24384:5:14"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"24367:16:14"},"nodeType":"YulFunctionCall","src":"24367:23:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24355:6:14"},"nodeType":"YulFunctionCall","src":"24355:36:14"},"nodeType":"YulExpressionStatement","src":"24355:36:14"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24333:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24340:3:14","type":""}],"src":"24282:115:14"},{"body":{"nodeType":"YulBlock","src":"24605:446:14","statements":[{"nodeType":"YulAssignment","src":"24615:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24627:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24638:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24623:3:14"},"nodeType":"YulFunctionCall","src":"24623:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24615:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24696:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24709:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24720:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24705:3:14"},"nodeType":"YulFunctionCall","src":"24705:17:14"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"24652:43:14"},"nodeType":"YulFunctionCall","src":"24652:71:14"},"nodeType":"YulExpressionStatement","src":"24652:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24775:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24788:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24799:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24784:3:14"},"nodeType":"YulFunctionCall","src":"24784:18:14"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"24733:41:14"},"nodeType":"YulFunctionCall","src":"24733:70:14"},"nodeType":"YulExpressionStatement","src":"24733:70:14"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24855:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24868:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24879:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24864:3:14"},"nodeType":"YulFunctionCall","src":"24864:18:14"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"24813:41:14"},"nodeType":"YulFunctionCall","src":"24813:70:14"},"nodeType":"YulExpressionStatement","src":"24813:70:14"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24935:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24948:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"24959:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24944:3:14"},"nodeType":"YulFunctionCall","src":"24944:18:14"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"24893:41:14"},"nodeType":"YulFunctionCall","src":"24893:70:14"},"nodeType":"YulExpressionStatement","src":"24893:70:14"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"25015:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25028:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"25039:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25024:3:14"},"nodeType":"YulFunctionCall","src":"25024:19:14"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"24973:41:14"},"nodeType":"YulFunctionCall","src":"24973:71:14"},"nodeType":"YulExpressionStatement","src":"24973:71:14"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24545:9:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24557:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24565:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24573:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24581:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24589:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24600:4:14","type":""}],"src":"24403:648:14"},{"body":{"nodeType":"YulBlock","src":"25120:80:14","statements":[{"nodeType":"YulAssignment","src":"25130:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25145:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25139:5:14"},"nodeType":"YulFunctionCall","src":"25139:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25130:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25188:5:14"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"25161:26:14"},"nodeType":"YulFunctionCall","src":"25161:33:14"},"nodeType":"YulExpressionStatement","src":"25161:33:14"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"25098:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"25106:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"25114:5:14","type":""}],"src":"25057:143:14"},{"body":{"nodeType":"YulBlock","src":"25283:274:14","statements":[{"body":{"nodeType":"YulBlock","src":"25329:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"25331:77:14"},"nodeType":"YulFunctionCall","src":"25331:79:14"},"nodeType":"YulExpressionStatement","src":"25331:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"25304:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"25313:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25300:3:14"},"nodeType":"YulFunctionCall","src":"25300:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"25325:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25296:3:14"},"nodeType":"YulFunctionCall","src":"25296:32:14"},"nodeType":"YulIf","src":"25293:119:14"},{"nodeType":"YulBlock","src":"25422:128:14","statements":[{"nodeType":"YulVariableDeclaration","src":"25437:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"25451:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25441:6:14","type":""}]},{"nodeType":"YulAssignment","src":"25466:74:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25512:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"25523:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25508:3:14"},"nodeType":"YulFunctionCall","src":"25508:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25532:7:14"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"25476:31:14"},"nodeType":"YulFunctionCall","src":"25476:64:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25466:6:14"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25253:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25264:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"25276:6:14","type":""}],"src":"25206:351:14"},{"body":{"nodeType":"YulBlock","src":"25677:34:14","statements":[{"nodeType":"YulAssignment","src":"25687:18:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"25702:3:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"25687:11:14"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25649:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"25654:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"25665:11:14","type":""}],"src":"25563:148:14"},{"body":{"nodeType":"YulBlock","src":"25827:267:14","statements":[{"nodeType":"YulVariableDeclaration","src":"25837:53:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25884:5:14"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25851:32:14"},"nodeType":"YulFunctionCall","src":"25851:39:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"25841:6:14","type":""}]},{"nodeType":"YulAssignment","src":"25899:96:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25983:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"25988:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25906:76:14"},"nodeType":"YulFunctionCall","src":"25906:89:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25899:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26030:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"26037:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26026:3:14"},"nodeType":"YulFunctionCall","src":"26026:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"26044:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"26049:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"26004:21:14"},"nodeType":"YulFunctionCall","src":"26004:52:14"},"nodeType":"YulExpressionStatement","src":"26004:52:14"},{"nodeType":"YulAssignment","src":"26065:23:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26076:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"26081:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26072:3:14"},"nodeType":"YulFunctionCall","src":"26072:16:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26065:3:14"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25808:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"25815:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25823:3:14","type":""}],"src":"25717:377:14"},{"body":{"nodeType":"YulBlock","src":"26284:251:14","statements":[{"nodeType":"YulAssignment","src":"26295:102:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26384:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"26393:3:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26302:81:14"},"nodeType":"YulFunctionCall","src":"26302:95:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26295:3:14"}]},{"nodeType":"YulAssignment","src":"26407:102:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26496:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"26505:3:14"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26414:81:14"},"nodeType":"YulFunctionCall","src":"26414:95:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26407:3:14"}]},{"nodeType":"YulAssignment","src":"26519:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"26526:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26519:3:14"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26255:3:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26261:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26269:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26280:3:14","type":""}],"src":"26100:435:14"},{"body":{"nodeType":"YulBlock","src":"26647:119:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26669:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"26677:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26665:3:14"},"nodeType":"YulFunctionCall","src":"26665:14:14"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"26681:34:14","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26658:6:14"},"nodeType":"YulFunctionCall","src":"26658:58:14"},"nodeType":"YulExpressionStatement","src":"26658:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26737:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"26745:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26733:3:14"},"nodeType":"YulFunctionCall","src":"26733:15:14"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"26750:8:14","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26726:6:14"},"nodeType":"YulFunctionCall","src":"26726:33:14"},"nodeType":"YulExpressionStatement","src":"26726:33:14"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26639:6:14","type":""}],"src":"26541:225:14"},{"body":{"nodeType":"YulBlock","src":"26918:220:14","statements":[{"nodeType":"YulAssignment","src":"26928:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26994:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"26999:2:14","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26935:58:14"},"nodeType":"YulFunctionCall","src":"26935:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26928:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27100:3:14"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"27011:88:14"},"nodeType":"YulFunctionCall","src":"27011:93:14"},"nodeType":"YulExpressionStatement","src":"27011:93:14"},{"nodeType":"YulAssignment","src":"27113:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27124:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"27129:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27120:3:14"},"nodeType":"YulFunctionCall","src":"27120:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27113:3:14"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26906:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26914:3:14","type":""}],"src":"26772:366:14"},{"body":{"nodeType":"YulBlock","src":"27315:248:14","statements":[{"nodeType":"YulAssignment","src":"27325:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27337:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27348:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27333:3:14"},"nodeType":"YulFunctionCall","src":"27333:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27325:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27372:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"27383:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27368:3:14"},"nodeType":"YulFunctionCall","src":"27368:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27391:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"27397:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27387:3:14"},"nodeType":"YulFunctionCall","src":"27387:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27361:6:14"},"nodeType":"YulFunctionCall","src":"27361:47:14"},"nodeType":"YulExpressionStatement","src":"27361:47:14"},{"nodeType":"YulAssignment","src":"27417:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27551:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27425:124:14"},"nodeType":"YulFunctionCall","src":"27425:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27417:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27295:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27310:4:14","type":""}],"src":"27144:419:14"},{"body":{"nodeType":"YulBlock","src":"27597:152:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27614:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27617:77:14","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27607:6:14"},"nodeType":"YulFunctionCall","src":"27607:88:14"},"nodeType":"YulExpressionStatement","src":"27607:88:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27711:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27714:4:14","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27704:6:14"},"nodeType":"YulFunctionCall","src":"27704:15:14"},"nodeType":"YulExpressionStatement","src":"27704:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27735:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27738:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27728:6:14"},"nodeType":"YulFunctionCall","src":"27728:15:14"},"nodeType":"YulExpressionStatement","src":"27728:15:14"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"27569:180:14"},{"body":{"nodeType":"YulBlock","src":"27789:142:14","statements":[{"nodeType":"YulAssignment","src":"27799:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27822:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27804:17:14"},"nodeType":"YulFunctionCall","src":"27804:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"27799:1:14"}]},{"nodeType":"YulAssignment","src":"27833:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27856:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27838:17:14"},"nodeType":"YulFunctionCall","src":"27838:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"27833:1:14"}]},{"body":{"nodeType":"YulBlock","src":"27880:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"27882:16:14"},"nodeType":"YulFunctionCall","src":"27882:18:14"},"nodeType":"YulExpressionStatement","src":"27882:18:14"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27877:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27870:6:14"},"nodeType":"YulFunctionCall","src":"27870:9:14"},"nodeType":"YulIf","src":"27867:35:14"},{"nodeType":"YulAssignment","src":"27911:14:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27920:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"27923:1:14"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"27916:3:14"},"nodeType":"YulFunctionCall","src":"27916:9:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"27911:1:14"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27778:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"27781:1:14","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"27787:1:14","type":""}],"src":"27755:176:14"},{"body":{"nodeType":"YulBlock","src":"28071:214:14","statements":[{"nodeType":"YulAssignment","src":"28081:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28093:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28104:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28089:3:14"},"nodeType":"YulFunctionCall","src":"28089:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28081:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28169:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28182:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28193:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28178:3:14"},"nodeType":"YulFunctionCall","src":"28178:17:14"}],"functionName":{"name":"abi_encode_t_enum$_Breed_$2020_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"28117:51:14"},"nodeType":"YulFunctionCall","src":"28117:79:14"},"nodeType":"YulExpressionStatement","src":"28117:79:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28250:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28263:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"28274:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28259:3:14"},"nodeType":"YulFunctionCall","src":"28259:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28206:43:14"},"nodeType":"YulFunctionCall","src":"28206:72:14"},"nodeType":"YulExpressionStatement","src":"28206:72:14"}]},"name":"abi_encode_tuple_t_enum$_Breed_$2020_t_address__to_t_uint8_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28035:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28047:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28055:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28066:4:14","type":""}],"src":"27937:348:14"},{"body":{"nodeType":"YulBlock","src":"28397:118:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28419:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"28427:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28415:3:14"},"nodeType":"YulFunctionCall","src":"28415:14:14"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"28431:34:14","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28408:6:14"},"nodeType":"YulFunctionCall","src":"28408:58:14"},"nodeType":"YulExpressionStatement","src":"28408:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28487:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"28495:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28483:3:14"},"nodeType":"YulFunctionCall","src":"28483:15:14"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"28500:7:14","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28476:6:14"},"nodeType":"YulFunctionCall","src":"28476:32:14"},"nodeType":"YulExpressionStatement","src":"28476:32:14"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28389:6:14","type":""}],"src":"28291:224:14"},{"body":{"nodeType":"YulBlock","src":"28667:220:14","statements":[{"nodeType":"YulAssignment","src":"28677:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28743:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"28748:2:14","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28684:58:14"},"nodeType":"YulFunctionCall","src":"28684:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28677:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28849:3:14"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"28760:88:14"},"nodeType":"YulFunctionCall","src":"28760:93:14"},"nodeType":"YulExpressionStatement","src":"28760:93:14"},{"nodeType":"YulAssignment","src":"28862:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28873:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"28878:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28869:3:14"},"nodeType":"YulFunctionCall","src":"28869:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28862:3:14"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28655:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28663:3:14","type":""}],"src":"28521:366:14"},{"body":{"nodeType":"YulBlock","src":"29064:248:14","statements":[{"nodeType":"YulAssignment","src":"29074:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29086:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"29097:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29082:3:14"},"nodeType":"YulFunctionCall","src":"29082:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29074:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29121:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"29132:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29117:3:14"},"nodeType":"YulFunctionCall","src":"29117:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29140:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"29146:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29136:3:14"},"nodeType":"YulFunctionCall","src":"29136:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29110:6:14"},"nodeType":"YulFunctionCall","src":"29110:47:14"},"nodeType":"YulExpressionStatement","src":"29110:47:14"},{"nodeType":"YulAssignment","src":"29166:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29300:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29174:124:14"},"nodeType":"YulFunctionCall","src":"29174:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29166:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29044:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29059:4:14","type":""}],"src":"28893:419:14"},{"body":{"nodeType":"YulBlock","src":"29424:117:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29446:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"29454:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29442:3:14"},"nodeType":"YulFunctionCall","src":"29442:14:14"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"29458:34:14","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29435:6:14"},"nodeType":"YulFunctionCall","src":"29435:58:14"},"nodeType":"YulExpressionStatement","src":"29435:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29514:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"29522:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29510:3:14"},"nodeType":"YulFunctionCall","src":"29510:15:14"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"29527:6:14","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29503:6:14"},"nodeType":"YulFunctionCall","src":"29503:31:14"},"nodeType":"YulExpressionStatement","src":"29503:31:14"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29416:6:14","type":""}],"src":"29318:223:14"},{"body":{"nodeType":"YulBlock","src":"29693:220:14","statements":[{"nodeType":"YulAssignment","src":"29703:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29769:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"29774:2:14","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29710:58:14"},"nodeType":"YulFunctionCall","src":"29710:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29703:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29875:3:14"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"29786:88:14"},"nodeType":"YulFunctionCall","src":"29786:93:14"},"nodeType":"YulExpressionStatement","src":"29786:93:14"},{"nodeType":"YulAssignment","src":"29888:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29899:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"29904:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29895:3:14"},"nodeType":"YulFunctionCall","src":"29895:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29888:3:14"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29681:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29689:3:14","type":""}],"src":"29547:366:14"},{"body":{"nodeType":"YulBlock","src":"30090:248:14","statements":[{"nodeType":"YulAssignment","src":"30100:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30112:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"30123:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30108:3:14"},"nodeType":"YulFunctionCall","src":"30108:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30100:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30147:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"30158:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30143:3:14"},"nodeType":"YulFunctionCall","src":"30143:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30166:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"30172:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30162:3:14"},"nodeType":"YulFunctionCall","src":"30162:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30136:6:14"},"nodeType":"YulFunctionCall","src":"30136:47:14"},"nodeType":"YulExpressionStatement","src":"30136:47:14"},{"nodeType":"YulAssignment","src":"30192:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30326:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30200:124:14"},"nodeType":"YulFunctionCall","src":"30200:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30192:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30070:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30085:4:14","type":""}],"src":"29919:419:14"},{"body":{"nodeType":"YulBlock","src":"30389:146:14","statements":[{"nodeType":"YulAssignment","src":"30399:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30422:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30404:17:14"},"nodeType":"YulFunctionCall","src":"30404:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"30399:1:14"}]},{"nodeType":"YulAssignment","src":"30433:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"30456:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30438:17:14"},"nodeType":"YulFunctionCall","src":"30438:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"30433:1:14"}]},{"body":{"nodeType":"YulBlock","src":"30480:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30482:16:14"},"nodeType":"YulFunctionCall","src":"30482:18:14"},"nodeType":"YulExpressionStatement","src":"30482:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30474:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"30477:1:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"30471:2:14"},"nodeType":"YulFunctionCall","src":"30471:8:14"},"nodeType":"YulIf","src":"30468:34:14"},{"nodeType":"YulAssignment","src":"30512:17:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30524:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"30527:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30520:3:14"},"nodeType":"YulFunctionCall","src":"30520:9:14"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"30512:4:14"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"30375:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"30378:1:14","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"30384:4:14","type":""}],"src":"30344:191:14"},{"body":{"nodeType":"YulBlock","src":"30647:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30669:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"30677:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30665:3:14"},"nodeType":"YulFunctionCall","src":"30665:14:14"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"30681:34:14","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30658:6:14"},"nodeType":"YulFunctionCall","src":"30658:58:14"},"nodeType":"YulExpressionStatement","src":"30658:58:14"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30639:6:14","type":""}],"src":"30541:182:14"},{"body":{"nodeType":"YulBlock","src":"30875:220:14","statements":[{"nodeType":"YulAssignment","src":"30885:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30951:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"30956:2:14","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30892:58:14"},"nodeType":"YulFunctionCall","src":"30892:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30885:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31057:3:14"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"30968:88:14"},"nodeType":"YulFunctionCall","src":"30968:93:14"},"nodeType":"YulExpressionStatement","src":"30968:93:14"},{"nodeType":"YulAssignment","src":"31070:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31081:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"31086:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31077:3:14"},"nodeType":"YulFunctionCall","src":"31077:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31070:3:14"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30863:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30871:3:14","type":""}],"src":"30729:366:14"},{"body":{"nodeType":"YulBlock","src":"31272:248:14","statements":[{"nodeType":"YulAssignment","src":"31282:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31294:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"31305:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31290:3:14"},"nodeType":"YulFunctionCall","src":"31290:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31282:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31329:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"31340:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31325:3:14"},"nodeType":"YulFunctionCall","src":"31325:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31348:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"31354:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31344:3:14"},"nodeType":"YulFunctionCall","src":"31344:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31318:6:14"},"nodeType":"YulFunctionCall","src":"31318:47:14"},"nodeType":"YulExpressionStatement","src":"31318:47:14"},{"nodeType":"YulAssignment","src":"31374:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31508:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31382:124:14"},"nodeType":"YulFunctionCall","src":"31382:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31374:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31252:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31267:4:14","type":""}],"src":"31101:419:14"},{"body":{"nodeType":"YulBlock","src":"31632:69:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31654:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"31662:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31650:3:14"},"nodeType":"YulFunctionCall","src":"31650:14:14"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"31666:27:14","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31643:6:14"},"nodeType":"YulFunctionCall","src":"31643:51:14"},"nodeType":"YulExpressionStatement","src":"31643:51:14"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31624:6:14","type":""}],"src":"31526:175:14"},{"body":{"nodeType":"YulBlock","src":"31853:220:14","statements":[{"nodeType":"YulAssignment","src":"31863:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31929:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"31934:2:14","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31870:58:14"},"nodeType":"YulFunctionCall","src":"31870:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31863:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32035:3:14"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"31946:88:14"},"nodeType":"YulFunctionCall","src":"31946:93:14"},"nodeType":"YulExpressionStatement","src":"31946:93:14"},{"nodeType":"YulAssignment","src":"32048:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32059:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"32064:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32055:3:14"},"nodeType":"YulFunctionCall","src":"32055:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32048:3:14"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31841:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31849:3:14","type":""}],"src":"31707:366:14"},{"body":{"nodeType":"YulBlock","src":"32250:248:14","statements":[{"nodeType":"YulAssignment","src":"32260:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32272:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"32283:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32268:3:14"},"nodeType":"YulFunctionCall","src":"32268:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32260:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32307:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"32318:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32303:3:14"},"nodeType":"YulFunctionCall","src":"32303:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32326:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"32332:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32322:3:14"},"nodeType":"YulFunctionCall","src":"32322:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32296:6:14"},"nodeType":"YulFunctionCall","src":"32296:47:14"},"nodeType":"YulExpressionStatement","src":"32296:47:14"},{"nodeType":"YulAssignment","src":"32352:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32486:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32360:124:14"},"nodeType":"YulFunctionCall","src":"32360:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32352:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32230:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32245:4:14","type":""}],"src":"32079:419:14"},{"body":{"nodeType":"YulBlock","src":"32610:131:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32632:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"32640:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32628:3:14"},"nodeType":"YulFunctionCall","src":"32628:14:14"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"32644:34:14","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32621:6:14"},"nodeType":"YulFunctionCall","src":"32621:58:14"},"nodeType":"YulExpressionStatement","src":"32621:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32700:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"32708:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32696:3:14"},"nodeType":"YulFunctionCall","src":"32696:15:14"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"32713:20:14","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32689:6:14"},"nodeType":"YulFunctionCall","src":"32689:45:14"},"nodeType":"YulExpressionStatement","src":"32689:45:14"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32602:6:14","type":""}],"src":"32504:237:14"},{"body":{"nodeType":"YulBlock","src":"32893:220:14","statements":[{"nodeType":"YulAssignment","src":"32903:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32969:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"32974:2:14","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32910:58:14"},"nodeType":"YulFunctionCall","src":"32910:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32903:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33075:3:14"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"32986:88:14"},"nodeType":"YulFunctionCall","src":"32986:93:14"},"nodeType":"YulExpressionStatement","src":"32986:93:14"},{"nodeType":"YulAssignment","src":"33088:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33099:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"33104:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33095:3:14"},"nodeType":"YulFunctionCall","src":"33095:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33088:3:14"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32881:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32889:3:14","type":""}],"src":"32747:366:14"},{"body":{"nodeType":"YulBlock","src":"33290:248:14","statements":[{"nodeType":"YulAssignment","src":"33300:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33312:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"33323:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33308:3:14"},"nodeType":"YulFunctionCall","src":"33308:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33300:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33347:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"33358:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33343:3:14"},"nodeType":"YulFunctionCall","src":"33343:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33366:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"33372:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33362:3:14"},"nodeType":"YulFunctionCall","src":"33362:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33336:6:14"},"nodeType":"YulFunctionCall","src":"33336:47:14"},"nodeType":"YulExpressionStatement","src":"33336:47:14"},{"nodeType":"YulAssignment","src":"33392:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33526:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33400:124:14"},"nodeType":"YulFunctionCall","src":"33400:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33392:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33270:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33285:4:14","type":""}],"src":"33119:419:14"},{"body":{"nodeType":"YulBlock","src":"33650:127:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33672:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"33680:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33668:3:14"},"nodeType":"YulFunctionCall","src":"33668:14:14"},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e","kind":"string","nodeType":"YulLiteral","src":"33684:34:14","type":"","value":"ERC721URIStorage: URI set of non"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33661:6:14"},"nodeType":"YulFunctionCall","src":"33661:58:14"},"nodeType":"YulExpressionStatement","src":"33661:58:14"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33740:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"33748:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33736:3:14"},"nodeType":"YulFunctionCall","src":"33736:15:14"},{"hexValue":"6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"33753:16:14","type":"","value":"existent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33729:6:14"},"nodeType":"YulFunctionCall","src":"33729:41:14"},"nodeType":"YulExpressionStatement","src":"33729:41:14"}]},"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33642:6:14","type":""}],"src":"33544:233:14"},{"body":{"nodeType":"YulBlock","src":"33929:220:14","statements":[{"nodeType":"YulAssignment","src":"33939:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34005:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"34010:2:14","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33946:58:14"},"nodeType":"YulFunctionCall","src":"33946:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33939:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34111:3:14"}],"functionName":{"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulIdentifier","src":"34022:88:14"},"nodeType":"YulFunctionCall","src":"34022:93:14"},"nodeType":"YulExpressionStatement","src":"34022:93:14"},{"nodeType":"YulAssignment","src":"34124:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34135:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"34140:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34131:3:14"},"nodeType":"YulFunctionCall","src":"34131:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34124:3:14"}]}]},"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33917:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33925:3:14","type":""}],"src":"33783:366:14"},{"body":{"nodeType":"YulBlock","src":"34326:248:14","statements":[{"nodeType":"YulAssignment","src":"34336:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34348:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"34359:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34344:3:14"},"nodeType":"YulFunctionCall","src":"34344:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34336:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34383:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"34394:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34379:3:14"},"nodeType":"YulFunctionCall","src":"34379:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34402:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"34408:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34398:3:14"},"nodeType":"YulFunctionCall","src":"34398:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34372:6:14"},"nodeType":"YulFunctionCall","src":"34372:47:14"},"nodeType":"YulExpressionStatement","src":"34372:47:14"},{"nodeType":"YulAssignment","src":"34428:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34562:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34436:124:14"},"nodeType":"YulFunctionCall","src":"34436:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34428:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34306:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34321:4:14","type":""}],"src":"34155:419:14"},{"body":{"nodeType":"YulBlock","src":"34638:40:14","statements":[{"nodeType":"YulAssignment","src":"34649:22:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34665:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34659:5:14"},"nodeType":"YulFunctionCall","src":"34659:12:14"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"34649:6:14"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34621:5:14","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"34631:6:14","type":""}],"src":"34580:98:14"},{"body":{"nodeType":"YulBlock","src":"34779:73:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34796:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"34801:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34789:6:14"},"nodeType":"YulFunctionCall","src":"34789:19:14"},"nodeType":"YulExpressionStatement","src":"34789:19:14"},{"nodeType":"YulAssignment","src":"34817:29:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34836:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"34841:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34832:3:14"},"nodeType":"YulFunctionCall","src":"34832:14:14"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"34817:11:14"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34751:3:14","type":""},{"name":"length","nodeType":"YulTypedName","src":"34756:6:14","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"34767:11:14","type":""}],"src":"34684:168:14"},{"body":{"nodeType":"YulBlock","src":"34948:270:14","statements":[{"nodeType":"YulVariableDeclaration","src":"34958:52:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35004:5:14"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"34972:31:14"},"nodeType":"YulFunctionCall","src":"34972:38:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"34962:6:14","type":""}]},{"nodeType":"YulAssignment","src":"35019:77:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35084:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"35089:6:14"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35026:57:14"},"nodeType":"YulFunctionCall","src":"35026:70:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35019:3:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35131:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"35138:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35127:3:14"},"nodeType":"YulFunctionCall","src":"35127:16:14"},{"name":"pos","nodeType":"YulIdentifier","src":"35145:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"35150:6:14"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"35105:21:14"},"nodeType":"YulFunctionCall","src":"35105:52:14"},"nodeType":"YulExpressionStatement","src":"35105:52:14"},{"nodeType":"YulAssignment","src":"35166:46:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35177:3:14"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"35204:6:14"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"35182:21:14"},"nodeType":"YulFunctionCall","src":"35182:29:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35173:3:14"},"nodeType":"YulFunctionCall","src":"35173:39:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35166:3:14"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34929:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34936:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34944:3:14","type":""}],"src":"34858:360:14"},{"body":{"nodeType":"YulBlock","src":"35424:440:14","statements":[{"nodeType":"YulAssignment","src":"35434:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35446:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"35457:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35442:3:14"},"nodeType":"YulFunctionCall","src":"35442:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35434:4:14"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35515:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35528:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"35539:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35524:3:14"},"nodeType":"YulFunctionCall","src":"35524:17:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35471:43:14"},"nodeType":"YulFunctionCall","src":"35471:71:14"},"nodeType":"YulExpressionStatement","src":"35471:71:14"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35596:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35609:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"35620:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35605:3:14"},"nodeType":"YulFunctionCall","src":"35605:18:14"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35552:43:14"},"nodeType":"YulFunctionCall","src":"35552:72:14"},"nodeType":"YulExpressionStatement","src":"35552:72:14"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"35678:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35691:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"35702:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35687:3:14"},"nodeType":"YulFunctionCall","src":"35687:18:14"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"35634:43:14"},"nodeType":"YulFunctionCall","src":"35634:72:14"},"nodeType":"YulExpressionStatement","src":"35634:72:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35727:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"35738:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35723:3:14"},"nodeType":"YulFunctionCall","src":"35723:18:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35747:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"35753:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35743:3:14"},"nodeType":"YulFunctionCall","src":"35743:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35716:6:14"},"nodeType":"YulFunctionCall","src":"35716:48:14"},"nodeType":"YulExpressionStatement","src":"35716:48:14"},{"nodeType":"YulAssignment","src":"35773:84:14","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"35843:6:14"},{"name":"tail","nodeType":"YulIdentifier","src":"35852:4:14"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35781:61:14"},"nodeType":"YulFunctionCall","src":"35781:76:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35773:4:14"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35372:9:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"35384:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"35392:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35400:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35408:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35419:4:14","type":""}],"src":"35224:640:14"},{"body":{"nodeType":"YulBlock","src":"35932:79:14","statements":[{"nodeType":"YulAssignment","src":"35942:22:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"35957:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35951:5:14"},"nodeType":"YulFunctionCall","src":"35951:13:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"35942:5:14"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35999:5:14"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"35973:25:14"},"nodeType":"YulFunctionCall","src":"35973:32:14"},"nodeType":"YulExpressionStatement","src":"35973:32:14"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"35910:6:14","type":""},{"name":"end","nodeType":"YulTypedName","src":"35918:3:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"35926:5:14","type":""}],"src":"35870:141:14"},{"body":{"nodeType":"YulBlock","src":"36093:273:14","statements":[{"body":{"nodeType":"YulBlock","src":"36139:83:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"36141:77:14"},"nodeType":"YulFunctionCall","src":"36141:79:14"},"nodeType":"YulExpressionStatement","src":"36141:79:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"36114:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"36123:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36110:3:14"},"nodeType":"YulFunctionCall","src":"36110:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"36135:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"36106:3:14"},"nodeType":"YulFunctionCall","src":"36106:32:14"},"nodeType":"YulIf","src":"36103:119:14"},{"nodeType":"YulBlock","src":"36232:127:14","statements":[{"nodeType":"YulVariableDeclaration","src":"36247:15:14","value":{"kind":"number","nodeType":"YulLiteral","src":"36261:1:14","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"36251:6:14","type":""}]},{"nodeType":"YulAssignment","src":"36276:73:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36321:9:14"},{"name":"offset","nodeType":"YulIdentifier","src":"36332:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36317:3:14"},"nodeType":"YulFunctionCall","src":"36317:22:14"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"36341:7:14"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"36286:30:14"},"nodeType":"YulFunctionCall","src":"36286:63:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"36276:6:14"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36063:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"36074:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"36086:6:14","type":""}],"src":"36017:349:14"},{"body":{"nodeType":"YulBlock","src":"36414:143:14","statements":[{"nodeType":"YulAssignment","src":"36424:25:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"36447:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"36429:17:14"},"nodeType":"YulFunctionCall","src":"36429:20:14"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"36424:1:14"}]},{"nodeType":"YulAssignment","src":"36458:25:14","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"36481:1:14"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"36463:17:14"},"nodeType":"YulFunctionCall","src":"36463:20:14"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"36458:1:14"}]},{"body":{"nodeType":"YulBlock","src":"36505:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"36507:16:14"},"nodeType":"YulFunctionCall","src":"36507:18:14"},"nodeType":"YulExpressionStatement","src":"36507:18:14"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"36502:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36495:6:14"},"nodeType":"YulFunctionCall","src":"36495:9:14"},"nodeType":"YulIf","src":"36492:35:14"},{"nodeType":"YulAssignment","src":"36537:14:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"36546:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"36549:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"36542:3:14"},"nodeType":"YulFunctionCall","src":"36542:9:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"36537:1:14"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"36403:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"36406:1:14","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"36412:1:14","type":""}],"src":"36372:185:14"},{"body":{"nodeType":"YulBlock","src":"36669:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36691:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"36699:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36687:3:14"},"nodeType":"YulFunctionCall","src":"36687:14:14"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"36703:34:14","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36680:6:14"},"nodeType":"YulFunctionCall","src":"36680:58:14"},"nodeType":"YulExpressionStatement","src":"36680:58:14"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36661:6:14","type":""}],"src":"36563:182:14"},{"body":{"nodeType":"YulBlock","src":"36897:220:14","statements":[{"nodeType":"YulAssignment","src":"36907:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36973:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"36978:2:14","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36914:58:14"},"nodeType":"YulFunctionCall","src":"36914:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36907:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37079:3:14"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"36990:88:14"},"nodeType":"YulFunctionCall","src":"36990:93:14"},"nodeType":"YulExpressionStatement","src":"36990:93:14"},{"nodeType":"YulAssignment","src":"37092:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37103:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"37108:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37099:3:14"},"nodeType":"YulFunctionCall","src":"37099:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37092:3:14"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36885:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36893:3:14","type":""}],"src":"36751:366:14"},{"body":{"nodeType":"YulBlock","src":"37294:248:14","statements":[{"nodeType":"YulAssignment","src":"37304:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37316:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"37327:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37312:3:14"},"nodeType":"YulFunctionCall","src":"37312:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37304:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37351:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"37362:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37347:3:14"},"nodeType":"YulFunctionCall","src":"37347:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37370:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"37376:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37366:3:14"},"nodeType":"YulFunctionCall","src":"37366:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37340:6:14"},"nodeType":"YulFunctionCall","src":"37340:47:14"},"nodeType":"YulExpressionStatement","src":"37340:47:14"},{"nodeType":"YulAssignment","src":"37396:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37530:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37404:124:14"},"nodeType":"YulFunctionCall","src":"37404:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37396:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37274:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37289:4:14","type":""}],"src":"37123:419:14"},{"body":{"nodeType":"YulBlock","src":"37654:72:14","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37676:6:14"},{"kind":"number","nodeType":"YulLiteral","src":"37684:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37672:3:14"},"nodeType":"YulFunctionCall","src":"37672:14:14"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"37688:30:14","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37665:6:14"},"nodeType":"YulFunctionCall","src":"37665:54:14"},"nodeType":"YulExpressionStatement","src":"37665:54:14"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37646:6:14","type":""}],"src":"37548:178:14"},{"body":{"nodeType":"YulBlock","src":"37878:220:14","statements":[{"nodeType":"YulAssignment","src":"37888:74:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37954:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"37959:2:14","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37895:58:14"},"nodeType":"YulFunctionCall","src":"37895:67:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37888:3:14"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38060:3:14"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"37971:88:14"},"nodeType":"YulFunctionCall","src":"37971:93:14"},"nodeType":"YulExpressionStatement","src":"37971:93:14"},{"nodeType":"YulAssignment","src":"38073:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38084:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"38089:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38080:3:14"},"nodeType":"YulFunctionCall","src":"38080:12:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38073:3:14"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37866:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37874:3:14","type":""}],"src":"37732:366:14"},{"body":{"nodeType":"YulBlock","src":"38275:248:14","statements":[{"nodeType":"YulAssignment","src":"38285:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38297:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"38308:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38293:3:14"},"nodeType":"YulFunctionCall","src":"38293:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38285:4:14"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38332:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"38343:1:14","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38328:3:14"},"nodeType":"YulFunctionCall","src":"38328:17:14"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38351:4:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"38357:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38347:3:14"},"nodeType":"YulFunctionCall","src":"38347:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38321:6:14"},"nodeType":"YulFunctionCall","src":"38321:47:14"},"nodeType":"YulExpressionStatement","src":"38321:47:14"},{"nodeType":"YulAssignment","src":"38377:139:14","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38511:4:14"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38385:124:14"},"nodeType":"YulFunctionCall","src":"38385:131:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38377:4:14"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38255:9:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38270:4:14","type":""}],"src":"38104:419:14"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$3_memory_ptr(value) -> length {\n\n        length := 0x03\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$3_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$3_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[3] -> uint256[3]\n    function abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$3_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$3_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$3_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Breed_$2020(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Breed_$2020(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Breed_$2020(value)\n    }\n\n    function convert_t_enum$_Breed_$2020_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Breed_$2020(value)\n    }\n\n    function abi_encode_t_enum$_Breed_$2020_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Breed_$2020_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Breed_$2020__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Breed_$2020_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 62)\n        store_literal_in_memory_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a333355a81806ed720720a526142c1e97d1086371f6be2b18561203134ef304_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_eb80b9f25203511adb7b7660e6222669e088cedd0909cd81ed7470e34dcd010b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function abi_encode_tuple_t_enum$_Breed_$2020_t_address__to_t_uint8_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_enum$_Breed_$2020_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721URIStorage: URI set of non\")\n\n        mstore(add(memPtr, 32), \"existent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"10":[{"length":32,"start":2333},{"length":32,"start":2417}],"2023":[{"length":32,"start":4063}],"2025":[{"length":32,"start":4156}],"2027":[{"length":32,"start":4123}],"2029":[{"length":32,"start":4191}],"2049":[{"length":32,"start":3446},{"length":32,"start":3973}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x181 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA36F573B GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x5A0 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x61A JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0xA36F573B EQ PUSH2 0x4DF JUMPI DUP1 PUSH4 0xA51CCCF3 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0xAA152491 EQ PUSH2 0x559 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x7A5CAAB3 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x48B JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x4B6 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x42842E0E GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0x5DACF5F4 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x3B6 JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x3AF25975 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x30E JUMPI PUSH2 0x181 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xB21A83B EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x27F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D8 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x273E JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x269 PUSH2 0x915 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x28F0 JUMP JUMPDEST PUSH2 0x91B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x294C JUMP JUMPDEST PUSH2 0x9DB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x323 PUSH2 0xAEB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x294C JUMP JUMPDEST PUSH2 0xB9F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x363 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x2A4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0xBEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AD SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x408 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x433 PUSH2 0xD5E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x44A PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x475 PUSH2 0xD9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A0 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x2ABE JUMP JUMPDEST PUSH2 0xE56 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x506 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x501 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x543 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x53E SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0xE9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x550 SWAP2 SWAP1 PUSH2 0x2B75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x561 PUSH2 0xF81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x2C45 JUMP JUMPDEST PUSH2 0x1181 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x2689 JUMP JUMPDEST PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D4 SWAP2 SWAP1 PUSH2 0x2631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x604 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x2CC8 JUMP JUMPDEST PUSH2 0x12F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x641 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x2A65 JUMP JUMPDEST PUSH2 0x138A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x70E JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x71E JUMPI POP PUSH2 0x71D DUP3 PUSH2 0x140E JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x734 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x760 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x782 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x790 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C2 DUP3 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x808 DUP3 PUSH2 0xBEA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x870 SWAP1 PUSH2 0x2DDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x898 PUSH2 0x14C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x8C7 JUMPI POP PUSH2 0x8C6 DUP2 PUSH2 0x8C1 PUSH2 0x14C3 JUMP JUMPDEST PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST PUSH2 0x906 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x2E6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x910 DUP4 DUP4 PUSH2 0x14CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9CD JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D7 DUP3 DUP3 PUSH2 0x1584 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9EC PUSH2 0x9E6 PUSH2 0x14C3 JUMP JUMPDEST DUP3 PUSH2 0x1724 JUMP JUMPDEST PUSH2 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA22 SWAP1 PUSH2 0x2F28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA36 DUP4 DUP4 DUP4 PUSH2 0x17B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA51 JUMPI PUSH2 0xA50 PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0xA66 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA92 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xADF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAB4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xADF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAC2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAF3 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xB1E SWAP1 PUSH2 0x2FA8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xB9B JUMPI PUSH1 0x40 MLOAD PUSH32 0xCA7E25B700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBBA DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1181 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBC7 PUSH2 0x2404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8A SWAP1 PUSH2 0x3009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD17 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD0E SWAP1 PUSH2 0x309B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD66 PUSH2 0x1A20 JUMP JUMPDEST PUSH2 0xD70 PUSH1 0x0 PUSH2 0x1A9E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xDD3 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDFF SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE4C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE21 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE4C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE2F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE68 PUSH2 0xE61 PUSH2 0x14C3 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1B64 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0xEB0 PUSH2 0xBBF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xF49 JUMPI DUP3 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0xEEF JUMPI POP DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xEDC JUMPI PUSH2 0xEDB PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xEEC SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST DUP6 LT JUMPDEST ISZERO PUSH2 0xF11 JUMPI DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xF07 JUMPI PUSH2 0xF06 PUSH2 0x2AFE JUMP JUMPDEST JUMPDEST SWAP4 POP POP POP POP PUSH2 0xF7C JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xF24 JUMPI PUSH2 0xF23 PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xF34 SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0xF41 SWAP1 PUSH2 0x3140 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEB5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x12806C9D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0xFDD JUMPI PUSH1 0x40 MLOAD PUSH32 0xB90F491000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10A0 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3201 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10F2 SWAP2 SWAP1 PUSH2 0x3269 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xF873236E6CC0ECC5BE1A9A35C95EE5B8D1AC4CC7BFEF0CC5060391D6CC98E26B CALLER PUSH1 0x40 MLOAD PUSH2 0x1176 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x1192 PUSH2 0x118C PUSH2 0x14C3 JUMP JUMPDEST DUP4 PUSH2 0x1724 JUMP JUMPDEST PUSH2 0x11D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C8 SWAP1 PUSH2 0x2F28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11DD DUP5 DUP5 DUP5 DUP5 PUSH2 0x1CD1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11EE DUP3 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x120E SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x123A SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1287 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x125C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1287 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x126A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1298 PUSH2 0x1D2D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x12AE JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x12F1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x12E3 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x12CB SWAP3 SWAP2 SWAP1 PUSH2 0x32D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x12F1 JUMP JUMPDEST PUSH2 0x12EC DUP5 PUSH2 0x1D44 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1392 PUSH2 0x1A20 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1402 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F9 SWAP1 PUSH2 0x3368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x140B DUP2 PUSH2 0x1A9E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1481 DUP2 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0x14C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B7 SWAP1 PUSH2 0x3009 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x153E DUP4 PUSH2 0xBEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x15DB JUMPI PUSH2 0x15DA PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x15ED SWAP2 SWAP1 PUSH2 0x33B7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x15FA DUP3 PUSH2 0xE9F JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1610 SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1621 DUP5 DUP5 PUSH2 0x1E18 JUMP JUMPDEST PUSH2 0x16E3 DUP4 PUSH1 0xA DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x163A JUMPI PUSH2 0x1639 PUSH2 0x2AFE JUMP JUMPDEST JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x164B JUMPI PUSH2 0x164A PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x1660 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x168C SWAP1 PUSH2 0x2D37 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16D9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x16AE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16D9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16BC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x1E36 JUMP JUMPDEST PUSH32 0x8A269F26B688E110E9CBD887D163DAB35CAE678FA353A0292DE532C0CAC1ECDC DUP2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1714 SWAP3 SWAP2 SWAP1 PUSH2 0x33E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1730 DUP4 PUSH2 0xBEA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1772 JUMPI POP PUSH2 0x1771 DUP2 DUP6 PUSH2 0x12F6 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x17B0 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1798 DUP5 PUSH2 0x7B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D9 DUP3 PUSH2 0xBEA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x182F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1826 SWAP1 PUSH2 0x3483 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x189F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1896 SWAP1 PUSH2 0x3515 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18AA DUP4 DUP4 DUP4 PUSH2 0x1EAA JUMP JUMPDEST PUSH2 0x18B5 PUSH1 0x0 DUP3 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1905 SWAP2 SWAP1 PUSH2 0x3535 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x195C SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1A1B DUP4 DUP4 DUP4 PUSH2 0x1EAF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A28 PUSH2 0x14C3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A46 PUSH2 0xD9A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A93 SWAP1 PUSH2 0x35B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1BD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BCA SWAP1 PUSH2 0x3621 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1CC4 SWAP2 SWAP1 PUSH2 0x257D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1CDC DUP5 DUP5 DUP5 PUSH2 0x17B9 JUMP JUMPDEST PUSH2 0x1CE8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1EB4 JUMP JUMPDEST PUSH2 0x1D27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D1E SWAP1 PUSH2 0x36B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D4F DUP3 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D59 PUSH2 0x1D2D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1D79 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1DA4 JUMP JUMPDEST DUP1 PUSH2 0x1D83 DUP5 PUSH2 0x204B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D94 SWAP3 SWAP2 SWAP1 PUSH2 0x32D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E32 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x21AC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1E3F DUP3 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0x1E7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E75 SWAP1 PUSH2 0x3745 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1EA5 SWAP3 SWAP2 SWAP1 PUSH2 0x2426 JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED5 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2207 JUMP JUMPDEST ISZERO PUSH2 0x203E JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1EFE PUSH2 0x14C3 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F20 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1F6B JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F68 SWAP2 SWAP1 PUSH2 0x381B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1FEE JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F9B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FA0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1FE6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FDD SWAP1 PUSH2 0x36B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x2043 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x2093 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x21A7 JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x20C5 JUMPI DUP1 DUP1 PUSH2 0x20AE SWAP1 PUSH2 0x3140 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x20BE SWAP2 SWAP1 PUSH2 0x3848 JUMP JUMPDEST SWAP2 POP PUSH2 0x209B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E1 JUMPI PUSH2 0x20E0 PUSH2 0x27AD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2113 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x21A0 JUMPI PUSH1 0x1 DUP3 PUSH2 0x212C SWAP2 SWAP1 PUSH2 0x3535 JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x213B SWAP2 SWAP1 PUSH2 0x33B7 JUMP JUMPDEST PUSH1 0x30 PUSH2 0x2147 SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x215D JUMPI PUSH2 0x215C PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x2199 SWAP2 SWAP1 PUSH2 0x3848 JUMP JUMPDEST SWAP5 POP PUSH2 0x2117 JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21B6 DUP4 DUP4 PUSH2 0x222A JUMP JUMPDEST PUSH2 0x21C3 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1EB4 JUMP JUMPDEST PUSH2 0x2202 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21F9 SWAP1 PUSH2 0x36B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x229A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2291 SWAP1 PUSH2 0x38C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22A3 DUP2 PUSH2 0x1DAC JUMP JUMPDEST ISZERO PUSH2 0x22E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22DA SWAP1 PUSH2 0x3931 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22EF PUSH1 0x0 DUP4 DUP4 PUSH2 0x1EAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x233F SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2400 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1EAF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2432 SWAP1 PUSH2 0x2D37 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2454 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x249B JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x246D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x249B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x249B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x249A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x247F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x24A8 SWAP2 SWAP1 PUSH2 0x24AC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x24C5 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x24AD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2512 DUP2 PUSH2 0x24DD JUMP JUMPDEST DUP2 EQ PUSH2 0x251D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x252F DUP2 PUSH2 0x2509 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x254B JUMPI PUSH2 0x254A PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2559 DUP5 DUP3 DUP6 ADD PUSH2 0x2520 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2577 DUP2 PUSH2 0x2562 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2592 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x256E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x25D2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x25B7 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x25E1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2603 DUP3 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x260D DUP2 DUP6 PUSH2 0x25A3 JUMP JUMPDEST SWAP4 POP PUSH2 0x261D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x25B4 JUMP JUMPDEST PUSH2 0x2626 DUP2 PUSH2 0x25E7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x264B DUP2 DUP5 PUSH2 0x25F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2666 DUP2 PUSH2 0x2653 JUMP JUMPDEST DUP2 EQ PUSH2 0x2671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2683 DUP2 PUSH2 0x265D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x269F JUMPI PUSH2 0x269E PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26AD DUP5 DUP3 DUP6 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E1 DUP3 PUSH2 0x26B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F1 DUP2 PUSH2 0x26D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x270C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x271B DUP2 PUSH2 0x26D6 JUMP JUMPDEST DUP2 EQ PUSH2 0x2726 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2738 DUP2 PUSH2 0x2712 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2755 JUMPI PUSH2 0x2754 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2763 DUP6 DUP3 DUP7 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2774 DUP6 DUP3 DUP7 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2787 DUP2 PUSH2 0x2653 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27A2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x277E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x27E5 DUP3 PUSH2 0x25E7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2804 JUMPI PUSH2 0x2803 PUSH2 0x27AD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2817 PUSH2 0x24C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x2823 DUP3 DUP3 PUSH2 0x27DC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2843 JUMPI PUSH2 0x2842 PUSH2 0x27AD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x286C PUSH2 0x2867 DUP5 PUSH2 0x2828 JUMP JUMPDEST PUSH2 0x280D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x288F JUMPI PUSH2 0x288E PUSH2 0x2854 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x28B8 JUMPI DUP1 PUSH2 0x28A4 DUP9 DUP3 PUSH2 0x2674 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2891 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x28D7 JUMPI PUSH2 0x28D6 PUSH2 0x27A8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x28E7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2859 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2907 JUMPI PUSH2 0x2906 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2915 DUP6 DUP3 DUP7 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2936 JUMPI PUSH2 0x2935 PUSH2 0x24D8 JUMP JUMPDEST JUMPDEST PUSH2 0x2942 DUP6 DUP3 DUP7 ADD PUSH2 0x28C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2965 JUMPI PUSH2 0x2964 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2973 DUP7 DUP3 DUP8 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2984 DUP7 DUP3 DUP8 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2995 DUP7 DUP3 DUP8 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29C8 DUP2 PUSH2 0x2653 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29DA DUP4 DUP4 PUSH2 0x29BF JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29FC DUP2 PUSH2 0x299F JUMP JUMPDEST PUSH2 0x2A06 DUP2 DUP5 PUSH2 0x29AA JUMP JUMPDEST SWAP3 POP PUSH2 0x2A11 DUP3 PUSH2 0x29B5 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2A42 JUMPI DUP2 MLOAD PUSH2 0x2A29 DUP8 DUP3 PUSH2 0x29CE JUMP JUMPDEST SWAP7 POP PUSH2 0x2A34 DUP4 PUSH2 0x29E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2A15 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A5F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x29F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A7B JUMPI PUSH2 0x2A7A PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A89 DUP5 DUP3 DUP6 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A9B DUP2 PUSH2 0x2562 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AB8 DUP2 PUSH2 0x2A92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AD5 JUMPI PUSH2 0x2AD4 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AE3 DUP6 DUP3 DUP7 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AF4 DUP6 DUP3 DUP7 ADD PUSH2 0x2AA9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2B3E JUMPI PUSH2 0x2B3D PUSH2 0x2AFE JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2B4F DUP3 PUSH2 0x2B2D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5F DUP3 PUSH2 0x2B41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B6F DUP2 PUSH2 0x2B54 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B8A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B66 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BB0 JUMPI PUSH2 0x2BAF PUSH2 0x27AD JUMP JUMPDEST JUMPDEST PUSH2 0x2BB9 DUP3 PUSH2 0x25E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE8 PUSH2 0x2BE3 DUP5 PUSH2 0x2B95 JUMP JUMPDEST PUSH2 0x280D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2C04 JUMPI PUSH2 0x2C03 PUSH2 0x2B90 JUMP JUMPDEST JUMPDEST PUSH2 0x2C0F DUP5 DUP3 DUP6 PUSH2 0x2BC6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C2C JUMPI PUSH2 0x2C2B PUSH2 0x27A8 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C3C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2BD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2C5F JUMPI PUSH2 0x2C5E PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C6D DUP8 DUP3 DUP9 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2C7E DUP8 DUP3 DUP9 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2C8F DUP8 DUP3 DUP9 ADD PUSH2 0x2674 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CB0 JUMPI PUSH2 0x2CAF PUSH2 0x24D8 JUMP JUMPDEST JUMPDEST PUSH2 0x2CBC DUP8 DUP3 DUP9 ADD PUSH2 0x2C17 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CDF JUMPI PUSH2 0x2CDE PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CED DUP6 DUP3 DUP7 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CFE DUP6 DUP3 DUP7 ADD PUSH2 0x2729 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2D4F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2D63 JUMPI PUSH2 0x2D62 PUSH2 0x2D08 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC5 PUSH1 0x21 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DD0 DUP3 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DF4 DUP2 PUSH2 0x2DB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206E6F7220617070726F76656420666F7220616C6C0000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E57 PUSH1 0x3E DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E62 DUP3 PUSH2 0x2DFB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E86 DUP2 PUSH2 0x2E4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2EA2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x26E8 JUMP JUMPDEST PUSH2 0x2EAF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206E6F7220617070726F766564000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F12 PUSH1 0x2E DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F1D DUP3 PUSH2 0x2EB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F41 DUP2 PUSH2 0x2F05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F92 PUSH1 0x0 DUP4 PUSH2 0x2F77 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F9D DUP3 PUSH2 0x2F82 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FB3 DUP3 PUSH2 0x2F85 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FF3 PUSH1 0x18 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FFE DUP3 PUSH2 0x2FBD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3022 DUP2 PUSH2 0x2FE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3085 PUSH1 0x29 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3090 DUP3 PUSH2 0x3029 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30B4 DUP2 PUSH2 0x3078 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x30F5 DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH2 0x3100 DUP4 PUSH2 0x2653 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3135 JUMPI PUSH2 0x3134 PUSH2 0x30BB JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x314B DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x317E JUMPI PUSH2 0x317D PUSH2 0x30BB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x319C DUP2 PUSH2 0x3189 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31BF DUP2 PUSH2 0x31A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31DC DUP2 PUSH2 0x31C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x31FB DUP2 PUSH2 0x31E2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3216 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x3193 JUMP JUMPDEST PUSH2 0x3223 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x31B6 JUMP JUMPDEST PUSH2 0x3230 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x31D3 JUMP JUMPDEST PUSH2 0x323D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x31F2 JUMP JUMPDEST PUSH2 0x324A PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x31F2 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3263 DUP2 PUSH2 0x265D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x327F JUMPI PUSH2 0x327E PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x328D DUP5 DUP3 DUP6 ADD PUSH2 0x3254 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32AC DUP3 PUSH2 0x2598 JUMP JUMPDEST PUSH2 0x32B6 DUP2 DUP6 PUSH2 0x3296 JUMP JUMPDEST SWAP4 POP PUSH2 0x32C6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x25B4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32DE DUP3 DUP6 PUSH2 0x32A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x32EA DUP3 DUP5 PUSH2 0x32A1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3352 PUSH1 0x26 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x335D DUP3 PUSH2 0x32F6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3381 DUP2 PUSH2 0x3345 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33C2 DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH2 0x33CD DUP4 PUSH2 0x2653 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x33DD JUMPI PUSH2 0x33DC PUSH2 0x3388 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x33FD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2B66 JUMP JUMPDEST PUSH2 0x340A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x26E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346D PUSH1 0x25 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3478 DUP3 PUSH2 0x3411 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x349C DUP2 PUSH2 0x3460 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34FF PUSH1 0x24 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x350A DUP3 PUSH2 0x34A3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x352E DUP2 PUSH2 0x34F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3540 DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH2 0x354B DUP4 PUSH2 0x2653 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x355E JUMPI PUSH2 0x355D PUSH2 0x30BB JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x359F PUSH1 0x20 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x35AA DUP3 PUSH2 0x3569 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35CE DUP2 PUSH2 0x3592 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x360B PUSH1 0x19 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3616 DUP3 PUSH2 0x35D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x363A DUP2 PUSH2 0x35FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x369D PUSH1 0x32 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x36A8 DUP3 PUSH2 0x3641 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36CC DUP2 PUSH2 0x3690 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x372F PUSH1 0x2E DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x373A DUP3 PUSH2 0x36D3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x375E DUP2 PUSH2 0x3722 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x378C DUP3 PUSH2 0x3765 JUMP JUMPDEST PUSH2 0x3796 DUP2 DUP6 PUSH2 0x3770 JUMP JUMPDEST SWAP4 POP PUSH2 0x37A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x25B4 JUMP JUMPDEST PUSH2 0x37AF DUP2 PUSH2 0x25E7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x37CF PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x26E8 JUMP JUMPDEST PUSH2 0x37DC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x26E8 JUMP JUMPDEST PUSH2 0x37E9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x277E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x37FB DUP2 DUP5 PUSH2 0x3781 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3815 DUP2 PUSH2 0x2509 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3831 JUMPI PUSH2 0x3830 PUSH2 0x24D3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x383F DUP5 DUP3 DUP6 ADD PUSH2 0x3806 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3853 DUP3 PUSH2 0x2653 JUMP JUMPDEST SWAP2 POP PUSH2 0x385E DUP4 PUSH2 0x2653 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x386E JUMPI PUSH2 0x386D PUSH2 0x3388 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38AF PUSH1 0x20 DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x38BA DUP3 PUSH2 0x3879 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38DE DUP2 PUSH2 0x38A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391B PUSH1 0x1C DUP4 PUSH2 0x25A3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3926 DUP3 PUSH2 0x38E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x394A DUP2 PUSH2 0x390E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAF ISZERO 0xB3 DUP8 SELFBALANCE PUSH17 0x71C2F2BF550A351F5A04FFB2C8188BDDCA 0xCB SWAP13 ADD DIV 0xC8 PUSH23 0xC61DF464736F6C63430008090033000000000000000000 ","sourceMap":"455:4023:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2470:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3467:407;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1414:29:13;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6618:256:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:327:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4172:121:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3235:228;;;;;;;;;;;;;:::i;:::-;;5005:179:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3959:116:13;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2190:218:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4299:95:13;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:2;;;;;;;;;;;;;:::i;:::-;;4081:85:13;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201::2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2632:102:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1332:54:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3469:484;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2214:485;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5250:315:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;482:608:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1570:300:3;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2470:98::-;2524:13;2556:5;2549:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2470:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3467:407::-;3547:13;3563:23;3578:7;3563:14;:23::i;:::-;3547:39;;3610:5;3604:11;;:2;:11;;;;3596:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3701:5;3685:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3710:37;3727:5;3734:12;:10;:12::i;:::-;3710:16;:37::i;:::-;3685:62;3664:171;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3537:337;3467:407;;:::o;1414:29:13:-;;;;:::o;6618:256:0:-;6731:14;6717:28;;:10;:28;;;6713:109;;6788:10;6800:14;6762:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;4612:327:3:-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;4904:28;4914:4;4920:2;4924:7;4904:9;:28::i;:::-;4612:327;;;:::o;4172:121:13:-;4233:13;4265:14;4280:5;4265:21;;;;;;;;:::i;:::-;;;;;;;;;4258:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4172:121;;;:::o;3235:228::-;1094:13:2;:11;:13::i;:::-;3282:14:13::1;3299:21;3282:38;;3331:12;3357:10;3349:24;;3381:6;3349:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3330:62;;;3406:7;3402:55;;3424:31;;;;;;;;;;;;;;3402:55;3272:191;;3235:228::o:0;5005:179:3:-;5138:39;5155:4;5161:2;5165:7;5138:39;;;;;;;;;;;;:16;:39::i;:::-;5005:179;;;:::o;3959:116:13:-;4006:17;;:::i;:::-;4035:33;;;;;;;;4043:2;4035:33;;;;4047:2;4035:33;;;;1494:3;4035:33;;;;;3959:116;:::o;2190:218:3:-;2262:7;2281:13;2297:7;:16;2305:7;2297:16;;;;;;;;;;;;;;;;;;;;;2281:32;;2348:1;2331:19;;:5;:19;;;;2323:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2396:5;2389:12;;;2190:218;;;:::o;4299:95:13:-;4347:7;4373:14;;4366:21;;4299:95;:::o;1929:204:3:-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;1831:101:2:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;4081:85:13:-;4124:7;4150:9;4143:16;;4081:85;:::o;1201::2:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2632:102:3:-;2688:13;2720:7;2713:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2632:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;1332:54:13:-;;;;;;;;;;;;;;;;;;;;;;:::o;3469:484::-;3540:5;3557:22;3582:1;3557:26;;3593:29;3625:16;:14;:16::i;:::-;3593:48;;3655:9;3651:245;3674:18;3670:1;:22;3651:245;;;3729:14;3716:9;:27;;:74;;;;;3776:11;3788:1;3776:14;;;;;;;:::i;:::-;;;;;;3759;:31;;;;:::i;:::-;3747:9;:43;3716:74;3713:127;;;3823:1;3817:8;;;;;;;;:::i;:::-;;3810:15;;;;;;;3713:127;3871:11;3883:1;3871:14;;;;;;;:::i;:::-;;;;;;3853:32;;;;;:::i;:::-;;;3694:3;;;;;:::i;:::-;;;;3651:245;;;;3912:33;;;;;;;;;;;;;;3469:484;;;;:::o;2214:485::-;2260:17;2305:9;2293;:21;2289:91;;;2337:32;;;;;;;;;;;;;;2289:91;2401:16;:35;;;2450:9;2473:16;1262:1;2538:18;1305:1;2401:188;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2389:200;;2632:10;2599:19;:30;2619:9;2599:30;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;2670:9;2657:35;2681:10;2657:35;;;;;;:::i;:::-;;;;;;;;2214:485;:::o;5250:315:3:-;5418:41;5437:12;:10;:12::i;:::-;5451:7;5418:18;:41::i;:::-;5410:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;5520:38;5534:4;5540:2;5544:7;5553:4;5520:13;:38::i;:::-;5250:315;;;;:::o;482:608:6:-;555:13;580:23;595:7;580:14;:23::i;:::-;614;640:10;:19;651:7;640:19;;;;;;;;;;;614:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:18;690:10;:8;:10::i;:::-;669:31;;795:1;779:4;773:18;:23;769:70;;;819:9;812:16;;;;;;769:70;967:1;947:9;941:23;:27;937:106;;;1015:4;1021:9;998:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;984:48;;;;;;937:106;1060:23;1075:7;1060:14;:23::i;:::-;1053:30;;;;482:608;;;;:::o;4388:162:3:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;2081:198:2:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;829:155:11:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;11657:133:3:-;11738:16;11746:7;11738;:16::i;:::-;11730:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;11657:133;:::o;640:96:9:-;693:7;719:10;712:17;;640:96;:::o;10959:171:3:-;11060:2;11033:15;:24;11049:7;11033:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11115:7;11111:2;11077:46;;11086:23;11101:7;11086:14;:23::i;:::-;11077:46;;;;;;;;;;;;10959:171;;:::o;2705:524:13:-;2810:16;2829:19;:30;2849:9;2829:30;;;;;;;;;;;;;;;;;;;;;2810:49;;2869:18;2890:14;;2869:35;;2914:17;1494:3;2934:11;2946:1;2934:14;;;;;;;;:::i;:::-;;;;;;;;:33;;;;:::i;:::-;2914:53;;2977:14;2994:32;3016:9;2994:21;:32::i;:::-;2977:49;;3054:14;;3036;;:32;;;;;;;:::i;:::-;;;;;;;;3078:31;3088:8;3098:10;3078:9;:31::i;:::-;3119:59;3132:10;3144:14;3167:8;3159:17;;;;;;;;:::i;:::-;;3144:33;;;;;;;;:::i;:::-;;;;;;;;;3119:59;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:59::i;:::-;3193:29;3203:8;3213;3193:29;;;;;;;:::i;:::-;;;;;;;;2800:429;;;;2705:524;;:::o;7317:261:3:-;7410:4;7426:13;7442:23;7457:7;7442:14;:23::i;:::-;7426:39;;7494:5;7483:16;;:7;:16;;;:52;;;;7503:32;7520:5;7527:7;7503:16;:32::i;:::-;7483:52;:87;;;;7563:7;7539:31;;:20;7551:7;7539:11;:20::i;:::-;:31;;;7483:87;7475:96;;;7317:261;;;;:::o;10242:605::-;10396:4;10369:31;;:23;10384:7;10369:14;:23::i;:::-;:31;;;10361:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10474:1;10460:16;;:2;:16;;;;10452:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10528:39;10549:4;10555:2;10559:7;10528:20;:39::i;:::-;10629:29;10646:1;10650:7;10629:8;:29::i;:::-;10688:1;10669:9;:15;10679:4;10669:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10716:1;10699:9;:13;10709:2;10699:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10746:2;10727:7;:16;10735:7;10727:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10783:7;10779:2;10764:27;;10773:4;10764:27;;;;;;;;;;;;10802:38;10822:4;10828:2;10832:7;10802:19;:38::i;:::-;10242:605;;;:::o;1359:130:2:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;11266:307:3:-;11416:8;11407:17;;:5;:17;;;;11399:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;11502:8;11464:18;:25;11483:5;11464:25;;;;;;;;;;;;;;;:35;11490:8;11464:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;11547:8;11525:41;;11540:5;11525:41;;;11557:8;11525:41;;;;;;:::i;:::-;;;;;;;;11266:307;;;:::o;6426:305::-;6576:28;6586:4;6592:2;6596:7;6576:9;:28::i;:::-;6622:47;6645:4;6651:2;6655:7;6664:4;6622:22;:47::i;:::-;6614:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6426:305;;;;:::o;3318:92::-;3369:13;3394:9;;;;;;;;;;;;;;3318:92;:::o;2800:276::-;2873:13;2898:23;2913:7;2898:14;:23::i;:::-;2932:21;2956:10;:8;:10::i;:::-;2932:34;;3007:1;2989:7;2983:21;:25;:86;;;;;;;;;;;;;;;;;3035:7;3044:18;:7;:16;:18::i;:::-;3018:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2983:86;2976:93;;;2800:276;;;:::o;7034:125::-;7099:4;7150:1;7122:30;;:7;:16;7130:7;7122:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7115:37;;7034:125;;;:::o;7908:108::-;7983:26;7993:2;7997:7;7983:26;;;;;;;;;;;;:9;:26::i;:::-;7908:108;;:::o;1237:214:6:-;1336:16;1344:7;1336;:16::i;:::-;1328:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1435:9;1413:10;:19;1424:7;1413:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;1237:214;;:::o;13729:122:3:-;;;;:::o;14223:121::-;;;;:::o;12342:831::-;12491:4;12511:15;:2;:13;;;:15::i;:::-;12507:660;;;12562:2;12546:36;;;12583:12;:10;:12::i;:::-;12597:4;12603:7;12612:4;12546:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12542:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12801:1;12784:6;:13;:18;12780:321;;;12826:60;;;;;;;;;;:::i;:::-;;;;;;;;12780:321;13053:6;13047:13;13038:6;13034:2;13030:15;13023:38;12542:573;12677:41;;;12667:51;;;:6;:51;;;;12660:58;;;;;12507:660;13152:4;13145:11;;12342:831;;;;;;;:::o;392:703:10:-;448:13;674:1;665:5;:10;661:51;;;691:10;;;;;;;;;;;;;;;;;;;;;661:51;721:12;736:5;721:20;;751:14;775:75;790:1;782:4;:9;775:75;;807:8;;;;;:::i;:::-;;;;837:2;829:10;;;;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:39;;908:150;924:1;915:5;:10;908:150;;951:1;941:11;;;;;:::i;:::-;;;1017:2;1009:5;:10;;;;:::i;:::-;996:2;:24;;;;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;1045:2;1036:11;;;;;:::i;:::-;;;908:150;;;1081:6;1067:21;;;;;392:703;;;;:::o;8237:309:3:-;8361:18;8367:2;8371:7;8361:5;:18::i;:::-;8410:53;8441:1;8445:2;8449:7;8458:4;8410:22;:53::i;:::-;8389:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8237:309;;;:::o;1175:320:8:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;8868:427:3:-;8961:1;8947:16;;:2;:16;;;;8939:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9019:16;9027:7;9019;:16::i;:::-;9018:17;9010:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9079:45;9108:1;9112:2;9116:7;9079:20;:45::i;:::-;9152:1;9135:9;:13;9145:2;9135:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;9182:2;9163:7;:16;9171:7;9163:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9225:7;9221:2;9200:33;;9217:1;9200:33;;;;;;;;;;;;9244:44;9272:1;9276:2;9280:7;9244:19;:44::i;:::-;8868:427;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:118::-;5025:24;5043:5;5025:24;:::i;:::-;5020:3;5013:37;4938:118;;:::o;5062:222::-;5155:4;5193:2;5182:9;5178:18;5170:26;;5206:71;5274:1;5263:9;5259:17;5250:6;5206:71;:::i;:::-;5062:222;;;;:::o;5290:117::-;5399:1;5396;5389:12;5413:180;5461:77;5458:1;5451:88;5558:4;5555:1;5548:15;5582:4;5579:1;5572:15;5599:281;5682:27;5704:4;5682:27;:::i;:::-;5674:6;5670:40;5812:6;5800:10;5797:22;5776:18;5764:10;5761:34;5758:62;5755:88;;;5823:18;;:::i;:::-;5755:88;5863:10;5859:2;5852:22;5642:238;5599:281;;:::o;5886:129::-;5920:6;5947:20;;:::i;:::-;5937:30;;5976:33;6004:4;5996:6;5976:33;:::i;:::-;5886:129;;;:::o;6021:311::-;6098:4;6188:18;6180:6;6177:30;6174:56;;;6210:18;;:::i;:::-;6174:56;6260:4;6252:6;6248:17;6240:25;;6320:4;6314;6310:15;6302:23;;6021:311;;;:::o;6338:117::-;6447:1;6444;6437:12;6478:710;6574:5;6599:81;6615:64;6672:6;6615:64;:::i;:::-;6599:81;:::i;:::-;6590:90;;6700:5;6729:6;6722:5;6715:21;6763:4;6756:5;6752:16;6745:23;;6816:4;6808:6;6804:17;6796:6;6792:30;6845:3;6837:6;6834:15;6831:122;;;6864:79;;:::i;:::-;6831:122;6979:6;6962:220;6996:6;6991:3;6988:15;6962:220;;;7071:3;7100:37;7133:3;7121:10;7100:37;:::i;:::-;7095:3;7088:50;7167:4;7162:3;7158:14;7151:21;;7038:144;7022:4;7017:3;7013:14;7006:21;;6962:220;;;6966:21;6580:608;;6478:710;;;;;:::o;7211:370::-;7282:5;7331:3;7324:4;7316:6;7312:17;7308:27;7298:122;;7339:79;;:::i;:::-;7298:122;7456:6;7443:20;7481:94;7571:3;7563:6;7556:4;7548:6;7544:17;7481:94;:::i;:::-;7472:103;;7288:293;7211:370;;;;:::o;7587:684::-;7680:6;7688;7737:2;7725:9;7716:7;7712:23;7708:32;7705:119;;;7743:79;;:::i;:::-;7705:119;7863:1;7888:53;7933:7;7924:6;7913:9;7909:22;7888:53;:::i;:::-;7878:63;;7834:117;8018:2;8007:9;8003:18;7990:32;8049:18;8041:6;8038:30;8035:117;;;8071:79;;:::i;:::-;8035:117;8176:78;8246:7;8237:6;8226:9;8222:22;8176:78;:::i;:::-;8166:88;;7961:303;7587:684;;;;;:::o;8277:619::-;8354:6;8362;8370;8419:2;8407:9;8398:7;8394:23;8390:32;8387:119;;;8425:79;;:::i;:::-;8387:119;8545:1;8570:53;8615:7;8606:6;8595:9;8591:22;8570:53;:::i;:::-;8560:63;;8516:117;8672:2;8698:53;8743:7;8734:6;8723:9;8719:22;8698:53;:::i;:::-;8688:63;;8643:118;8800:2;8826:53;8871:7;8862:6;8851:9;8847:22;8826:53;:::i;:::-;8816:63;;8771:118;8277:619;;;;;:::o;8902:104::-;8967:6;8995:4;8985:14;;8902:104;;;:::o;9012:143::-;9109:11;9146:3;9131:18;;9012:143;;;;:::o;9161:98::-;9226:4;9249:3;9241:11;;9161:98;;;:::o;9265:108::-;9342:24;9360:5;9342:24;:::i;:::-;9337:3;9330:37;9265:108;;:::o;9379:179::-;9448:10;9469:46;9511:3;9503:6;9469:46;:::i;:::-;9547:4;9542:3;9538:14;9524:28;;9379:179;;;;:::o;9564:111::-;9632:4;9664;9659:3;9655:14;9647:22;;9564:111;;;:::o;9713:694::-;9849:52;9895:5;9849:52;:::i;:::-;9917:84;9994:6;9989:3;9917:84;:::i;:::-;9910:91;;10025:54;10073:5;10025:54;:::i;:::-;10102:7;10133:1;10118:282;10143:6;10140:1;10137:13;10118:282;;;10219:6;10213:13;10246:63;10305:3;10290:13;10246:63;:::i;:::-;10239:70;;10332:58;10383:6;10332:58;:::i;:::-;10322:68;;10178:222;10165:1;10162;10158:9;10153:14;;10118:282;;;10122:14;9825:582;;;9713:694;;:::o;10413:314::-;10552:4;10590:2;10579:9;10575:18;10567:26;;10603:117;10717:1;10706:9;10702:17;10693:6;10603:117;:::i;:::-;10413:314;;;;:::o;10733:329::-;10792:6;10841:2;10829:9;10820:7;10816:23;10812:32;10809:119;;;10847:79;;:::i;:::-;10809:119;10967:1;10992:53;11037:7;11028:6;11017:9;11013:22;10992:53;:::i;:::-;10982:63;;10938:117;10733:329;;;;:::o;11068:116::-;11138:21;11153:5;11138:21;:::i;:::-;11131:5;11128:32;11118:60;;11174:1;11171;11164:12;11118:60;11068:116;:::o;11190:133::-;11233:5;11271:6;11258:20;11249:29;;11287:30;11311:5;11287:30;:::i;:::-;11190:133;;;;:::o;11329:468::-;11394:6;11402;11451:2;11439:9;11430:7;11426:23;11422:32;11419:119;;;11457:79;;:::i;:::-;11419:119;11577:1;11602:53;11647:7;11638:6;11627:9;11623:22;11602:53;:::i;:::-;11592:63;;11548:117;11704:2;11730:50;11772:7;11763:6;11752:9;11748:22;11730:50;:::i;:::-;11720:60;;11675:115;11329:468;;;;;:::o;11803:180::-;11851:77;11848:1;11841:88;11948:4;11945:1;11938:15;11972:4;11969:1;11962:15;11989:115;12072:1;12065:5;12062:12;12052:46;;12078:18;;:::i;:::-;12052:46;11989:115;:::o;12110:131::-;12157:7;12186:5;12175:16;;12192:43;12229:5;12192:43;:::i;:::-;12110:131;;;:::o;12247:::-;12305:9;12338:34;12366:5;12338:34;:::i;:::-;12325:47;;12247:131;;;:::o;12384:147::-;12479:45;12518:5;12479:45;:::i;:::-;12474:3;12467:58;12384:147;;:::o;12537:238::-;12638:4;12676:2;12665:9;12661:18;12653:26;;12689:79;12765:1;12754:9;12750:17;12741:6;12689:79;:::i;:::-;12537:238;;;;:::o;12781:117::-;12890:1;12887;12880:12;12904:307;12965:4;13055:18;13047:6;13044:30;13041:56;;;13077:18;;:::i;:::-;13041:56;13115:29;13137:6;13115:29;:::i;:::-;13107:37;;13199:4;13193;13189:15;13181:23;;12904:307;;;:::o;13217:154::-;13301:6;13296:3;13291;13278:30;13363:1;13354:6;13349:3;13345:16;13338:27;13217:154;;;:::o;13377:410::-;13454:5;13479:65;13495:48;13536:6;13495:48;:::i;:::-;13479:65;:::i;:::-;13470:74;;13567:6;13560:5;13553:21;13605:4;13598:5;13594:16;13643:3;13634:6;13629:3;13625:16;13622:25;13619:112;;;13650:79;;:::i;:::-;13619:112;13740:41;13774:6;13769:3;13764;13740:41;:::i;:::-;13460:327;13377:410;;;;;:::o;13806:338::-;13861:5;13910:3;13903:4;13895:6;13891:17;13887:27;13877:122;;13918:79;;:::i;:::-;13877:122;14035:6;14022:20;14060:78;14134:3;14126:6;14119:4;14111:6;14107:17;14060:78;:::i;:::-;14051:87;;13867:277;13806:338;;;;:::o;14150:943::-;14245:6;14253;14261;14269;14318:3;14306:9;14297:7;14293:23;14289:33;14286:120;;;14325:79;;:::i;:::-;14286:120;14445:1;14470:53;14515:7;14506:6;14495:9;14491:22;14470:53;:::i;:::-;14460:63;;14416:117;14572:2;14598:53;14643:7;14634:6;14623:9;14619:22;14598:53;:::i;:::-;14588:63;;14543:118;14700:2;14726:53;14771:7;14762:6;14751:9;14747:22;14726:53;:::i;:::-;14716:63;;14671:118;14856:2;14845:9;14841:18;14828:32;14887:18;14879:6;14876:30;14873:117;;;14909:79;;:::i;:::-;14873:117;15014:62;15068:7;15059:6;15048:9;15044:22;15014:62;:::i;:::-;15004:72;;14799:287;14150:943;;;;;;;:::o;15099:474::-;15167:6;15175;15224:2;15212:9;15203:7;15199:23;15195:32;15192:119;;;15230:79;;:::i;:::-;15192:119;15350:1;15375:53;15420:7;15411:6;15400:9;15396:22;15375:53;:::i;:::-;15365:63;;15321:117;15477:2;15503:53;15548:7;15539:6;15528:9;15524:22;15503:53;:::i;:::-;15493:63;;15448:118;15099:474;;;;;:::o;15579:180::-;15627:77;15624:1;15617:88;15724:4;15721:1;15714:15;15748:4;15745:1;15738:15;15765:320;15809:6;15846:1;15840:4;15836:12;15826:22;;15893:1;15887:4;15883:12;15914:18;15904:81;;15970:4;15962:6;15958:17;15948:27;;15904:81;16032:2;16024:6;16021:14;16001:18;15998:38;15995:84;;;16051:18;;:::i;:::-;15995:84;15816:269;15765:320;;;:::o;16091:220::-;16231:34;16227:1;16219:6;16215:14;16208:58;16300:3;16295:2;16287:6;16283:15;16276:28;16091:220;:::o;16317:366::-;16459:3;16480:67;16544:2;16539:3;16480:67;:::i;:::-;16473:74;;16556:93;16645:3;16556:93;:::i;:::-;16674:2;16669:3;16665:12;16658:19;;16317:366;;;:::o;16689:419::-;16855:4;16893:2;16882:9;16878:18;16870:26;;16942:9;16936:4;16932:20;16928:1;16917:9;16913:17;16906:47;16970:131;17096:4;16970:131;:::i;:::-;16962:139;;16689:419;;;:::o;17114:249::-;17254:34;17250:1;17242:6;17238:14;17231:58;17323:32;17318:2;17310:6;17306:15;17299:57;17114:249;:::o;17369:366::-;17511:3;17532:67;17596:2;17591:3;17532:67;:::i;:::-;17525:74;;17608:93;17697:3;17608:93;:::i;:::-;17726:2;17721:3;17717:12;17710:19;;17369:366;;;:::o;17741:419::-;17907:4;17945:2;17934:9;17930:18;17922:26;;17994:9;17988:4;17984:20;17980:1;17969:9;17965:17;17958:47;18022:131;18148:4;18022:131;:::i;:::-;18014:139;;17741:419;;;:::o;18166:332::-;18287:4;18325:2;18314:9;18310:18;18302:26;;18338:71;18406:1;18395:9;18391:17;18382:6;18338:71;:::i;:::-;18419:72;18487:2;18476:9;18472:18;18463:6;18419:72;:::i;:::-;18166:332;;;;;:::o;18504:233::-;18644:34;18640:1;18632:6;18628:14;18621:58;18713:16;18708:2;18700:6;18696:15;18689:41;18504:233;:::o;18743:366::-;18885:3;18906:67;18970:2;18965:3;18906:67;:::i;:::-;18899:74;;18982:93;19071:3;18982:93;:::i;:::-;19100:2;19095:3;19091:12;19084:19;;18743:366;;;:::o;19115:419::-;19281:4;19319:2;19308:9;19304:18;19296:26;;19368:9;19362:4;19358:20;19354:1;19343:9;19339:17;19332:47;19396:131;19522:4;19396:131;:::i;:::-;19388:139;;19115:419;;;:::o;19540:180::-;19588:77;19585:1;19578:88;19685:4;19682:1;19675:15;19709:4;19706:1;19699:15;19726:147;19827:11;19864:3;19849:18;;19726:147;;;;:::o;19879:114::-;;:::o;19999:398::-;20158:3;20179:83;20260:1;20255:3;20179:83;:::i;:::-;20172:90;;20271:93;20360:3;20271:93;:::i;:::-;20389:1;20384:3;20380:11;20373:18;;19999:398;;;:::o;20403:379::-;20587:3;20609:147;20752:3;20609:147;:::i;:::-;20602:154;;20773:3;20766:10;;20403:379;;;:::o;20788:174::-;20928:26;20924:1;20916:6;20912:14;20905:50;20788:174;:::o;20968:366::-;21110:3;21131:67;21195:2;21190:3;21131:67;:::i;:::-;21124:74;;21207:93;21296:3;21207:93;:::i;:::-;21325:2;21320:3;21316:12;21309:19;;20968:366;;;:::o;21340:419::-;21506:4;21544:2;21533:9;21529:18;21521:26;;21593:9;21587:4;21583:20;21579:1;21568:9;21564:17;21557:47;21621:131;21747:4;21621:131;:::i;:::-;21613:139;;21340:419;;;:::o;21765:228::-;21905:34;21901:1;21893:6;21889:14;21882:58;21974:11;21969:2;21961:6;21957:15;21950:36;21765:228;:::o;21999:366::-;22141:3;22162:67;22226:2;22221:3;22162:67;:::i;:::-;22155:74;;22238:93;22327:3;22238:93;:::i;:::-;22356:2;22351:3;22347:12;22340:19;;21999:366;;;:::o;22371:419::-;22537:4;22575:2;22564:9;22560:18;22552:26;;22624:9;22618:4;22614:20;22610:1;22599:9;22595:17;22588:47;22652:131;22778:4;22652:131;:::i;:::-;22644:139;;22371:419;;;:::o;22796:180::-;22844:77;22841:1;22834:88;22941:4;22938:1;22931:15;22965:4;22962:1;22955:15;22982:305;23022:3;23041:20;23059:1;23041:20;:::i;:::-;23036:25;;23075:20;23093:1;23075:20;:::i;:::-;23070:25;;23229:1;23161:66;23157:74;23154:1;23151:81;23148:107;;;23235:18;;:::i;:::-;23148:107;23279:1;23276;23272:9;23265:16;;22982:305;;;;:::o;23293:233::-;23332:3;23355:24;23373:5;23355:24;:::i;:::-;23346:33;;23401:66;23394:5;23391:77;23388:103;;;23471:18;;:::i;:::-;23388:103;23518:1;23511:5;23507:13;23500:20;;23293:233;;;:::o;23532:77::-;23569:7;23598:5;23587:16;;23532:77;;;:::o;23615:118::-;23702:24;23720:5;23702:24;:::i;:::-;23697:3;23690:37;23615:118;;:::o;23739:101::-;23775:7;23815:18;23808:5;23804:30;23793:41;;23739:101;;;:::o;23846:115::-;23931:23;23948:5;23931:23;:::i;:::-;23926:3;23919:36;23846:115;;:::o;23967:89::-;24003:7;24043:6;24036:5;24032:18;24021:29;;23967:89;;;:::o;24062:115::-;24147:23;24164:5;24147:23;:::i;:::-;24142:3;24135:36;24062:115;;:::o;24183:93::-;24219:7;24259:10;24252:5;24248:22;24237:33;;24183:93;;;:::o;24282:115::-;24367:23;24384:5;24367:23;:::i;:::-;24362:3;24355:36;24282:115;;:::o;24403:648::-;24600:4;24638:3;24627:9;24623:19;24615:27;;24652:71;24720:1;24709:9;24705:17;24696:6;24652:71;:::i;:::-;24733:70;24799:2;24788:9;24784:18;24775:6;24733:70;:::i;:::-;24813;24879:2;24868:9;24864:18;24855:6;24813:70;:::i;:::-;24893;24959:2;24948:9;24944:18;24935:6;24893:70;:::i;:::-;24973:71;25039:3;25028:9;25024:19;25015:6;24973:71;:::i;:::-;24403:648;;;;;;;;:::o;25057:143::-;25114:5;25145:6;25139:13;25130:22;;25161:33;25188:5;25161:33;:::i;:::-;25057:143;;;;:::o;25206:351::-;25276:6;25325:2;25313:9;25304:7;25300:23;25296:32;25293:119;;;25331:79;;:::i;:::-;25293:119;25451:1;25476:64;25532:7;25523:6;25512:9;25508:22;25476:64;:::i;:::-;25466:74;;25422:128;25206:351;;;;:::o;25563:148::-;25665:11;25702:3;25687:18;;25563:148;;;;:::o;25717:377::-;25823:3;25851:39;25884:5;25851:39;:::i;:::-;25906:89;25988:6;25983:3;25906:89;:::i;:::-;25899:96;;26004:52;26049:6;26044:3;26037:4;26030:5;26026:16;26004:52;:::i;:::-;26081:6;26076:3;26072:16;26065:23;;25827:267;25717:377;;;;:::o;26100:435::-;26280:3;26302:95;26393:3;26384:6;26302:95;:::i;:::-;26295:102;;26414:95;26505:3;26496:6;26414:95;:::i;:::-;26407:102;;26526:3;26519:10;;26100:435;;;;;:::o;26541:225::-;26681:34;26677:1;26669:6;26665:14;26658:58;26750:8;26745:2;26737:6;26733:15;26726:33;26541:225;:::o;26772:366::-;26914:3;26935:67;26999:2;26994:3;26935:67;:::i;:::-;26928:74;;27011:93;27100:3;27011:93;:::i;:::-;27129:2;27124:3;27120:12;27113:19;;26772:366;;;:::o;27144:419::-;27310:4;27348:2;27337:9;27333:18;27325:26;;27397:9;27391:4;27387:20;27383:1;27372:9;27368:17;27361:47;27425:131;27551:4;27425:131;:::i;:::-;27417:139;;27144:419;;;:::o;27569:180::-;27617:77;27614:1;27607:88;27714:4;27711:1;27704:15;27738:4;27735:1;27728:15;27755:176;27787:1;27804:20;27822:1;27804:20;:::i;:::-;27799:25;;27838:20;27856:1;27838:20;:::i;:::-;27833:25;;27877:1;27867:35;;27882:18;;:::i;:::-;27867:35;27923:1;27920;27916:9;27911:14;;27755:176;;;;:::o;27937:348::-;28066:4;28104:2;28093:9;28089:18;28081:26;;28117:79;28193:1;28182:9;28178:17;28169:6;28117:79;:::i;:::-;28206:72;28274:2;28263:9;28259:18;28250:6;28206:72;:::i;:::-;27937:348;;;;;:::o;28291:224::-;28431:34;28427:1;28419:6;28415:14;28408:58;28500:7;28495:2;28487:6;28483:15;28476:32;28291:224;:::o;28521:366::-;28663:3;28684:67;28748:2;28743:3;28684:67;:::i;:::-;28677:74;;28760:93;28849:3;28760:93;:::i;:::-;28878:2;28873:3;28869:12;28862:19;;28521:366;;;:::o;28893:419::-;29059:4;29097:2;29086:9;29082:18;29074:26;;29146:9;29140:4;29136:20;29132:1;29121:9;29117:17;29110:47;29174:131;29300:4;29174:131;:::i;:::-;29166:139;;28893:419;;;:::o;29318:223::-;29458:34;29454:1;29446:6;29442:14;29435:58;29527:6;29522:2;29514:6;29510:15;29503:31;29318:223;:::o;29547:366::-;29689:3;29710:67;29774:2;29769:3;29710:67;:::i;:::-;29703:74;;29786:93;29875:3;29786:93;:::i;:::-;29904:2;29899:3;29895:12;29888:19;;29547:366;;;:::o;29919:419::-;30085:4;30123:2;30112:9;30108:18;30100:26;;30172:9;30166:4;30162:20;30158:1;30147:9;30143:17;30136:47;30200:131;30326:4;30200:131;:::i;:::-;30192:139;;29919:419;;;:::o;30344:191::-;30384:4;30404:20;30422:1;30404:20;:::i;:::-;30399:25;;30438:20;30456:1;30438:20;:::i;:::-;30433:25;;30477:1;30474;30471:8;30468:34;;;30482:18;;:::i;:::-;30468:34;30527:1;30524;30520:9;30512:17;;30344:191;;;;:::o;30541:182::-;30681:34;30677:1;30669:6;30665:14;30658:58;30541:182;:::o;30729:366::-;30871:3;30892:67;30956:2;30951:3;30892:67;:::i;:::-;30885:74;;30968:93;31057:3;30968:93;:::i;:::-;31086:2;31081:3;31077:12;31070:19;;30729:366;;;:::o;31101:419::-;31267:4;31305:2;31294:9;31290:18;31282:26;;31354:9;31348:4;31344:20;31340:1;31329:9;31325:17;31318:47;31382:131;31508:4;31382:131;:::i;:::-;31374:139;;31101:419;;;:::o;31526:175::-;31666:27;31662:1;31654:6;31650:14;31643:51;31526:175;:::o;31707:366::-;31849:3;31870:67;31934:2;31929:3;31870:67;:::i;:::-;31863:74;;31946:93;32035:3;31946:93;:::i;:::-;32064:2;32059:3;32055:12;32048:19;;31707:366;;;:::o;32079:419::-;32245:4;32283:2;32272:9;32268:18;32260:26;;32332:9;32326:4;32322:20;32318:1;32307:9;32303:17;32296:47;32360:131;32486:4;32360:131;:::i;:::-;32352:139;;32079:419;;;:::o;32504:237::-;32644:34;32640:1;32632:6;32628:14;32621:58;32713:20;32708:2;32700:6;32696:15;32689:45;32504:237;:::o;32747:366::-;32889:3;32910:67;32974:2;32969:3;32910:67;:::i;:::-;32903:74;;32986:93;33075:3;32986:93;:::i;:::-;33104:2;33099:3;33095:12;33088:19;;32747:366;;;:::o;33119:419::-;33285:4;33323:2;33312:9;33308:18;33300:26;;33372:9;33366:4;33362:20;33358:1;33347:9;33343:17;33336:47;33400:131;33526:4;33400:131;:::i;:::-;33392:139;;33119:419;;;:::o;33544:233::-;33684:34;33680:1;33672:6;33668:14;33661:58;33753:16;33748:2;33740:6;33736:15;33729:41;33544:233;:::o;33783:366::-;33925:3;33946:67;34010:2;34005:3;33946:67;:::i;:::-;33939:74;;34022:93;34111:3;34022:93;:::i;:::-;34140:2;34135:3;34131:12;34124:19;;33783:366;;;:::o;34155:419::-;34321:4;34359:2;34348:9;34344:18;34336:26;;34408:9;34402:4;34398:20;34394:1;34383:9;34379:17;34372:47;34436:131;34562:4;34436:131;:::i;:::-;34428:139;;34155:419;;;:::o;34580:98::-;34631:6;34665:5;34659:12;34649:22;;34580:98;;;:::o;34684:168::-;34767:11;34801:6;34796:3;34789:19;34841:4;34836:3;34832:14;34817:29;;34684:168;;;;:::o;34858:360::-;34944:3;34972:38;35004:5;34972:38;:::i;:::-;35026:70;35089:6;35084:3;35026:70;:::i;:::-;35019:77;;35105:52;35150:6;35145:3;35138:4;35131:5;35127:16;35105:52;:::i;:::-;35182:29;35204:6;35182:29;:::i;:::-;35177:3;35173:39;35166:46;;34948:270;34858:360;;;;:::o;35224:640::-;35419:4;35457:3;35446:9;35442:19;35434:27;;35471:71;35539:1;35528:9;35524:17;35515:6;35471:71;:::i;:::-;35552:72;35620:2;35609:9;35605:18;35596:6;35552:72;:::i;:::-;35634;35702:2;35691:9;35687:18;35678:6;35634:72;:::i;:::-;35753:9;35747:4;35743:20;35738:2;35727:9;35723:18;35716:48;35781:76;35852:4;35843:6;35781:76;:::i;:::-;35773:84;;35224:640;;;;;;;:::o;35870:141::-;35926:5;35957:6;35951:13;35942:22;;35973:32;35999:5;35973:32;:::i;:::-;35870:141;;;;:::o;36017:349::-;36086:6;36135:2;36123:9;36114:7;36110:23;36106:32;36103:119;;;36141:79;;:::i;:::-;36103:119;36261:1;36286:63;36341:7;36332:6;36321:9;36317:22;36286:63;:::i;:::-;36276:73;;36232:127;36017:349;;;;:::o;36372:185::-;36412:1;36429:20;36447:1;36429:20;:::i;:::-;36424:25;;36463:20;36481:1;36463:20;:::i;:::-;36458:25;;36502:1;36492:35;;36507:18;;:::i;:::-;36492:35;36549:1;36546;36542:9;36537:14;;36372:185;;;;:::o;36563:182::-;36703:34;36699:1;36691:6;36687:14;36680:58;36563:182;:::o;36751:366::-;36893:3;36914:67;36978:2;36973:3;36914:67;:::i;:::-;36907:74;;36990:93;37079:3;36990:93;:::i;:::-;37108:2;37103:3;37099:12;37092:19;;36751:366;;;:::o;37123:419::-;37289:4;37327:2;37316:9;37312:18;37304:26;;37376:9;37370:4;37366:20;37362:1;37351:9;37347:17;37340:47;37404:131;37530:4;37404:131;:::i;:::-;37396:139;;37123:419;;;:::o;37548:178::-;37688:30;37684:1;37676:6;37672:14;37665:54;37548:178;:::o;37732:366::-;37874:3;37895:67;37959:2;37954:3;37895:67;:::i;:::-;37888:74;;37971:93;38060:3;37971:93;:::i;:::-;38089:2;38084:3;38080:12;38073:19;;37732:366;;;:::o;38104:419::-;38270:4;38308:2;38297:9;38293:18;38285:26;;38357:9;38351:4;38347:20;38343:1;38332:9;38328:17;38321:47;38385:131;38511:4;38385:131;:::i;:::-;38377:139;;38104:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2945400","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2902","getApproved(uint256)":"5257","getBreedFromModdedRng(uint256)":"infinite","getChanceArray()":"infinite","getDogTokenUris(uint256)":"infinite","getMintFee()":"infinite","getTokenCounter()":"2548","isApprovedForAll(address,address)":"infinite","name()":"infinite","owner()":"2611","ownerOf(uint256)":"3048","rawFulfillRandomWords(uint256,uint256[])":"infinite","renounceOwnership()":"30443","requestNft()":"infinite","s_requestIdToSender(uint256)":"2884","s_tokenCounter()":"2541","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"30857","withdraw()":"infinite"},"internal":{"fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getBreedFromModdedRng(uint256)":"a51cccf3","getChanceArray()":"5dacf5f4","getDogTokenUris(uint256)":"3af25975","getMintFee()":"7a5caab3","getTokenCounter()":"6e02007d","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","renounceOwnership()":"715018a6","requestNft()":"aa152491","s_requestIdToSender(uint256)":"a36f573b","s_tokenCounter()":"0b21a83b","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"string[]\",\"name\":\"dogTokenUris\",\"type\":\"string[]\"},{\"internalType\":\"uint256\",\"name\":\"mintFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RandomIpfsNft__NeedMoreETHSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RandomIpfsNft__RangeOutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RandomIpfsNft__TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum RandomIpfsNft.Breed\",\"name\":\"dogBreed\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"NftMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"NftRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moddedRng\",\"type\":\"uint256\"}],\"name\":\"getBreedFromModdedRng\",\"outputs\":[{\"internalType\":\"enum RandomIpfsNft.Breed\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChanceArray\",\"outputs\":[{\"internalType\":\"uint256[3]\",\"name\":\"\",\"type\":\"uint256[3]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDogTokenUris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestNft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_requestIdToSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_tokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RandomipfsNft.sol\":\"RandomIpfsNft\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/RandomipfsNft.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport '@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol';\\nimport '@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol';\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n\\nerror RandomIpfsNft__RangeOutOfBounds();\\nerror RandomIpfsNft__NeedMoreETHSent();\\nerror RandomIpfsNft__TransferFailed();\\n\\ncontract RandomIpfsNft is VRFConsumerBaseV2, ERC721URIStorage, Ownable {\\n    // when we mint an NFT, we will trigger a Chainlink VRF call to get us a random number\\n    // using that number, we will get a random NFT.\\n    // Pug, Shiba Inu, St. Bernard\\n    // Pug super rare\\n    // Shiba sort of rare\\n    // St. bernard common\\n\\n    // Users have to pay to mint an NFT\\n    // The owner of the contract can withdraw the ETH\\n\\n    // Type Declaration\\n    enum Breed {\\n        PUG,\\n        SHIBA_INU,\\n        ST_BERNARD\\n    }\\n\\n    // Chainlink VRF Variables \\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\\n    uint64 private immutable i_subscriptionId;\\n    bytes32 private immutable i_gasLane;\\n    uint32 private immutable i_callbackGasLimit;\\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\\n    uint32 private constant NUM_WORDS = 1;\\n\\n    // VRF Helpers\\n    mapping(uint256 => address) public s_requestIdToSender;\\n\\n    // NFT Variables\\n    uint256 public s_tokenCounter;\\n    uint256 internal constant MAX_CHANCE_VALUE = 100;\\n    string[] internal s_dogTokenUris;\\n    uint256 internal immutable i_mintFee;\\n\\n    // Events\\n    event NftRequested(uint256 indexed requestId, address requester);\\n    event NftMinted(Breed dogBreed, address minter);\\n\\n    constructor(address vrfCoordinatorV2, uint64 subscriptionId, bytes32 gasLane, uint32 callbackGasLimit, string[] memory dogTokenUris, uint256 mintFee) VRFConsumerBaseV2 (vrfCoordinatorV2) ERC721(\\\"Random IPFS NFT\\\", \\\"RIN\\\") {\\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\\n        i_subscriptionId = subscriptionId;\\n        i_gasLane = gasLane;\\n        i_callbackGasLimit = callbackGasLimit;\\n        s_dogTokenUris = dogTokenUris;\\n        i_mintFee = mintFee;\\n    }\\n\\n    function requestNft() public payable returns (uint256 requestId) {\\n        if (msg.value < i_mintFee) {\\n            revert RandomIpfsNft__NeedMoreETHSent();\\n        }\\n        requestId = i_vrfCoordinator.requestRandomWords(\\n            i_gasLane,\\n            i_subscriptionId,\\n            REQUEST_CONFIRMATIONS,\\n            i_callbackGasLimit,\\n            NUM_WORDS\\n        );\\n        s_requestIdToSender[requestId] = msg.sender;\\n        emit NftRequested(requestId, msg.sender);\\n    }\\n\\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\\n        address dogOwner = s_requestIdToSender[requestId];\\n        uint256 newTokenId = s_tokenCounter;\\n        uint256 moddedRng = randomWords[0] % MAX_CHANCE_VALUE;\\n        Breed dogBreed = getBreedFromModdedRng(moddedRng);\\n        s_tokenCounter += s_tokenCounter;\\n        _safeMint(dogOwner, newTokenId);\\n        _setTokenURI(newTokenId, s_dogTokenUris[uint256(dogBreed)]);\\n        emit NftMinted(dogBreed, dogOwner);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        uint256 amount = address(this).balance;\\n        (bool success, ) = payable(msg.sender).call{value: amount}(\\\"\\\");\\n        if(!success) { revert RandomIpfsNft__TransferFailed();}\\n    }\\n\\n    function getBreedFromModdedRng(uint256 moddedRng) public pure returns (Breed) {\\n        uint256 cummulativeSum = 0;\\n        uint256[3] memory chanceArray = getChanceArray();\\n        for(uint256 i = 0; i < chanceArray.length; i++) {\\n            if(moddedRng >= cummulativeSum && moddedRng < cummulativeSum + chanceArray[i]) {\\n                return Breed(i);\\n            }\\n            cummulativeSum += chanceArray[i];\\n        }\\n        revert RandomIpfsNft__RangeOutOfBounds(); \\n    }\\n\\n    function getChanceArray() public pure returns (uint256[3] memory) {\\n        return [10, 30, MAX_CHANCE_VALUE];\\n    }\\n\\n    function getMintFee() public view returns (uint256) {\\n        return i_mintFee;\\n    }\\n\\n    function getDogTokenUris(uint256 index) public view returns (string memory) {\\n        return s_dogTokenUris[index];\\n    }\\n\\n    function getTokenCounter() public view returns (uint256) {\\n        return s_tokenCounter;\\n    }\\n    // function tokenURI(uint256) public view override returns (string memory) {}\\n}\",\"keccak256\":\"0x3c1755cae117c0f1a0fd68b08312cdea24dec8644ce0c6fc9501139e82b99ee5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":292,"contract":"contracts/RandomipfsNft.sol:RandomIpfsNft","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":294,"contract":"contracts/RandomipfsNft.sol:RandomIpfsNft","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":298,"contract":"contracts/RandomipfsNft.sol:RandomIpfsNft","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":302,"contract":"contracts/RandomipfsNft.sol:RandomIpfsNft","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":306,"contract":"contracts/RandomipfsNft.sol:RandomIpfsNft","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":312,"contract":"contracts/RandomipfsNft.sol:RandomIpfsNft","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1280,"contract":"contracts/RandomipfsNft.sol:RandomIpfsNft","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":161,"contract":"contracts/RandomipfsNft.sol:RandomIpfsNft","label":"_owner","offset":0,"slot":"7","type":"t_address"},{"astId":2039,"contract":"contracts/RandomipfsNft.sol:RandomIpfsNft","label":"s_requestIdToSender","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_address)"},{"astId":2041,"contract":"contracts/RandomipfsNft.sol:RandomIpfsNft","label":"s_tokenCounter","offset":0,"slot":"9","type":"t_uint256"},{"astId":2047,"contract":"contracts/RandomipfsNft.sol:RandomIpfsNft","label":"s_dogTokenUris","offset":0,"slot":"10","type":"t_array(t_string_storage)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_string_storage)dyn_storage":{"base":"t_string_storage","encoding":"dynamic_array","label":"string[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}